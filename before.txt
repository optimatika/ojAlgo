Will inlcude ineq 6 with slack=3.552713678800501E-15 L=-9.999999999999999E-6
Will inlcude ineq 8 with slack=-8.881784197001252E-16 L=-1.0000000000000004E-5
Will inlcude ineq 9 with slack=8.881784197001252E-16 L=-9.999999999999999E-6
Initial solution: { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
E-slack: { -3.637978807091713E-12, -1.1368683772161603E-13, 7.673861546209082E-13 }
I-slack: { 0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0 }

PerformIteration 1
Last Incl/Excl: 9/-1 => [6, 8, 9] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -4.9, -4.9, -4.9]
Relative error NaN in solution for L=[-5.174614687402384E-10, -1.3936788788113143E-6, -4.0569269473814645E-7, -4.549162989072992E-4, -7.510756963025753E-4, -4.4897465055916566E-4]
Current: 94.55682107601183 - { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
Step: 94.55682107560614 - { -0.5500625719872888, -6.224863606558188, -0.39688855895629105, 8.881784197001252E-16, -3.552713678800501E-15, 1.7763568394002505E-15, -14.39698255448382, 1.3936788788113143E-8, -94.55682107560614 }
Included-change: { 3.552713678800501E-15, -8.881784197001252E-16, 1.7763568394002505E-15 }
Numer/slack: [0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 9.999999999999996, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0]
Denom/chang: [-0.5500625719872888, -6.224863606558188, 0.39688855895629105, -0.39688855895629105, 6.224863606558188, 8.881784197001252E-16, -3.552713678800501E-15, 14.39698255448382, -14.39698255448382, -1.7763568394002505E-15, 1.3936788788113143E-8, 94.55682107560614, -94.55682107560614, -1.3936788788113143E-8, 0.5500625719872888]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 5.573530877525393E-19, 0.006519725954226639, -0.08166623761207138, 0.005622613154628135, 1.125899906842624E16, -2.814749767106559E15, 6946.89992184549, -6944.899921845483, -5.62949953421312E15, 7.175254035943432E12, 1058.5651641254096, -1056.5651641254012, -7.175254035943432E12, 0.0]).
Best so far: 0.006519725954226639 @ 2 (2).
Best so far: 0.005622613154628135 @ 4 (4).
Best so far: 0.0 @ 14 (17).
Do nothing because step length 0.0 and size 94.55682107560614 but add constraint 17
Post iteration
    Solution: { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
    L: { -5.174614687402384E-10, -1.3936788788113143E-6, -4.0569269473814645E-7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.549162989072992E-4, 0.0, -7.510756963025753E-4, -4.4897465055916566E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -3.637978807091713E-12, -1.1368683772161603E-13, 7.673861546209082E-13 }
I-slack: { 0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0 }

NeedsAnotherIteration?
Suggested to include: 17

PerformIteration 2
Last Incl/Excl: 17/-1 => [6, 8, 9, 17] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 94.55682107601183 - { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
Step: 94.62382800136868 - { -0.0, -10.62065627182578, -0.638357628989447, 8.881784197001252E-16, -3.552713678800501E-15, 8.881784197001252E-16, -13.655917605021099, -1.9440859028454953, -94.62382800136868 }
Included-change: { 3.552713678800501E-15, -8.881784197001252E-16, 8.881784197001252E-16, 0.0 }
Numer/slack: [0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 9.999999999999996, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0]
Denom/chang: [0.0, -10.62065627182578, 0.638357628989447, -0.638357628989447, 10.62065627182578, 8.881784197001252E-16, -3.552713678800501E-15, 13.655917605021099, -13.655917605021099, -8.881784197001252E-16, -1.9440859028454953, 94.62382800136868, -94.62382800136868, 1.9440859028454953]
Looking for the largest possible step length (smallest positive scalar) among these: [NaN, 3.2666973331556537E-19, 0.004053534447233366, -0.05077466593850778, 0.003295464903882367, 1.125899906842624E16, -2.814749767106559E15, 7323.886967931073, -7321.778434038156, -1.125899906842624E16, -51438.056236935445, 1057.8155516983334, -1055.816967978498, 51438.056236935445]).
Best so far: 0.004053534447233366 @ 2 (2).
Best so far: 0.003295464903882367 @ 4 (4).
Performing update with step length 0.003295464903882367 adding constraint 4
Post iteration
    Solution: { 0.0, -0.017499999999999998, -0.017016080523697345, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.351979957337909, -0.006406666862959795, 94.24499157176231 }
    L: { -7.410649495144661, 194.40859028454955, 67.00692535684426, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -13457.527152853452, 0.0, 39542.93614550826, 1530.2551609713928, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 78775.35174381454 }
E-slack: { -1.8189894035458565E-12, -1.1368683772161603E-13, 7.673861546209082E-13 }
I-slack: { 0.0, 0.035, 4.8391947630265636E-4, 0.03451608052369735, 3.469446951953614E-18, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.35197995734, 99985.64802004266, 10.0, 100000.00640666686, 100094.24499157176, 99905.75500842824, 99999.99359333314, 0.0 }

NeedsAnotherIteration?
Suggested to include: 4

PerformIteration 3
Last Incl/Excl: 4/-1 => [4, 6, 8, 9, 17] / [0, 1, 2, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 94.24499157176231 - { 0.0, -0.017499999999999998, -0.017016080523697345, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.351979957337909, -0.006406666862959795, 94.24499157176231 }
Step: 94.34705537421505 - { -1.0267089342030472E-15, 2.8935187579293142E-15, -0.054878398670539154, 4.440892098500626E-15, -3.552713678800501E-15, 8.881784197001252E-16, -1.3174596740287026, 2.749663943598551, -94.34705537421505 }
Included-change: { -2.8935187579293142E-15, 3.552713678800501E-15, -4.440892098500626E-15, 8.881784197001252E-16, 1.0267089342030472E-15 }
Numer/slack: [0.0, 0.035, 4.8391947630265636E-4, 0.03451608052369735, 10.0, 9.999999999999996, 100014.35197995734, 99985.64802004266, 10.0, 100000.00640666686, 100094.24499157176, 99905.75500842824, 99999.99359333314]
Denom/chang: [-1.0267089342030472E-15, 2.8935187579293142E-15, 0.054878398670539154, -0.054878398670539154, 4.440892098500626E-15, -3.552713678800501E-15, 1.3174596740287026, -1.3174596740287026, -8.881784197001252E-16, 2.749663943598551, 94.34705537421505, -94.34705537421505, -2.749663943598551]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 1.2095998999172557E13, 0.008818032013066792, -0.628955679463492, 2.251799813685248E15, -2.814749767106559E15, 75914.5452051069, -75892.75785139845, -1.125899906842624E16, 36368.08295772845, 1060.9154106035558, -1058.9175741857057, -36368.078297764914]).
Best so far: 0.008818032013066792 @ 2 (2).
Performing update with step length 0.008818032013066792 adding constraint 2
Post iteration
    Solution: { -9.053552249904158E-18, -0.017499999999999974, -0.0175, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.340362555756398, 0.01783995781686771, 93.4130362171339 }
    L: { -130.34520283309206, -274.32572767355913, 102.06380245273138, 0.0, 0.0, 0.0, 0.0, 163524.54186984632, 0.0, -142214.71877202214, 0.0, 3186.5674784639396, 134348.8600802684, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1385572.1024214267 }
E-slack: { -1.8189894035458565E-12, -5.6843418860808015E-14, 7.673861546209082E-13 }
I-slack: { 9.053552249904158E-18, 0.034999999999999976, 0.0, 0.035, 2.7755575615628914E-17, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.34036255575, 99985.65963744425, 10.0, 99999.98216004219, 100093.41303621713, 99906.58696378287, 100000.01783995781, -9.053552249904158E-18 }

NeedsAnotherIteration?
Suggested to include: 2

PerformIteration 4
Last Incl/Excl: 2/-1 => [2, 4, 6, 8, 9, 17] / [0, 1, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 93.4130362171339 - { -9.053552249904158E-18, -0.017499999999999974, -0.0175, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.340362555756398, 0.01783995781686771, 93.4130362171339 }
Step: 7.815970093361102E-12 - { 5.887369911322461E-14, -2.751271432899216E-15, 3.4208746946262636E-15, -5.417888360170764E-14, -3.552713678800501E-15, 8.881784197001252E-16, 7.087663789206999E-13, -1.2829320938934075E-13, 7.815970093361102E-12 }
Included-change: { -3.4208746946262636E-15, 2.751271432899216E-15, 3.552713678800501E-15, 5.417888360170764E-14, 8.881784197001252E-16, -5.887369911322461E-14 }
Step too small (or freaky large)!
Post iteration
    Solution: { -9.053552249904158E-18, -0.017499999999999974, -0.0175, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.340362555756398, 0.01783995781686771, 93.4130362171339 }
    L: { -143.40362555757108, -1.7839957816739416, -93413.03621714171, 0.0, 0.0, 1.6093925679509656E9, 0.0, -8.822603369964741E7, 0.0, 9630699.361976052, 0.0, -2.8024089265210673E7, -4397822.2265204955, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1524383.3960903632 }
E-slack: { -1.8189894035458565E-12, -5.6843418860808015E-14, 7.673861546209082E-13 }
I-slack: { 9.053552249904158E-18, 0.034999999999999976, 0.0, 0.035, 2.7755575615628914E-17, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.34036255575, 99985.65963744425, 10.0, 99999.98216004219, 100093.41303621713, 99906.58696378287, 100000.01783995781, -9.053552249904158E-18 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 1.6093925679509656E9, -8.822603369964741E7, 9630699.361976052, -2.8024089265210673E7, -4397822.2265204955, 1524383.3960903632 }.
Best so far: -8.822603369964741E7 @ 1 (4).
Suggest to exclude: -8.822603369964741E7 @ 1 (4).
Suggested to exclude: 4

PerformIteration 5
Last Incl/Excl: 2/4 => [2, 6, 8, 9, 17] / [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 93.4130362171339 - { -9.053552249904158E-18, -0.017499999999999974, -0.0175, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.340362555756398, 0.01783995781686771, 93.4130362171339 }
Step: 93.32921226097507 - { 9.053552249904158E-18, 0.9884085105873883, 1.1622647289044608E-15, 8.881784197001252E-16, -3.552713678800501E-15, 8.881784197001252E-16, -0.15533096315806105, 3.157573030979937, -93.32921226097507 }
Included-change: { -1.1622647289044608E-15, 3.552713678800501E-15, -8.881784197001252E-16, 8.881784197001252E-16, -9.053552249904158E-18 }
Numer/slack: [9.053552249904158E-18, 0.034999999999999976, 0.035, 2.7755575615628914E-17, 10.0, 9.999999999999996, 100014.34036255575, 99985.65963744425, 10.0, 99999.98216004219, 100093.41303621713, 99906.58696378287, 100000.01783995781]
Denom/chang: [9.053552249904158E-18, 0.9884085105873883, 1.1622647289044608E-15, -0.9884085105873883, 8.881784197001252E-16, -3.552713678800501E-15, 0.15533096315806105, -0.15533096315806105, -8.881784197001252E-16, 3.157573030979937, 93.32921226097507, -93.32921226097507, -3.157573030979937]
Looking for the largest possible step length (smallest positive scalar) among these: [1.0, 0.035410459971859494, 3.0113621388984812E13, -2.808107712380422E-17, 1.125899906842624E16, -2.814749767106559E15, 643878.9686817533, -643694.3260031244, -1.125899906842624E16, 31669.8873403437, 1072.4767798996033, -1070.4749835926568, -31669.898640134797]).
Best so far: 0.035410459971859494 @ 1 (1).
Performing update with step length 0.035410459971859494 adding constraint 1
Post iteration
    Solution: { -8.732961800355789E-18, 0.0175, -0.01749999999999996, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.334862214903099, 0.12965107123860584, 90.10820588216146 }
    L: { -141.85031592598335, -317.5412988796804, -83.82395615882501, 0.0, 0.0, 3255457.9512055824, 0.0, 0.0, 0.0, -134468.57033372874, 0.0, -56901.31722561506, 137582.84114814477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1507871.6837656419 }
E-slack: { -1.8189894035458565E-12, -5.6843418860808015E-14, 7.673861546209082E-13 }
I-slack: { 8.732961800355789E-18, 0.0, 4.163336342344337E-17, 0.03499999999999996, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892876, 100090.10820588216, 99909.89179411784, 100000.12965107124, -8.732961800355789E-18 }

NeedsAnotherIteration?
Suggested to include: 1

PerformIteration 6
Last Incl/Excl: 1/4 => [1, 2, 6, 8, 9, 17] / [0, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 90.10820588216146 - { -8.732961800355789E-18, 0.0175, -0.01749999999999996, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.334862214903099, 0.12965107123860584, 90.10820588216146 }
Step: 1.2065015653206501E-11 - { 1.3467872149810006E-13, -4.919675777870225E-15, 6.6231742312794495E-15, -5.329070518200751E-15, -3.552713678800501E-15, 8.881784197001252E-16, 1.5898393712632242E-12, -3.4333647036532966E-13, 1.2065015653206501E-11 }
Included-change: { -4.919675777870225E-15, -6.6231742312794495E-15, 3.552713678800501E-15, 5.329070518200751E-15, 8.881784197001252E-16, -1.3467872149810006E-13 }
Step too small (or freaky large)!
Post iteration
    Solution: { -8.732961800355789E-18, 0.0175, -0.01749999999999996, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.334862214903099, 0.12965107123860584, 90.10820588216146 }
    L: { -143.3486221490469, -12.965107123826249, -90108.20588217353, 0.0, 8.51019092648544E7, 1.5525185141080792E9, 0.0, 0.0, 0.0, 9284910.273790985, 0.0, -2.703375827585444E7, -4237221.446915866, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1523798.7087620285 }
E-slack: { -1.8189894035458565E-12, -5.6843418860808015E-14, 7.673861546209082E-13 }
I-slack: { 8.732961800355789E-18, 0.0, 4.163336342344337E-17, 0.03499999999999996, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892876, 100090.10820588216, 99909.89179411784, 100000.12965107124, -8.732961800355789E-18 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 8.51019092648544E7, 1.5525185141080792E9, 9284910.273790985, -2.703375827585444E7, -4237221.446915866, 1523798.7087620285 }.
Best so far: -2.703375827585444E7 @ 3 (8).
Suggest to exclude: -2.703375827585444E7 @ 3 (8).
Suggested to exclude: 8

PerformIteration 7
Last Incl/Excl: 1/8 => [1, 2, 6, 9, 17] / [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 90.10820588216146 - { -8.732961800355789E-18, 0.0175, -0.01749999999999996, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.334862214903099, 0.12965107123860584, 90.10820588216146 }
Step: 90.01251368107918 - { -5.046215053011678E-16, -2.255140518769849E-16, 1.3530843112619095E-16, 3.0004171227026495, -3.552713678800501E-15, 8.881784197001252E-16, 8.881784197001252E-15, -3.0004171227026584, -90.01251368107918 }
Included-change: { -2.255140518769849E-16, -1.3530843112619095E-16, 3.552713678800501E-15, 8.881784197001252E-16, 5.046215053011678E-16 }
Numer/slack: [8.732961800355789E-18, 0.03499999999999996, 0.035, 10.0, 9.999999999999996, -8.881784197001252E-16, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892876, 100090.10820588216, 99909.89179411784, 100000.12965107124]
Denom/chang: [-5.046215053011678E-16, 1.3530843112619095E-16, 2.255140518769849E-16, 3.0004171227026495, -3.552713678800501E-15, -3.0004171227026495, -8.881784197001252E-15, 8.881784197001252E-15, -8.881784197001252E-16, -3.0004171227026584, 90.01251368107918, -90.01251368107918, 3.0004171227026584]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.017305964388386084, 2.5866828628999744E14, 1.5520097177399866E14, 3.3328699280960046, -2.814749767106559E15, 2.9601831458023793E-16, -1.1260613030429477E19, 1.1257385106423003E19, -1.125899906842624E16, -33328.6560699443, 1111.9577057975364, -1109.9555795998074, 33328.742491975594]).
Performing update with step length 1.0 adding constraint -1
Post iteration
    Solution: { -5.133544671015236E-16, 0.017499999999999776, -0.017499999999999825, -1.9995828772973514, -5.0, 5.0, 14.334862214903108, -2.8707660514640527, 0.09569220108227228 }
    L: { -143.3486221490311, 287.07660514640526, -95.69220108227587, 0.0, 204593.3330888477, 6524884.665908045, 0.0, 0.0, 0.0, -131752.56203333504, 0.0, 0.0, 112233.51835900174, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1523798.7087609342 }
E-slack: { 1.8189894035458565E-12, 5.6843418860808015E-14, 0.0 }
I-slack: { 5.133544671015236E-16, 2.255140518769849E-16, 1.7694179454963432E-16, 0.03499999999999982, 0.03499999999999978, 6.999582877297351, 0.0, 10.0, 3.0004171227026486, 0.0, 100014.3348622149, 99985.6651377851, 10.0, 100002.87076605146, 100000.09569220108, 99999.90430779892, 99997.12923394854, -5.133544671015236E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 204593.3330888477, 6524884.665908045, -131752.56203333504, 112233.51835900174, 1523798.7087609342 }.
Best so far: -131752.56203333504 @ 2 (6).
Suggest to exclude: -131752.56203333504 @ 2 (6).
Suggested to exclude: 6

PerformIteration 8
Last Incl/Excl: 1/6 => [1, 2, 9, 17] / [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 14.334862214903108 - { -5.133544671015236E-16, 0.017499999999999776, -0.017499999999999825, -1.9995828772973514, -5.0, 5.0, 14.334862214903108, -2.8707660514640527, 0.09569220108227228 }
Step: 11.399857686558155 - { -1.7111815570050794E-16, 8.153200337090993E-16, -6.938893903907228E-17, 3.9709098200592456, 11.399857686558155, 0.0, -11.386089037334154, -4.531027403855537, 0.15103424811882332 }
Included-change: { 8.153200337090993E-16, 6.938893903907228E-17, 0.0, 1.7111815570050794E-16 }
Numer/slack: [5.133544671015236E-16, 0.03499999999999982, 0.03499999999999978, 6.999582877297351, 0.0, 10.0, 3.0004171227026486, 100014.3348622149, 99985.6651377851, 10.0, 100002.87076605146, 100000.09569220108, 99999.90430779892, 99997.12923394854]
Denom/chang: [-1.7111815570050794E-16, -6.938893903907228E-17, -8.153200337090993E-16, 3.9709098200592456, -11.399857686558155, 11.399857686558155, -3.9709098200592456, 11.386089037334154, -11.386089037334154, 0.0, -4.531027403855537, -0.15103424811882332, 0.15103424811882332, 4.531027403855537]
Looking for the largest possible step length (smallest positive scalar) among these: [-2.9999999999999987, -5.04403158265493E14, -4.292792836302063E13, 1.7627151445088516, -0.0, 0.8772039331500813, -0.755599411385747, 8783.90591662117, -8781.387955946893, Infinity, -22070.683280563942, -662102.1188090261, 662100.8516500569, 22069.416121575225]).
Best so far: 0.8772039331500813 @ 5 (7).
Performing update with step length 0.8772039331500813 adding constraint 7
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -29.48773177568954, 740.179345531959, -246.72644920109562, 0.0, 474060.3082548439, 8658278.930782055, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -17347.57062723088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 313455.17613256106 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Suggested to include: 7

PerformIteration 9
Last Incl/Excl: 7/6 => [1, 2, 7, 9, 17] / [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 6.8454011113369315 - { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
Step: 1.7763568394002505E-15 - { 3.2122367491438143E-16, -1.5334955527634975E-15, -7.979727989493313E-17, -2.220446049250313E-16, 0.0, 0.0, 1.7763568394002505E-15, 0.0, 6.661338147750939E-16 }
Included-change: { -1.5334955527634975E-15, 7.979727989493313E-17, 0.0, 0.0, -3.2122367491438143E-16 }
Step too small (or freaky large)!
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -43.46940128156568, 684.5401111336931, -228.18003757247, 0.0, 440970.82355851494, 8396306.506015357, 0.0, 0.0, 0.0, 0.0, 16178.696415093505, 0.0, -1435.5225615921809, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 462080.601476562 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 440970.82355851494, 8396306.506015357, 16178.696415093505, -1435.5225615921809, 462080.601476562 }.
Best so far: -1435.5225615921809 @ 3 (9).
Suggest to exclude: -1435.5225615921809 @ 3 (9).
Suggested to exclude: 9

PerformIteration 10
Last Incl/Excl: 7/9 => [1, 2, 7, 17] / [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16]
Current: 6.8454011113369315 - { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
Step: 0.12318739254511968 - { 1.501055192138736E-16, -1.3079815008865125E-15, -7.979727989493313E-17, -0.019819590406089382, 0.0, -0.12318739254511968, 0.1110937448345588, 0.07304846922857688, -0.002434948980891888 }
Included-change: { -1.3079815008865125E-15, 7.979727989493313E-17, 0.0, -1.501055192138736E-16 }
Step too small (or freaky large)!
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -44.580338729911254, 677.2352642108355, -225.74508859157746, 0.0, 436512.63199534215, 8344514.273308908, 0.0, 0.0, 0.0, 0.0, 17578.955691504685, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 473889.88868089346 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 436512.63199534215, 8344514.273308908, 17578.955691504685, 473889.88868089346 }.
Nothing to exclude
Stop!
Will inlcude ineq 6 with slack=3.552713678800501E-15 L=-9.999999999999999E-6
Will inlcude ineq 8 with slack=-8.881784197001252E-16 L=-1.0000000000000004E-5
Will inlcude ineq 9 with slack=8.881784197001252E-16 L=-9.999999999999999E-6
Initial solution: { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
E-slack: { -3.637978807091713E-12, -1.1368683772161603E-13, 7.673861546209082E-13 }
I-slack: { 0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0 }

PerformIteration 1
Last Incl/Excl: 9/-1 => [6, 8, 9] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -4.9, -4.9, -4.9]
Relative error 2.9254831378399014E-10 in solution for L=[-5.174614687230402E-10, -1.393678878812342E-6, -4.0569269473839187E-7, -4.549162989072829E-4, -7.510756963027501E-4, -4.489746505591331E-4]
Current: 94.55682107601183 - { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
Step: 94.55682107560614 - { -0.5500625719690071, -6.224863606568113, -0.39688855882202345, 1.7763568394002505E-14, -2.1938006966593093E-13, -1.545430450278218E-13, -14.39698255448382, 1.3936788788123418E-8, -94.55682107560614 }
Included-change: { 2.1938006966593093E-13, -1.7763568394002505E-14, -1.545430450278218E-13 }
Numer/slack: [0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 9.999999999999996, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0]
Denom/chang: [-0.5500625719690071, -6.224863606568113, 0.39688855882202345, -0.39688855882202345, 6.224863606568113, 1.7763568394002505E-14, -2.1938006966593093E-13, 14.39698255448382, -14.39698255448382, 1.545430450278218E-13, 1.3936788788123418E-8, 94.55682107560614, -94.55682107560614, -1.3936788788123418E-8, 0.5500625719690071]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 5.573530877516507E-19, 0.0065197259564322655, -0.0816662376396991, 0.00562261315461917, 5.62949953421312E14, -4.5582992179863305E13, 6946.89992184549, -6944.899921845483, 6.470689119785195E13, 7.175254035938142E12, 1058.5651641254096, -1056.5651641254012, -7.175254035938142E12, 0.0]).
Best so far: 0.0065197259564322655 @ 2 (2).
Best so far: 0.00562261315461917 @ 4 (4).
Best so far: 0.0 @ 14 (17).
Do nothing because step length 0.0 and size 94.55682107560614 but add constraint 17
Post iteration
    Solution: { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
    L: { -5.174614687230402E-10, -1.393678878812342E-6, -4.0569269473839187E-7, -1.4444474582904269E-34, -6.776263578034403E-21, 0.0, 0.0, 0.0, 0.0, -4.549162989072829E-4, 0.0, -7.510756963027501E-4, -4.489746505591331E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -3.637978807091713E-12, -1.1368683772161603E-13, 7.673861546209082E-13 }
I-slack: { 0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0 }

NeedsAnotherIteration?
Suggested to include: 17

PerformIteration 2
Last Incl/Excl: 17/-1 => [6, 8, 9, 17] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -4.9, -4.9, -4.9, 0.0]
Relative error 1.8879628098814204E-12 in solution for L=[-7.400567008187475, 194.14408956810115, 66.91575973652225, -13439.217646003808, 39489.13638776682, 1528.1731866548253, 78668.17470662975]
Current: 94.55682107601183 - { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
Step: 94.62373683574835 - { -1.455191522836685E-6, -10.621055710986257, -0.6384336737958866, 8.740462487111245E-8, -3.9924637817989606E-8, -1.0026264263274243E-9, -13.656925853716817, -1.9414408956810114, -94.62373683574835 }
Included-change: { 3.9924637817989606E-8, -8.740462487111245E-8, -1.0026264263274243E-9, 1.455191522836685E-6 }
Nonzero Included-change! -8.740462487111245E-8
Numer/slack: [0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 9.999999999999996, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0]
Denom/chang: [-1.455191522836685E-6, -10.621055710986257, 0.6384336737958866, -0.6384336737958866, 10.621055710986257, 8.740462487111245E-8, -3.9924637817989606E-8, 13.656925853716817, -13.656925853716817, 1.0026264263274243E-9, -1.9414408956810114, 94.62373683574835, -94.62373683574835, 1.9414408956810114]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 3.2665744784342593E-19, 0.00405305162457678, -0.05076861809078013, 0.003295340967263409, 1.1441042181401819E8, -2.5047190272804692E8, 7323.346267954951, -7321.237889728585, 9.97380453717897E9, -51508.135129152295, 1057.8165708549868, -1055.817985209608, 51508.135129152295]).
Best so far: 0.00405305162457678 @ 2 (2).
Best so far: 0.003295340967263409 @ 4 (4).
Performing update with step length 0.003295340967263409 adding constraint 4
Post iteration
    Solution: { -4.795352240418155E-9, -0.017499999999999998, -0.01701625200137713, -4.999999999711973, -5.000000000131561, 4.999999999996695, 14.351978327282934, -0.006397709719058203, 94.24500359954143 }
    L: { -7.400567008187475, 194.14408956810115, 66.91575973652225, -1.4444474582904269E-34, -6.776263578034403E-21, 0.0, 0.0, 0.0, 0.0, -13439.217646003808, 0.0, 39489.13638776682, 1528.1731866548253, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 78668.17470662975 }
E-slack: { -0.0025374311098858016, -3.6559183115514315E-5, -0.0030684259071733777 }
Nonzero E-slack! 0.0030684259071733777

NeedsAnotherIteration?
Suggested to include: 4

PerformIteration 3
Last Incl/Excl: 4/-1 => [4, 6, 8, 9, 17] / [0, 1, 2, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -4.9, -4.9, -4.9, 0.0]
Relative error 1.574224064515924E-10 in solution for L=[-130.30918732380408, -274.1974724316395, 102.05088938443289, 163477.03633952248, -142176.7654833878, 3195.5190821663746, 134310.21261872543, 1385189.256840315]
Current: 94.24500359954143 - { -4.795352240418155E-9, -0.017499999999999998, -0.01701625200137713, -4.999999999711973, -5.000000000131561, 4.999999999996695, 14.351978327282934, -0.006397709719058203, 94.24500359954143 }
Step: 94.34705448892586 - { 1.1642011717917522E-4, 5.687512457368954E-6, -0.054858567694572424, -2.2022767609541916E-8, -6.400595760069905E-7, 5.8117833212634196E-8, -1.3210595949025272, 2.748372434035453, -94.34705448892586 }
Included-change: { -5.687512457368954E-6, 6.400595760069905E-7, 2.2022767609541916E-8, 5.8117833212634196E-8, -1.1642011717917522E-4 }
Nonzero Included-change! -1.1642011717917522E-4
Numer/slack: [4.795352240418155E-9, 0.035, 4.8374799862287154E-4, 0.03451625200137713, 9.999999999711973, 10.00000000013156, 100014.35197832728, 99985.64802167272, 9.999999999996696, 100000.00639770972, 100094.24500359954, 99905.75499640046, 99999.99360229028]
Denom/chang: [1.1642011717917522E-4, 5.687512457368954E-6, 0.054858567694572424, -0.054858567694572424, -2.2022767609541916E-8, -6.400595760069905E-7, 1.3210595949025272, -1.3210595949025272, -5.8117833212634196E-8, 2.748372434035453, 94.34705448892586, -94.34705448892586, -2.748372434035453]
Looking for the largest possible step length (smallest positive scalar) among these: [4.119006539941818E-5, 6153.832675065651, 0.008818093853929263, -0.6291861682125559, -4.540755356914915E8, -1.562354564322985E7, 75707.67614439582, -75685.94816424618, -1.7206422619731808E8, 36385.17296976344, 1060.9154206859555, -1058.91758399439, -36385.16831412824]).
Best so far: 4.119006539941818E-5 @ 0 (0).
Performing update with step length 4.119006539941818E-5 adding constraint 0
Post iteration
    Solution: { 0.0, -0.017499999765730988, -0.01701851162936819, -4.9999999997128795, -5.000000000157925, 4.999999999999089, 14.351923912751824, -0.006284504078758325, 94.2411174381968 }
    L: { -130.30918732380408, -274.1974724316395, 102.05088938443289, -1.4444474582904269E-34, -6.776263578034403E-21, 0.0, 0.0, 163477.03633952248, 0.0, -142176.7654833878, 0.0, 3195.5190821663746, 134310.21261872543, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1385189.256840315 }
E-slack: { -0.0023185783174994867, -3.525723587927132E-5, -0.0030546067318084624 }
Nonzero E-slack! 0.0030546067318084624

NeedsAnotherIteration?
Suggested to include: 0

PerformIteration 4
Last Incl/Excl: 0/-1 => [0, 4, 6, 8, 9, 17] / [1, 2, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -4.9, -4.9, -4.9, 0.0]
Relative error 3.415286346477568E-10 in solution for L=[-130.31733898353463, -274.1476551981009, 102.07679114464942, -43.32615265186841, 163484.2980620064, -142187.3726648719, 3208.2713335851768, 134316.66673890006, 1385232.582992968]
Current: 94.2411174381968 - { 0.0, -0.017499999765730988, -0.01701851162936819, -4.9999999997128795, -5.000000000157925, 4.999999999999089, 14.351923912751824, -0.006284504078758325, 94.2411174381968 }
Step: 94.34319422934145 - { -2.328306436538696E-5, 8.597661234031884E-6, -0.05504257258150446, -1.311612249921268E-7, 2.3308170149505258E-7, 5.8115439571793104E-8, -1.32019001439836, 2.747761056059767, -94.34319422934145 }
Included-change: { -2.328306436538696E-5, -8.597661234031884E-6, -2.3308170149505258E-7, 1.311612249921268E-7, 5.8115439571793104E-8, 2.328306436538696E-5 }
Nonzero Included-change! -2.328306436538696E-5
Numer/slack: [0.03499999976573099, 4.814883706318121E-4, 0.03451851162936819, 9.99999999971288, 10.000000000157925, 100014.35192391275, 99985.64807608725, 9.999999999999089, 100000.00628450408, 100094.2411174382, 99905.7588825618, 99999.99371549592]
Denom/chang: [8.597661234031884E-6, 0.05504257258150446, -0.05504257258150446, -1.311612249921268E-7, 2.3308170149505258E-7, 1.32019001439836, -1.32019001439836, -5.8115439571793104E-8, 2.747761056059767, 94.34319422934145, -94.34319422934145, -2.747761056059767]
Looking for the largest possible step length (smallest positive scalar) among these: [4070.8744870281075, 0.008747562987155927, -0.6271238790348107, -7.624204485977583E7, 4.290341084699086E7, 75757.5431060138, -75735.80089654968, -1.7207131312575817E8, 36393.268644655014, 1060.9587891853266, -1058.9609531313745, -36393.2640703824]).
Best so far: 0.008747562987155927 @ 1 (2).
Performing update with step length 0.008747562987155927 adding constraint 2
Post iteration
    Solution: { -2.0367007207022808E-7, -0.0174999245571478, -0.0175, -5.00000000086022, -4.999999998119028, 5.000000000507457, 14.34037546744586, 0.017751708832778577, 93.41584440426614 }
    L: { -130.31733898353463, -274.1476551981009, 102.07679114464942, -43.32615265186841, -6.776263578034403E-21, 0.0, 0.0, 163484.2980620064, 0.0, -142187.3726648719, 0.0, 3208.2713335851768, 134316.66673890006, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1385232.582992968 }
E-slack: { -0.015090898763446603, 0.008849054259826516, -0.028152627803962105 }
Nonzero E-slack! 0.028152627803962105

NeedsAnotherIteration?
Suggested to include: 2

PerformIteration 5
Last Incl/Excl: 2/-1 => [0, 2, 4, 6, 8, 9, 17] / [1, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
KKT system unsolvable!
Constraints problem!
Looking for the largest negative lagrange multiplier among these: { -43.32615265186841, 7.202148437500001E-7, 163484.2980620064, -142187.3726648719, 3208.2713335851768, 134316.66673890006, 1385232.582992968 }.
Best so far: -43.32615265186841 @ 0 (0).
Best so far: -142187.3726648719 @ 3 (6).
Suggest to exclude: -142187.3726648719 @ 3 (6).
Will remove 6

PerformIteration 6
Last Incl/Excl: 2/6 => [0, 2, 4, 8, 9, 17] / [1, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -4.9, -4.9, 0.0]
Relative error 7.331314256366462E-10 in solution for L=[-228.29818862255837, -49.00699783891164, -2181.593681975179, -520812.5178091496, 4.274118479522115E7, -2080163.855485658, -659378.8048664447, 102273.05320297915, 1906001.7746494657]
Current: 93.41584440426614 - { -2.0367007207022808E-7, -0.0174999245571478, -0.0175, -5.00000000086022, -4.999999998119028, 5.000000000507457, 14.34037546744586, 0.017751708832778577, 93.41584440426614 }
Step: 91.23425072229097 - { 9.333592753361807E-5, -8.939845623195941E-6, 0.002598838806152347, -5.87802039930807E-6, -8.53393378380656, -3.7895038573765305E-7, 8.489443394809978, 0.47231826955633777, -91.23425072229097 }
Included-change: { 9.333592753361807E-5, -0.002598838806152347, 8.939845623195941E-6, 5.87802039930807E-6, -3.7895038573765305E-7, -9.333592753361807E-5 }
Nonzero Included-change! -0.002598838806152347
Numer/slack: [0.0349999245571478, 0.035, 10.00000000086022, 1.8809718227430494E-9, 9.999999998119028, 100014.34037546745, 99985.65962453255, 10.000000000507457, 99999.98224829117, 100093.41584440427, 99906.58415559573, 100000.01775170883]
Denom/chang: [-8.939845623195941E-6, 0.002598838806152347, -5.87802039930807E-6, 8.53393378380656, -8.53393378380656, -8.489443394809978, 8.489443394809978, 3.7895038573765305E-7, 0.47231826955633777, 91.23425072229097, -91.23425072229097, -0.47231826955633777]
Looking for the largest possible step length (smallest positive scalar) among these: [-3915.047980955575, 13.467553246143217, -1701253.027641307, 2.2041087620251515E-10, -1.1717925462574341, -11781.024470533748, 11777.64606872328, 2.6388678773981895E7, 211721.6053112323, 1097.103500625876, -1095.0556766197662, -211721.68047965146]).
Best so far: 2.2041087620251515E-10 @ 3 (6).
Performing update with step length 2.2041087620251515E-10 adding constraint 6
Post iteration
    Solution: { -2.036700514979745E-7, -0.01749992455714977, -0.01749999999942719, -5.000000000860221, -5.0, 5.000000000507457, 14.340375469317026, 0.01775170893688266, 93.41584438415711 }
    L: { -228.29818862255837, -49.00699783891164, -2181.593681975179, -520812.5178091496, -6.776263578034403E-21, 4.274118479522115E7, 0.0, -2080163.855485658, 0.0, 0.0, 0.0, -659378.8048664447, 102273.05320297915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1906001.7746494657 }
E-slack: { -0.015090877259353874, 0.008849050220646859, -0.028152613672460802 }
Nonzero E-slack! 0.028152613672460802

NeedsAnotherIteration?
Suggested to include: 6

PerformIteration 7
Last Incl/Excl: 6/6 => [0, 2, 4, 6, 8, 9, 17] / [1, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
KKT system unsolvable!
Constraints problem!
Looking for the largest negative lagrange multiplier among these: { -520812.5178091496, 4.274118479522115E7, -2080163.855485658, 0.0013433933734893798, -659378.8048664447, 102273.05320297915, 1906001.7746494657 }.
Best so far: -520812.5178091496 @ 0 (0).
Best so far: -2080163.855485658 @ 2 (4).
Suggest to exclude: -2080163.855485658 @ 2 (4).
Will remove 4

PerformIteration 8
Last Incl/Excl: 6/4 => [0, 2, 6, 8, 9, 17] / [1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -4.9, -4.9, -4.9, 0.0]
Relative error 3.0078937268713607E-10 in solution for L=[-141.69220832573436, -323.9749747394687, -86.02695251416702, -60500.869992691376, 3257300.5186380316, -134111.76211161923, -58205.5837181964, 137611.48517035344, 1445690.1268330084]
Current: 93.41584438415711 - { -2.036700514979745E-7, -0.01749992455714977, -0.01749999999942719, -5.000000000860221, -5.0, 5.000000000507457, 14.340375469317026, 0.01775170893688266, 93.41584438415711 }
Step: 93.32981743164295 - { 7.005286314765887E-5, 1.0143046625087564, 6.430613988870279E-4, 8.158606066288598E-7, 2.561230212805299E-6, 2.0948752030847118E-6, -0.171154636743589, 3.221998038457804, -93.32981743164295 }
Included-change: { 7.005286314765887E-5, -6.430613988870279E-4, -2.561230212805299E-6, -8.158606066288598E-7, 2.0948752030847118E-6, -7.005286314765887E-5 }
Nonzero Included-change! -6.430613988870279E-4
Numer/slack: [0.03499992455714977, 0.03499999999942719, 7.544285023086683E-8, 10.000000000860222, 10.0, 100014.34037546931, 99985.65962453069, 10.000000000507457, 99999.98224829107, 100093.41584438416, 99906.58415561584, 100000.01775170893]
Denom/chang: [1.0143046625087564, 6.430613988870279E-4, -1.0143046625087564, 8.158606066288598E-7, 2.561230212805299E-6, 0.171154636743589, -0.171154636743589, -2.0948752030847118E-6, 3.221998038457804, 93.32981743164295, -93.32981743164295, -3.221998038457804]
Looking for the largest possible step length (smallest positive scalar) among these: [0.03450632324865964, 54.42715121760238, -7.43788853777605E-8, 1.2256995765710851E7, 3904373.745867641, 584350.7501657888, -584183.1780130017, -4773554.04550229, 31036.63660085766, 1072.4698558174618, -1070.4680123133196, -31036.6476199264]).
Best so far: 0.03450632324865964 @ 0 (1).
Performing update with step length 0.03450632324865964 adding constraint 1
Post iteration
    Solution: { 2.213596688769259E-6, 0.0175, -0.017477810314928458, -4.999999972707871, -4.999999911621362, 5.000000072793898, 14.334469552096046, 0.12893101475845495, 90.19537553512245 }
    L: { -141.69220832573436, -323.9749747394687, -86.02695251416702, -60500.869992691376, -6.776263578034403E-21, 3257300.5186380316, 0.0, 0.0, 0.0, -134111.76211161923, 0.0, -58205.5837181964, 137611.48517035344, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1445690.1268330084 }
E-slack: { 0.9487447906594753, -0.03918134110210758, -0.4902064219905071 }
Nonzero E-slack! 0.9487447906594753

NeedsAnotherIteration?
Suggested to include: 1

PerformIteration 9
Last Incl/Excl: 1/4 => [0, 1, 2, 6, 8, 9, 17] / [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
KKT system unsolvable!
Constraints problem!
Looking for the largest negative lagrange multiplier among these: { -60500.869992691376, 9.968051910400391E-6, 3257300.5186380316, -134111.76211161923, -58205.5837181964, 137611.48517035344, 1445690.1268330084 }.
Best so far: -60500.869992691376 @ 0 (0).
Best so far: -134111.76211161923 @ 3 (6).
Suggest to exclude: -134111.76211161923 @ 3 (6).
Will remove 6

PerformIteration 10
Last Incl/Excl: 1/6 => [0, 1, 2, 8, 9, 17] / [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -4.9, -4.9, 0.0]
Relative error 1.3511273883366667E-10 in solution for L=[-226.0556828314817, -55.49570165570737, -2160.491837737842, -508893.5771956874, 2057813.409323806, 4.229205443235021E7, -653697.1219769224, 101553.76749220163, 1894082.834036004]
Current: 90.19537553512245 - { 2.213596688769259E-6, 0.0175, -0.017477810314928458, -4.999999972707871, -4.999999911621362, 5.000000072793898, 14.334469552096046, 0.12893101475845495, 90.19537553512245 }
Step: 88.03488369738461 - { -4.8779725419543176E-5, -1.4418661594392534E-5, -4.035831176887293E-4, 1.0787465614114922E-6, -8.297746390845477, 4.218780871312333E-7, 8.271098731052128, 0.4260260017986188, -88.03488369738461 }
Included-change: { -4.8779725419543176E-5, -1.4418661594392534E-5, 4.035831176887293E-4, -1.0787465614114922E-6, 4.218780871312333E-7, 4.8779725419543176E-5 }
Nonzero Included-change! -4.8779725419543176E-5
Numer/slack: [0.034977810314928456, 0.035, 9.999999972707872, 8.837863774147081E-8, 9.999999911621362, 100014.3344695521, 99985.6655304479, 10.000000072793899, 99999.87106898525, 100090.19537553513, 99909.80462446487, 100000.12893101475]
Denom/chang: [-4.035831176887293E-4, 1.4418661594392534E-5, 1.0787465614114922E-6, 8.297746390845477, -8.297746390845477, -8.271098731052128, 8.271098731052128, -4.218780871312333E-7, 0.4260260017986188, 88.03488369738461, -88.03488369738461, -0.4260260017986188]
Looking for the largest possible step length (smallest positive scalar) among these: [-86.66817015350408, 2427.409768297192, 9270017.936023189, 1.0650920572720192E-8, -1.20514648684056, -12092.025222002125, 12088.5590635102, -2.3703530422245435E7, 234727.1543210991, 1136.9378952051557, -1134.8888125745664, -234727.75959408344]).
Best so far: 1.0650920572720192E-8 @ 3 (6).
Performing update with step length 1.0650920572720192E-8 adding constraint 6
Post iteration
    Solution: { 2.213596169220278E-6, 0.01749999999984643, -0.01747781031922699, -4.99999997270786, -5.0, 5.0000000727939025, 14.33446964019086, 0.12893101929602405, 90.1953745974699 }
    L: { -226.0556828314817, -55.49570165570737, -2160.491837737842, -508893.5771956874, 2057813.409323806, 4.229205443235021E7, 0.0, 0.0, 0.0, 0.0, 0.0, -653697.1219769224, 101553.76749220163, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1894082.834036004 }
E-slack: { 0.9487448590425629, -0.03918133913464317, -0.49020636640560156 }
Nonzero E-slack! 0.9487448590425629

NeedsAnotherIteration?
Suggested to include: 6

PerformIteration 11
Last Incl/Excl: 6/6 => [0, 1, 2, 6, 8, 9, 17] / [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
KKT system unsolvable!
Constraints problem!
Looking for the largest negative lagrange multiplier among these: { -508893.5771956874, 2057813.409323806, 4.229205443235021E7, 0.0013197746276855469, -653697.1219769224, 101553.76749220163, 1894082.834036004 }.
Best so far: -508893.5771956874 @ 0 (0).
Best so far: -653697.1219769224 @ 4 (8).
Suggest to exclude: -653697.1219769224 @ 4 (8).
Will remove 8

PerformIteration 12
Last Incl/Excl: 6/8 => [0, 1, 2, 6, 9, 17] / [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -4.9, -4.9, 0.0]
Relative error 7.357212846580934E-10 in solution for L=[-143.64502174509417, 295.1797339089531, -98.39324402401873, -70880.09276532935, 209778.96652371887, 6619037.141548431, -131726.1759862753, 112019.78103807649, 1456069.3496056448]
Current: 90.1953745974699 - { 2.213596169220278E-6, 0.01749999999984643, -0.01747781031922699, -4.99999997270786, -5.0, 5.0000000727939025, 14.33446964019086, 0.12893101929602405, 90.1953745974699 }
Step: 90.09698135344587 - { -2.1176117545770293E-4, 2.923708424427962E-5, 0.0017384588082254016, 3.0630980346307974, -5.811452830073449E-8, 2.604665366945369E-6, 0.030032534318555903, -3.080728358385555, -90.09698135344587 }
Included-change: { -2.1176117545770293E-4, 2.923708424427962E-5, -0.0017384588082254016, 5.811452830073449E-8, 2.604665366945369E-6, 2.1176117545770293E-4 }
Nonzero Included-change! -0.0017384588082254016
Numer/slack: [0.03497781031922699, 0.03499999999984643, 9.99999997270786, 10.0, 2.7292140103440943E-8, 100014.33446964019, 99985.66553035981, 10.000000072793902, 99999.8710689807, 100090.19537459748, 99909.80462540252, 100000.1289310193]
Denom/chang: [0.0017384588082254016, -2.923708424427962E-5, 3.0630980346307974, -5.811452830073449E-8, -3.0630980346307974, -0.030032534318555903, 0.030032534318555903, -2.604665366945369E-6, -3.080728358385555, 90.09698135344587, -90.09698135344587, 3.080728358385555]
Looking for the largest possible step length (smallest positive scalar) among these: [20.120010985438263, -1197.1097975234775, 3.264668600106749, -1.720740113083498E8, -8.909979306859021E-9, -3330199.6231415384, 3329245.0270699486, -3839264.8052603547, -32459.81451002882, 1110.9161913199814, -1108.9140071570373, 32459.898211676154]).
Performing update with step length 1.0 adding constraint -1
Post iteration
    Solution: { -2.0954757928848264E-4, 0.01752923708409071, -0.015739351511001587, -1.9369019380770625, -5.000000058114528, 5.000002677459269, 14.364502174509417, -2.951797339089531, 0.09839324402402383 }
    L: { -143.64502174509417, 295.1797339089531, -98.39324402401873, -70880.09276532935, 209778.96652371887, 6619037.141548431, 0.0, 0.0, 0.0, -131726.1759862753, 0.0, 0.0, 112019.78103807649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1456069.3496056448 }
E-slack: { 10.393288611090611, -6.977411271408641, 11.410329619679146 }
Nonzero E-slack! 11.410329619679146

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { -70880.09276532935, 209778.96652371887, 6619037.141548431, -131726.1759862753, 112019.78103807649, 1456069.3496056448 }.
Best so far: -70880.09276532935 @ 0 (0).
Suggest to exclude: -70880.09276532935 @ 0 (0).
Suggested to exclude: 0

PerformIteration 13
Last Incl/Excl: 6/0 => [1, 2, 6, 9, 17] / [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -0.0175, -4.9, -4.9, 0.0]
Relative error 9.236149992493197E-10 in solution for L=[-143.2933239415478, 285.4590741153111, -95.15302406751842, 203558.7948291129, 6506183.000128211, -131761.69300486846, 112279.67292252512, 1523210.8877139196]
Current: 14.364502174509417 - { -2.0954757928848264E-4, 0.01752923708409071, -0.015739351511001587, -1.9369019380770625, -5.000000058114528, 5.000002677459269, 14.364502174509417, -2.951797339089531, 0.09839324402402383 }
Step: 0.09720659793641984 - { 2.5611370801925654E-4, -4.3655745685100555E-5, -0.0020489096641540527, -0.07585895218653604, 0.0, -2.473825588822365E-6, -0.035169780354635805, 0.09720659793641984, -0.003240219956505419 }
Included-change: { -4.3655745685100555E-5, 0.0020489096641540527, 0.0, -2.473825588822365E-6, -2.5611370801925654E-4 }
Nonzero Included-change! -2.5611370801925654E-4
Step too small (or freaky large)!
Post iteration
    Solution: { -2.0954757928848264E-4, 0.01752923708409071, -0.015739351511001587, -1.9369019380770625, -5.000000058114528, 5.000002677459269, 14.364502174509417, -2.951797339089531, 0.09839324402402383 }
    L: { -143.2933239415478, 285.4590741153111, -95.15302406751842, 0.0, 203558.7948291129, 6506183.000128211, 0.0, 0.0, 0.0, -131761.69300486846, 0.0, 0.0, 112279.67292252512, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1523210.8877139196 }
E-slack: { 10.393288611090611, -6.977411271408641, 11.410329619679146 }
Nonzero E-slack! 11.410329619679146

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 203558.7948291129, 6506183.000128211, -131761.69300486846, 112279.67292252512, 1523210.8877139196 }.
Only the last included needs to be excluded: -131761.69300486846 @ 2 (6).
Suggest to exclude: -131761.69300486846 @ 2 (6).
Suggested to exclude: 6

PerformIteration 14
Last Incl/Excl: 6/6 => [1, 2, 9, 17] / [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -0.0175, -4.9, 0.0]
Relative error 7.483706697122405E-10 in solution for L=[-29.448912969404386, 739.2049443894343, -246.40164881857774, 473436.23665763956, 8646880.83257588, -17324.733603873083, 313042.53144853027]
Current: 14.364502174509417 - { -2.0954757928848264E-4, 0.01752923708409071, -0.015739351511001587, -1.9369019380770625, -5.000000058114528, 5.000002677459269, 14.364502174509417, -2.951797339089531, 0.09839324402402383 }
Step: 11.419610877568978 - { 2.2118911147117612E-4, -3.7834979593753815E-5, -0.0013969838619232178, 3.9031996857374907, 11.404278266127221, -2.291926648467779E-6, -11.419610877568978, -4.440252104804813, 0.14800840479455388 }
Included-change: { -3.7834979593753815E-5, 0.0013969838619232178, -2.291926648467779E-6, -2.2118911147117612E-4 }
Nonzero Included-change! -2.2118911147117612E-4
Numer/slack: [2.0954757928848264E-4, 0.03323935151100159, 0.03502923708409071, 6.936901938077062, -5.811452830073449E-8, 10.000000058114528, 3.0630980619229375, 100014.3645021745, 99985.6354978255, 10.00000267745927, 100002.95179733909, 100000.09839324403, 99999.90160675597, 99997.04820266091]
Denom/chang: [2.2118911147117612E-4, -0.0013969838619232178, 3.7834979593753815E-5, 3.9031996857374907, -11.404278266127221, 11.404278266127221, -3.9031996857374907, 11.419610877568978, -11.419610877568978, 2.291926648467779E-6, -4.440252104804813, -0.14800840479455388, 0.14800840479455388, 4.440252104804813]
Looking for the largest possible step length (smallest positive scalar) among these: [0.9473684210526315, -23.793654613333334, 925.8426318769231, 1.7772347039852685, 5.095853235477882E-9, 0.8768639123631651, -0.7847659122118883, 8758.123685162353, -8755.607924804403, 4363142.548276825, -22521.90853963574, -675637.9715871625, 675636.6420242344, 22520.578976687775]).
Best so far: 0.9473684210526315 @ 0 (0).
Best so far: 0.8768639123631651 @ 5 (7).
Performing update with step length 0.8768639123631651 adding constraint 7
Post iteration
    Solution: { -1.5594829631734907E-5, 0.01749606095585995, -0.016964316245675782, 1.4856730090933898, 5.0, 5.000000667751501, 4.351057502739325, -6.845294171587458, 0.2281764729148074 }
    L: { -29.448912969404386, 739.2049443894343, -246.40164881857774, 0.0, 473436.23665763956, 8646880.83257588, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -17324.733603873083, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 313042.53144853027 }
E-slack: { 8.576969806183115, -2.891824265874334, 8.625821259951186 }
Nonzero E-slack! 8.625821259951186

NeedsAnotherIteration?
Suggested to include: 7

PerformIteration 15
Last Incl/Excl: 7/6 => [1, 2, 7, 9, 17] / [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -0.0175, -5.1, -4.9, 0.0]
Relative error 6.212551795051917E-10 in solution for L=[-43.443245039544756, 682.8826550955469, -227.62755222412372, 439915.54435445083, 8377875.608125699, 16218.522790977491, -1360.7168503684145, 461802.5601028814]
Current: 6.845294171587458 - { -1.5594829631734907E-5, 0.01749606095585995, -0.016964316245675782, 1.4856730090933898, 5.0, 5.000000667751501, 4.351057502739325, -6.845294171587458, 0.2281764729148074 }
Step: 0.01646762063198981 - { 1.5594829631734907E-5, -1.6300383545688607E-5, -8.239449294798577E-4, -0.00885017593531412, -9.245704912785868E-8, -5.800783950959953E-7, -0.006732998784849009, 0.01646762063198981, -5.489206906836852E-4 }
Included-change: { -1.6300383545688607E-5, 8.239449294798577E-4, -9.245704912785868E-8, -5.800783950959953E-7, -1.5594829631734907E-5 }
Nonzero Included-change! -1.6300383545688607E-5
Step too small (or freaky large)!
Post iteration
    Solution: { -1.5594829631734907E-5, 0.01749606095585995, -0.016964316245675782, 1.4856730090933898, 5.0, 5.000000667751501, 4.351057502739325, -6.845294171587458, 0.2281764729148074 }
    L: { -43.443245039544756, 682.8826550955469, -227.62755222412372, 0.0, 439915.54435445083, 8377875.608125699, 0.0, 0.0, 0.0, 0.0, 16218.522790977491, 0.0, -1360.7168503684145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 461802.5601028814 }
E-slack: { 8.576969806183115, -2.891824265874334, 8.625821259951186 }
Nonzero E-slack! 8.625821259951186

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 439915.54435445083, 8377875.608125699, 16218.522790977491, -1360.7168503684145, 461802.5601028814 }.
Best so far: -1360.7168503684145 @ 3 (9).
Suggest to exclude: -1360.7168503684145 @ 3 (9).
Suggested to exclude: 9

PerformIteration 16
Last Incl/Excl: 7/9 => [1, 2, 7, 17] / [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -0.0175, -5.1, 0.0]
Relative error 1.5898771078140257E-10 in solution for L=[-44.472527699943946, 675.5974697212071, -225.19915709231165, 435456.99000241025, 8324334.285359928, 17536.44355832537, 472743.8552848868]
Current: 6.845294171587458 - { -1.5594829631734907E-5, 0.01749606095585995, -0.016964316245675782, 1.4856730090933898, 5.0, 5.000000667751501, 4.351057502739325, -6.845294171587458, 0.2281764729148074 }
Step: 0.11068960730239308 - { 1.5594829631734907E-5, 2.4444979093738578E-5, -9.170771869414056E-4, -0.02994666951848668, -5.607726105694155E-8, -0.11068960730239308, 0.09619526725507033, 0.08931947437538756, -0.0029773158224957463 }
Included-change: { 2.4444979093738578E-5, 9.170771869414056E-4, -5.607726105694155E-8, -1.5594829631734907E-5 }
Nonzero Included-change! -1.5594829631734907E-5
Step too small (or freaky large)!
Post iteration
    Solution: { -1.5594829631734907E-5, 0.01749606095585995, -0.016964316245675782, 1.4856730090933898, 5.0, 5.000000667751501, 4.351057502739325, -6.845294171587458, 0.2281764729148074 }
    L: { -44.472527699943946, 675.5974697212071, -225.19915709231165, 0.0, 435456.99000241025, 8324334.285359928, 0.0, 0.0, 0.0, 0.0, 17536.44355832537, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 472743.8552848868 }
E-slack: { 8.576969806183115, -2.891824265874334, 8.625821259951186 }
Nonzero E-slack! 8.625821259951186

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 435456.99000241025, 8324334.285359928, 17536.44355832537, 472743.8552848868 }.
Nothing to exclude
Stop!
-0.069929073791421467647219874165 ! -0.069929 <= E2 <= -0.069929
E-slack: { 5.4569682106375694E-12, -4.04121180963557E-14, 7.367045341821754E-15 }
I-slack: { -2.7755575615628914E-17, 0.35, 3.53610475536321, 0.0, 0.12318739254506994, 999.9554196612701, 1000.0677235264211, 999.997742549114, 0.35, -2.7755575615628914E-17, 6.46389524463679, 10.0, 9.87681260745493, 1000.0445803387299, 999.9322764735789, 1000.002257450886 }
Will inlcude ineq 0 with slack=-2.7755575615628914E-17 L=0.0
Will inlcude ineq 3 with slack=0.0 L=0.0
Will inlcude ineq 9 with slack=-2.7755575615628914E-17 L=0.0
Initial solution: { 0.0175, -0.0175, 1.46389524463679, 5.0, 4.87681260745493, 4.45803387299108, -6.77235264210831, 0.22574508859158 }
E-slack: { 5.4569682106375694E-12, -4.04121180963557E-14, 7.367045341821754E-15 }
I-slack: { -2.7755575615628914E-17, 0.35, 3.53610475536321, 0.0, 0.12318739254506994, 999.9554196612701, 1000.0677235264211, 999.997742549114, 0.35, -2.7755575615628914E-17, 6.46389524463679, 10.0, 9.87681260745493, 1000.0445803387299, 999.9322764735789, 1000.002257450886 }

PerformIteration 1
Last Incl/Excl: 9/-1 => [0, 3, 9] / [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -0.175, -5.1, -0.175]
Relative error 8.432996120308136E-10 in solution for L=[-44.55587800332592, 67686.36728964919, -225621.22481913338, 43627.312246051435, 17569.310317579428, 833993.5732884669]
Current: 6.77235264210831 - { 0.0175, -0.0175, 1.46389524463679, 5.0, 4.87681260745493, 4.45803387299108, -6.77235264210831, 0.22574508859158 }
Step: 0.0037159131433908144 - { -8.597895503045794E-6, -1.0199666023254228E-4, -0.002988714278892912, 5.3062103155809837E-8, -0.0018676524666165761, -0.002446072658487175, 0.0037159131433908144, -1.238637724466085E-4 }
Included-change: { -8.597895503045794E-5, 5.3062103155809837E-8, 0.0010199666023254228 }
Nonzero Included-change! -8.597895503045794E-5
Step too small (or freaky large)!
Post iteration
    Solution: { 0.0175, -0.0175, 1.46389524463679, 5.0, 4.87681260745493, 4.45803387299108, -6.77235264210831, 0.22574508859158 }
    L: { -44.55587800332592, 67686.36728964919, -225621.22481913338, 43627.312246051435, 0.0, 0.0, 17569.310317579428, 0.0, 0.0, 0.0, 0.0, 0.0, 833993.5732884669, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { 5.4569682106375694E-12, -4.04121180963557E-14, 7.367045341821754E-15 }
I-slack: { -2.7755575615628914E-17, 0.35, 3.53610475536321, 0.0, 0.12318739254506994, 999.9554196612701, 1000.0677235264211, 999.997742549114, 0.35, -2.7755575615628914E-17, 6.46389524463679, 10.0, 9.87681260745493, 1000.0445803387299, 999.9322764735789, 1000.002257450886 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 43627.312246051435, 17569.310317579428, 833993.5732884669 }.
Nothing to exclude
Stop!
14.33578520763448807182799173529990 ! 14.272908 <= E0 <= 14.272908
-3.8697942242767642665000000000 ! -3.888271 <= E1 <= -3.888271
0.905091748614716500000000000 ! -0.069929 <= E2 <= -0.069929
Will inlcude ineq 6 with slack=3.552713678800501E-15 L=-9.999999999999999E-6
Will inlcude ineq 8 with slack=-8.881784197001252E-16 L=-1.0000000000000004E-5
Will inlcude ineq 9 with slack=8.881784197001252E-16 L=-9.999999999999999E-6
Initial solution: { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
E-slack: { -3.637978807091713E-12, -1.1368683772161603E-13, 7.673861546209082E-13 }
I-slack: { 0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0 }

PerformIteration 1
Last Incl/Excl: 9/-1 => [6, 8, 9] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -4.9, -4.9, -4.9]
Relative error NaN in solution for L=[-5.174614687402384E-10, -1.3936788788113143E-6, -4.0569269473814645E-7, -4.549162989072992E-4, -7.510756963025753E-4, -4.4897465055916566E-4]
Current: 94.55682107601183 - { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
Step: 94.55682107560614 - { -0.5500625719872888, -6.224863606558188, -0.39688855895629105, 8.881784197001252E-16, -3.552713678800501E-15, 1.7763568394002505E-15, -14.39698255448382, 1.3936788788113143E-8, -94.55682107560614 }
Included-change: { 3.552713678800501E-15, -8.881784197001252E-16, 1.7763568394002505E-15 }
Numer/slack: [0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 9.999999999999996, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0]
Denom/chang: [-0.5500625719872888, -6.224863606558188, 0.39688855895629105, -0.39688855895629105, 6.224863606558188, 8.881784197001252E-16, -3.552713678800501E-15, 14.39698255448382, -14.39698255448382, -1.7763568394002505E-15, 1.3936788788113143E-8, 94.55682107560614, -94.55682107560614, -1.3936788788113143E-8, 0.5500625719872888]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 5.573530877525393E-19, 0.006519725954226639, -0.08166623761207138, 0.005622613154628135, 1.125899906842624E16, -2.814749767106559E15, 6946.89992184549, -6944.899921845483, -5.62949953421312E15, 7.175254035943432E12, 1058.5651641254096, -1056.5651641254012, -7.175254035943432E12, 0.0]).
Best so far: 0.006519725954226639 @ 2 (2).
Best so far: 0.005622613154628135 @ 4 (4).
Best so far: 0.0 @ 14 (17).
Do nothing because step length 0.0 and size 94.55682107560614 but add constraint 17
Post iteration
    Solution: { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
    L: { -5.174614687402384E-10, -1.3936788788113143E-6, -4.0569269473814645E-7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.549162989072992E-4, 0.0, -7.510756963025753E-4, -4.4897465055916566E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -3.637978807091713E-12, -1.1368683772161603E-13, 7.673861546209082E-13 }
I-slack: { 0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0 }

NeedsAnotherIteration?
Suggested to include: 17

PerformIteration 2
Last Incl/Excl: 17/-1 => [6, 8, 9, 17] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 94.55682107601183 - { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
Step: 94.62382800136868 - { -0.0, -10.62065627182578, -0.638357628989447, 8.881784197001252E-16, -3.552713678800501E-15, 8.881784197001252E-16, -13.655917605021099, -1.9440859028454953, -94.62382800136868 }
Included-change: { 3.552713678800501E-15, -8.881784197001252E-16, 8.881784197001252E-16, 0.0 }
Numer/slack: [0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 9.999999999999996, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0]
Denom/chang: [0.0, -10.62065627182578, 0.638357628989447, -0.638357628989447, 10.62065627182578, 8.881784197001252E-16, -3.552713678800501E-15, 13.655917605021099, -13.655917605021099, -8.881784197001252E-16, -1.9440859028454953, 94.62382800136868, -94.62382800136868, 1.9440859028454953]
Looking for the largest possible step length (smallest positive scalar) among these: [NaN, 3.2666973331556537E-19, 0.004053534447233366, -0.05077466593850778, 0.003295464903882367, 1.125899906842624E16, -2.814749767106559E15, 7323.886967931073, -7321.778434038156, -1.125899906842624E16, -51438.056236935445, 1057.8155516983334, -1055.816967978498, 51438.056236935445]).
Best so far: 0.004053534447233366 @ 2 (2).
Best so far: 0.003295464903882367 @ 4 (4).
Performing update with step length 0.003295464903882367 adding constraint 4
Post iteration
    Solution: { 0.0, -0.017499999999999998, -0.017016080523697345, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.351979957337909, -0.006406666862959795, 94.24499157176231 }
    L: { -7.410649495144661, 194.40859028454955, 67.00692535684426, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -13457.527152853452, 0.0, 39542.93614550826, 1530.2551609713928, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 78775.35174381454 }
E-slack: { -1.8189894035458565E-12, -1.1368683772161603E-13, 7.673861546209082E-13 }
I-slack: { 0.0, 0.035, 4.8391947630265636E-4, 0.03451608052369735, 3.469446951953614E-18, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.35197995734, 99985.64802004266, 10.0, 100000.00640666686, 100094.24499157176, 99905.75500842824, 99999.99359333314, 0.0 }

NeedsAnotherIteration?
Suggested to include: 4

PerformIteration 3
Last Incl/Excl: 4/-1 => [4, 6, 8, 9, 17] / [0, 1, 2, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 94.24499157176231 - { 0.0, -0.017499999999999998, -0.017016080523697345, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.351979957337909, -0.006406666862959795, 94.24499157176231 }
Step: 94.34705537421505 - { -1.0267089342030472E-15, 2.8935187579293142E-15, -0.054878398670539154, 4.440892098500626E-15, -3.552713678800501E-15, 8.881784197001252E-16, -1.3174596740287026, 2.749663943598551, -94.34705537421505 }
Included-change: { -2.8935187579293142E-15, 3.552713678800501E-15, -4.440892098500626E-15, 8.881784197001252E-16, 1.0267089342030472E-15 }
Numer/slack: [0.0, 0.035, 4.8391947630265636E-4, 0.03451608052369735, 10.0, 9.999999999999996, 100014.35197995734, 99985.64802004266, 10.0, 100000.00640666686, 100094.24499157176, 99905.75500842824, 99999.99359333314]
Denom/chang: [-1.0267089342030472E-15, 2.8935187579293142E-15, 0.054878398670539154, -0.054878398670539154, 4.440892098500626E-15, -3.552713678800501E-15, 1.3174596740287026, -1.3174596740287026, -8.881784197001252E-16, 2.749663943598551, 94.34705537421505, -94.34705537421505, -2.749663943598551]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 1.2095998999172557E13, 0.008818032013066792, -0.628955679463492, 2.251799813685248E15, -2.814749767106559E15, 75914.5452051069, -75892.75785139845, -1.125899906842624E16, 36368.08295772845, 1060.9154106035558, -1058.9175741857057, -36368.078297764914]).
Best so far: 0.008818032013066792 @ 2 (2).
Performing update with step length 0.008818032013066792 adding constraint 2
Post iteration
    Solution: { -9.053552249904158E-18, -0.017499999999999974, -0.0175, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.340362555756398, 0.01783995781686771, 93.4130362171339 }
    L: { -130.34520283309206, -274.32572767355913, 102.06380245273138, 0.0, 0.0, 0.0, 0.0, 163524.54186984632, 0.0, -142214.71877202214, 0.0, 3186.5674784639396, 134348.8600802684, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1385572.1024214267 }
E-slack: { -1.8189894035458565E-12, -5.6843418860808015E-14, 7.673861546209082E-13 }
I-slack: { 9.053552249904158E-18, 0.034999999999999976, 0.0, 0.035, 2.7755575615628914E-17, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.34036255575, 99985.65963744425, 10.0, 99999.98216004219, 100093.41303621713, 99906.58696378287, 100000.01783995781, -9.053552249904158E-18 }

NeedsAnotherIteration?
Suggested to include: 2

PerformIteration 4
Last Incl/Excl: 2/-1 => [2, 4, 6, 8, 9, 17] / [0, 1, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 93.4130362171339 - { -9.053552249904158E-18, -0.017499999999999974, -0.0175, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.340362555756398, 0.01783995781686771, 93.4130362171339 }
Step: 7.815970093361102E-12 - { 5.887369911322461E-14, -2.751271432899216E-15, 3.4208746946262636E-15, -5.417888360170764E-14, -3.552713678800501E-15, 8.881784197001252E-16, 7.087663789206999E-13, -1.2829320938934075E-13, 7.815970093361102E-12 }
Included-change: { -3.4208746946262636E-15, 2.751271432899216E-15, 3.552713678800501E-15, 5.417888360170764E-14, 8.881784197001252E-16, -5.887369911322461E-14 }
Step too small (or freaky large)!
Post iteration
    Solution: { -9.053552249904158E-18, -0.017499999999999974, -0.0175, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.340362555756398, 0.01783995781686771, 93.4130362171339 }
    L: { -143.40362555757108, -1.7839957816739416, -93413.03621714171, 0.0, 0.0, 1.6093925679509656E9, 0.0, -8.822603369964741E7, 0.0, 9630699.361976052, 0.0, -2.8024089265210673E7, -4397822.2265204955, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1524383.3960903632 }
E-slack: { -1.8189894035458565E-12, -5.6843418860808015E-14, 7.673861546209082E-13 }
I-slack: { 9.053552249904158E-18, 0.034999999999999976, 0.0, 0.035, 2.7755575615628914E-17, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.34036255575, 99985.65963744425, 10.0, 99999.98216004219, 100093.41303621713, 99906.58696378287, 100000.01783995781, -9.053552249904158E-18 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 1.6093925679509656E9, -8.822603369964741E7, 9630699.361976052, -2.8024089265210673E7, -4397822.2265204955, 1524383.3960903632 }.
Best so far: -8.822603369964741E7 @ 1 (4).
Suggest to exclude: -8.822603369964741E7 @ 1 (4).
Suggested to exclude: 4

PerformIteration 5
Last Incl/Excl: 2/4 => [2, 6, 8, 9, 17] / [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 93.4130362171339 - { -9.053552249904158E-18, -0.017499999999999974, -0.0175, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.340362555756398, 0.01783995781686771, 93.4130362171339 }
Step: 93.32921226097507 - { 9.053552249904158E-18, 0.9884085105873883, 1.1622647289044608E-15, 8.881784197001252E-16, -3.552713678800501E-15, 8.881784197001252E-16, -0.15533096315806105, 3.157573030979937, -93.32921226097507 }
Included-change: { -1.1622647289044608E-15, 3.552713678800501E-15, -8.881784197001252E-16, 8.881784197001252E-16, -9.053552249904158E-18 }
Numer/slack: [9.053552249904158E-18, 0.034999999999999976, 0.035, 2.7755575615628914E-17, 10.0, 9.999999999999996, 100014.34036255575, 99985.65963744425, 10.0, 99999.98216004219, 100093.41303621713, 99906.58696378287, 100000.01783995781]
Denom/chang: [9.053552249904158E-18, 0.9884085105873883, 1.1622647289044608E-15, -0.9884085105873883, 8.881784197001252E-16, -3.552713678800501E-15, 0.15533096315806105, -0.15533096315806105, -8.881784197001252E-16, 3.157573030979937, 93.32921226097507, -93.32921226097507, -3.157573030979937]
Looking for the largest possible step length (smallest positive scalar) among these: [1.0, 0.035410459971859494, 3.0113621388984812E13, -2.808107712380422E-17, 1.125899906842624E16, -2.814749767106559E15, 643878.9686817533, -643694.3260031244, -1.125899906842624E16, 31669.8873403437, 1072.4767798996033, -1070.4749835926568, -31669.898640134797]).
Best so far: 0.035410459971859494 @ 1 (1).
Performing update with step length 0.035410459971859494 adding constraint 1
Post iteration
    Solution: { -8.732961800355789E-18, 0.0175, -0.01749999999999996, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.334862214903099, 0.12965107123860584, 90.10820588216146 }
    L: { -141.85031592598335, -317.5412988796804, -83.82395615882501, 0.0, 0.0, 3255457.9512055824, 0.0, 0.0, 0.0, -134468.57033372874, 0.0, -56901.31722561506, 137582.84114814477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1507871.6837656419 }
E-slack: { -1.8189894035458565E-12, -5.6843418860808015E-14, 7.673861546209082E-13 }
I-slack: { 8.732961800355789E-18, 0.0, 4.163336342344337E-17, 0.03499999999999996, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892876, 100090.10820588216, 99909.89179411784, 100000.12965107124, -8.732961800355789E-18 }

NeedsAnotherIteration?
Suggested to include: 1

PerformIteration 6
Last Incl/Excl: 1/4 => [1, 2, 6, 8, 9, 17] / [0, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 90.10820588216146 - { -8.732961800355789E-18, 0.0175, -0.01749999999999996, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.334862214903099, 0.12965107123860584, 90.10820588216146 }
Step: 1.2065015653206501E-11 - { 1.3467872149810006E-13, -4.919675777870225E-15, 6.6231742312794495E-15, -5.329070518200751E-15, -3.552713678800501E-15, 8.881784197001252E-16, 1.5898393712632242E-12, -3.4333647036532966E-13, 1.2065015653206501E-11 }
Included-change: { -4.919675777870225E-15, -6.6231742312794495E-15, 3.552713678800501E-15, 5.329070518200751E-15, 8.881784197001252E-16, -1.3467872149810006E-13 }
Step too small (or freaky large)!
Post iteration
    Solution: { -8.732961800355789E-18, 0.0175, -0.01749999999999996, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.334862214903099, 0.12965107123860584, 90.10820588216146 }
    L: { -143.3486221490469, -12.965107123826249, -90108.20588217353, 0.0, 8.51019092648544E7, 1.5525185141080792E9, 0.0, 0.0, 0.0, 9284910.273790985, 0.0, -2.703375827585444E7, -4237221.446915866, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1523798.7087620285 }
E-slack: { -1.8189894035458565E-12, -5.6843418860808015E-14, 7.673861546209082E-13 }
I-slack: { 8.732961800355789E-18, 0.0, 4.163336342344337E-17, 0.03499999999999996, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892876, 100090.10820588216, 99909.89179411784, 100000.12965107124, -8.732961800355789E-18 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 8.51019092648544E7, 1.5525185141080792E9, 9284910.273790985, -2.703375827585444E7, -4237221.446915866, 1523798.7087620285 }.
Best so far: -2.703375827585444E7 @ 3 (8).
Suggest to exclude: -2.703375827585444E7 @ 3 (8).
Suggested to exclude: 8

PerformIteration 7
Last Incl/Excl: 1/8 => [1, 2, 6, 9, 17] / [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 90.10820588216146 - { -8.732961800355789E-18, 0.0175, -0.01749999999999996, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.334862214903099, 0.12965107123860584, 90.10820588216146 }
Step: 90.01251368107918 - { -5.046215053011678E-16, -2.255140518769849E-16, 1.3530843112619095E-16, 3.0004171227026495, -3.552713678800501E-15, 8.881784197001252E-16, 8.881784197001252E-15, -3.0004171227026584, -90.01251368107918 }
Included-change: { -2.255140518769849E-16, -1.3530843112619095E-16, 3.552713678800501E-15, 8.881784197001252E-16, 5.046215053011678E-16 }
Numer/slack: [8.732961800355789E-18, 0.03499999999999996, 0.035, 10.0, 9.999999999999996, -8.881784197001252E-16, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892876, 100090.10820588216, 99909.89179411784, 100000.12965107124]
Denom/chang: [-5.046215053011678E-16, 1.3530843112619095E-16, 2.255140518769849E-16, 3.0004171227026495, -3.552713678800501E-15, -3.0004171227026495, -8.881784197001252E-15, 8.881784197001252E-15, -8.881784197001252E-16, -3.0004171227026584, 90.01251368107918, -90.01251368107918, 3.0004171227026584]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.017305964388386084, 2.5866828628999744E14, 1.5520097177399866E14, 3.3328699280960046, -2.814749767106559E15, 2.9601831458023793E-16, -1.1260613030429477E19, 1.1257385106423003E19, -1.125899906842624E16, -33328.6560699443, 1111.9577057975364, -1109.9555795998074, 33328.742491975594]).
Performing update with step length 1.0 adding constraint -1
Post iteration
    Solution: { -5.133544671015236E-16, 0.017499999999999776, -0.017499999999999825, -1.9995828772973514, -5.0, 5.0, 14.334862214903108, -2.8707660514640527, 0.09569220108227228 }
    L: { -143.3486221490311, 287.07660514640526, -95.69220108227587, 0.0, 204593.3330888477, 6524884.665908045, 0.0, 0.0, 0.0, -131752.56203333504, 0.0, 0.0, 112233.51835900174, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1523798.7087609342 }
E-slack: { 1.8189894035458565E-12, 5.6843418860808015E-14, 0.0 }
I-slack: { 5.133544671015236E-16, 2.255140518769849E-16, 1.7694179454963432E-16, 0.03499999999999982, 0.03499999999999978, 6.999582877297351, 0.0, 10.0, 3.0004171227026486, 0.0, 100014.3348622149, 99985.6651377851, 10.0, 100002.87076605146, 100000.09569220108, 99999.90430779892, 99997.12923394854, -5.133544671015236E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 204593.3330888477, 6524884.665908045, -131752.56203333504, 112233.51835900174, 1523798.7087609342 }.
Best so far: -131752.56203333504 @ 2 (6).
Suggest to exclude: -131752.56203333504 @ 2 (6).
Suggested to exclude: 6

PerformIteration 8
Last Incl/Excl: 1/6 => [1, 2, 9, 17] / [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 14.334862214903108 - { -5.133544671015236E-16, 0.017499999999999776, -0.017499999999999825, -1.9995828772973514, -5.0, 5.0, 14.334862214903108, -2.8707660514640527, 0.09569220108227228 }
Step: 11.399857686558155 - { -1.7111815570050794E-16, 8.153200337090993E-16, -6.938893903907228E-17, 3.9709098200592456, 11.399857686558155, 0.0, -11.386089037334154, -4.531027403855537, 0.15103424811882332 }
Included-change: { 8.153200337090993E-16, 6.938893903907228E-17, 0.0, 1.7111815570050794E-16 }
Numer/slack: [5.133544671015236E-16, 0.03499999999999982, 0.03499999999999978, 6.999582877297351, 0.0, 10.0, 3.0004171227026486, 100014.3348622149, 99985.6651377851, 10.0, 100002.87076605146, 100000.09569220108, 99999.90430779892, 99997.12923394854]
Denom/chang: [-1.7111815570050794E-16, -6.938893903907228E-17, -8.153200337090993E-16, 3.9709098200592456, -11.399857686558155, 11.399857686558155, -3.9709098200592456, 11.386089037334154, -11.386089037334154, 0.0, -4.531027403855537, -0.15103424811882332, 0.15103424811882332, 4.531027403855537]
Looking for the largest possible step length (smallest positive scalar) among these: [-2.9999999999999987, -5.04403158265493E14, -4.292792836302063E13, 1.7627151445088516, -0.0, 0.8772039331500813, -0.755599411385747, 8783.90591662117, -8781.387955946893, Infinity, -22070.683280563942, -662102.1188090261, 662100.8516500569, 22069.416121575225]).
Best so far: 0.8772039331500813 @ 5 (7).
Performing update with step length 0.8772039331500813 adding constraint 7
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -29.48773177568954, 740.179345531959, -246.72644920109562, 0.0, 474060.3082548439, 8658278.930782055, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -17347.57062723088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 313455.17613256106 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Suggested to include: 7

PerformIteration 9
Last Incl/Excl: 7/6 => [1, 2, 7, 9, 17] / [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 6.8454011113369315 - { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
Step: 1.7763568394002505E-15 - { 3.2122367491438143E-16, -1.5334955527634975E-15, -7.979727989493313E-17, -2.220446049250313E-16, 0.0, 0.0, 1.7763568394002505E-15, 0.0, 6.661338147750939E-16 }
Included-change: { -1.5334955527634975E-15, 7.979727989493313E-17, 0.0, 0.0, -3.2122367491438143E-16 }
Step too small (or freaky large)!
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -43.46940128156568, 684.5401111336931, -228.18003757247, 0.0, 440970.82355851494, 8396306.506015357, 0.0, 0.0, 0.0, 0.0, 16178.696415093505, 0.0, -1435.5225615921809, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 462080.601476562 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 440970.82355851494, 8396306.506015357, 16178.696415093505, -1435.5225615921809, 462080.601476562 }.
Best so far: -1435.5225615921809 @ 3 (9).
Suggest to exclude: -1435.5225615921809 @ 3 (9).
Suggested to exclude: 9

PerformIteration 10
Last Incl/Excl: 7/9 => [1, 2, 7, 17] / [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16]
Current: 6.8454011113369315 - { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
Step: 0.12318739254511968 - { 1.501055192138736E-16, -1.3079815008865125E-15, -7.979727989493313E-17, -0.019819590406089382, 0.0, -0.12318739254511968, 0.1110937448345588, 0.07304846922857688, -0.002434948980891888 }
Included-change: { -1.3079815008865125E-15, 7.979727989493313E-17, 0.0, -1.501055192138736E-16 }
Step too small (or freaky large)!
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -44.580338729911254, 677.2352642108355, -225.74508859157746, 0.0, 436512.63199534215, 8344514.273308908, 0.0, 0.0, 0.0, 0.0, 17578.955691504685, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 473889.88868089346 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 436512.63199534215, 8344514.273308908, 17578.955691504685, 473889.88868089346 }.
Nothing to exclude
Stop!
Will inlcude ineq 6 with slack=3.552713678800501E-15 L=-9.999999999999999E-6
Will inlcude ineq 8 with slack=-8.881784197001252E-16 L=-1.0000000000000004E-5
Will inlcude ineq 9 with slack=8.881784197001252E-16 L=-9.999999999999999E-6
Initial solution: { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
E-slack: { -3.637978807091713E-12, -1.1368683772161603E-13, 7.673861546209082E-13 }
I-slack: { 0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0 }

PerformIteration 1
Last Incl/Excl: 9/-1 => [6, 8, 9] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -4.9, -4.9, -4.9]
Relative error 2.9254831378399014E-10 in solution for L=[-5.174614687230402E-10, -1.393678878812342E-6, -4.0569269473839187E-7, -4.549162989072829E-4, -7.510756963027501E-4, -4.489746505591331E-4]
Current: 94.55682107601183 - { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
Step: 94.55682107560614 - { -0.5500625719690071, -6.224863606568113, -0.39688855882202345, 1.7763568394002505E-14, -2.1938006966593093E-13, -1.545430450278218E-13, -14.39698255448382, 1.3936788788123418E-8, -94.55682107560614 }
Included-change: { 2.1938006966593093E-13, -1.7763568394002505E-14, -1.545430450278218E-13 }
Numer/slack: [0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 9.999999999999996, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0]
Denom/chang: [-0.5500625719690071, -6.224863606568113, 0.39688855882202345, -0.39688855882202345, 6.224863606568113, 1.7763568394002505E-14, -2.1938006966593093E-13, 14.39698255448382, -14.39698255448382, 1.545430450278218E-13, 1.3936788788123418E-8, 94.55682107560614, -94.55682107560614, -1.3936788788123418E-8, 0.5500625719690071]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 5.573530877516507E-19, 0.0065197259564322655, -0.0816662376396991, 0.00562261315461917, 5.62949953421312E14, -4.5582992179863305E13, 6946.89992184549, -6944.899921845483, 6.470689119785195E13, 7.175254035938142E12, 1058.5651641254096, -1056.5651641254012, -7.175254035938142E12, 0.0]).
Best so far: 0.0065197259564322655 @ 2 (2).
Best so far: 0.00562261315461917 @ 4 (4).
Best so far: 0.0 @ 14 (17).
Do nothing because step length 0.0 and size 94.55682107560614 but add constraint 17
Post iteration
    Solution: { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
    L: { -5.174614687230402E-10, -1.393678878812342E-6, -4.0569269473839187E-7, -1.4444474582904269E-34, -6.776263578034403E-21, 0.0, 0.0, 0.0, 0.0, -4.549162989072829E-4, 0.0, -7.510756963027501E-4, -4.489746505591331E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -3.637978807091713E-12, -1.1368683772161603E-13, 7.673861546209082E-13 }
I-slack: { 0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 3.552713678800501E-15, 9.999999999999996, -8.881784197001252E-16, 8.881784197001252E-16, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0, 0.0 }

NeedsAnotherIteration?
Suggested to include: 17

PerformIteration 2
Last Incl/Excl: 17/-1 => [6, 8, 9, 17] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -4.9, -4.9, -4.9, 0.0]
Relative error 1.8879628098814204E-12 in solution for L=[-7.400567008187475, 194.14408956810115, 66.91575973652225, -13439.217646003808, 39489.13638776682, 1528.1731866548253, 78668.17470662975]
Current: 94.55682107601183 - { 0.0, 0.017500000000000005, -0.014912395361237061, -5.000000000000001, -4.9999999999999964, 4.999999999999999, 14.396982554535565, 0.0, 94.55682107601183 }
Step: 94.62373683574835 - { -1.455191522836685E-6, -10.621055710986257, -0.6384336737958866, 8.740462487111245E-8, -3.9924637817989606E-8, -1.0026264263274243E-9, -13.656925853716817, -1.9414408956810114, -94.62373683574835 }
Included-change: { 3.9924637817989606E-8, -8.740462487111245E-8, -1.0026264263274243E-9, 1.455191522836685E-6 }
Nonzero Included-change! -8.740462487111245E-8
Numer/slack: [0.0, -3.469446951953614E-18, 0.0025876046387629404, 0.032412395361237065, 0.035, 10.0, 9.999999999999996, 100014.39698255454, 99985.60301744546, 10.0, 100000.0, 100094.55682107601, 99905.44317892399, 100000.0]
Denom/chang: [-1.455191522836685E-6, -10.621055710986257, 0.6384336737958866, -0.6384336737958866, 10.621055710986257, 8.740462487111245E-8, -3.9924637817989606E-8, 13.656925853716817, -13.656925853716817, 1.0026264263274243E-9, -1.9414408956810114, 94.62373683574835, -94.62373683574835, 1.9414408956810114]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 3.2665744784342593E-19, 0.00405305162457678, -0.05076861809078013, 0.003295340967263409, 1.1441042181401819E8, -2.5047190272804692E8, 7323.346267954951, -7321.237889728585, 9.97380453717897E9, -51508.135129152295, 1057.8165708549868, -1055.817985209608, 51508.135129152295]).
Best so far: 0.00405305162457678 @ 2 (2).
Best so far: 0.003295340967263409 @ 4 (4).
Performing update with step length 0.003295340967263409 adding constraint 4
Post iteration
    Solution: { -4.795352240418155E-9, -0.017499999999999998, -0.01701625200137713, -4.999999999711973, -5.000000000131561, 4.999999999996695, 14.351978327282934, -0.006397709719058203, 94.24500359954143 }
    L: { -7.400567008187475, 194.14408956810115, 66.91575973652225, -1.4444474582904269E-34, -6.776263578034403E-21, 0.0, 0.0, 0.0, 0.0, -13439.217646003808, 0.0, 39489.13638776682, 1528.1731866548253, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 78668.17470662975 }
E-slack: { -0.0025374311098858016, -3.6559183115514315E-5, -0.0030684259071733777 }
Nonzero E-slack! 0.0030684259071733777

NeedsAnotherIteration?
Suggested to include: 4

PerformIteration 3
Last Incl/Excl: 4/-1 => [4, 6, 8, 9, 17] / [0, 1, 2, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -4.9, -4.9, -4.9, 0.0]
Relative error 1.574224064515924E-10 in solution for L=[-130.30918732380408, -274.1974724316395, 102.05088938443289, 163477.03633952248, -142176.7654833878, 3195.5190821663746, 134310.21261872543, 1385189.256840315]
Current: 94.24500359954143 - { -4.795352240418155E-9, -0.017499999999999998, -0.01701625200137713, -4.999999999711973, -5.000000000131561, 4.999999999996695, 14.351978327282934, -0.006397709719058203, 94.24500359954143 }
Step: 94.34705448892586 - { 1.1642011717917522E-4, 5.687512457368954E-6, -0.054858567694572424, -2.2022767609541916E-8, -6.400595760069905E-7, 5.8117833212634196E-8, -1.3210595949025272, 2.748372434035453, -94.34705448892586 }
Included-change: { -5.687512457368954E-6, 6.400595760069905E-7, 2.2022767609541916E-8, 5.8117833212634196E-8, -1.1642011717917522E-4 }
Nonzero Included-change! -1.1642011717917522E-4
Numer/slack: [4.795352240418155E-9, 0.035, 4.8374799862287154E-4, 0.03451625200137713, 9.999999999711973, 10.00000000013156, 100014.35197832728, 99985.64802167272, 9.999999999996696, 100000.00639770972, 100094.24500359954, 99905.75499640046, 99999.99360229028]
Denom/chang: [1.1642011717917522E-4, 5.687512457368954E-6, 0.054858567694572424, -0.054858567694572424, -2.2022767609541916E-8, -6.400595760069905E-7, 1.3210595949025272, -1.3210595949025272, -5.8117833212634196E-8, 2.748372434035453, 94.34705448892586, -94.34705448892586, -2.748372434035453]
Looking for the largest possible step length (smallest positive scalar) among these: [4.119006539941818E-5, 6153.832675065651, 0.008818093853929263, -0.6291861682125559, -4.540755356914915E8, -1.562354564322985E7, 75707.67614439582, -75685.94816424618, -1.7206422619731808E8, 36385.17296976344, 1060.9154206859555, -1058.91758399439, -36385.16831412824]).
Best so far: 4.119006539941818E-5 @ 0 (0).
Performing update with step length 4.119006539941818E-5 adding constraint 0
Post iteration
    Solution: { 0.0, -0.017499999765730988, -0.01701851162936819, -4.9999999997128795, -5.000000000157925, 4.999999999999089, 14.351923912751824, -0.006284504078758325, 94.2411174381968 }
    L: { -130.30918732380408, -274.1974724316395, 102.05088938443289, -1.4444474582904269E-34, -6.776263578034403E-21, 0.0, 0.0, 163477.03633952248, 0.0, -142176.7654833878, 0.0, 3195.5190821663746, 134310.21261872543, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1385189.256840315 }
E-slack: { -0.0023185783174994867, -3.525723587927132E-5, -0.0030546067318084624 }
Nonzero E-slack! 0.0030546067318084624

NeedsAnotherIteration?
Suggested to include: 0

PerformIteration 4
Last Incl/Excl: 0/-1 => [0, 4, 6, 8, 9, 17] / [1, 2, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -4.9, -4.9, -4.9, 0.0]
Relative error 3.415286346477568E-10 in solution for L=[-130.31733898353463, -274.1476551981009, 102.07679114464942, -43.32615265186841, 163484.2980620064, -142187.3726648719, 3208.2713335851768, 134316.66673890006, 1385232.582992968]
Current: 94.2411174381968 - { 0.0, -0.017499999765730988, -0.01701851162936819, -4.9999999997128795, -5.000000000157925, 4.999999999999089, 14.351923912751824, -0.006284504078758325, 94.2411174381968 }
Step: 94.34319422934145 - { -2.328306436538696E-5, 8.597661234031884E-6, -0.05504257258150446, -1.311612249921268E-7, 2.3308170149505258E-7, 5.8115439571793104E-8, -1.32019001439836, 2.747761056059767, -94.34319422934145 }
Included-change: { -2.328306436538696E-5, -8.597661234031884E-6, -2.3308170149505258E-7, 1.311612249921268E-7, 5.8115439571793104E-8, 2.328306436538696E-5 }
Nonzero Included-change! -2.328306436538696E-5
Numer/slack: [0.03499999976573099, 4.814883706318121E-4, 0.03451851162936819, 9.99999999971288, 10.000000000157925, 100014.35192391275, 99985.64807608725, 9.999999999999089, 100000.00628450408, 100094.2411174382, 99905.7588825618, 99999.99371549592]
Denom/chang: [8.597661234031884E-6, 0.05504257258150446, -0.05504257258150446, -1.311612249921268E-7, 2.3308170149505258E-7, 1.32019001439836, -1.32019001439836, -5.8115439571793104E-8, 2.747761056059767, 94.34319422934145, -94.34319422934145, -2.747761056059767]
Looking for the largest possible step length (smallest positive scalar) among these: [4070.8744870281075, 0.008747562987155927, -0.6271238790348107, -7.624204485977583E7, 4.290341084699086E7, 75757.5431060138, -75735.80089654968, -1.7207131312575817E8, 36393.268644655014, 1060.9587891853266, -1058.9609531313745, -36393.2640703824]).
Best so far: 0.008747562987155927 @ 1 (2).
Performing update with step length 0.008747562987155927 adding constraint 2
Post iteration
    Solution: { -2.0367007207022808E-7, -0.0174999245571478, -0.0175, -5.00000000086022, -4.999999998119028, 5.000000000507457, 14.34037546744586, 0.017751708832778577, 93.41584440426614 }
    L: { -130.31733898353463, -274.1476551981009, 102.07679114464942, -43.32615265186841, -6.776263578034403E-21, 0.0, 0.0, 163484.2980620064, 0.0, -142187.3726648719, 0.0, 3208.2713335851768, 134316.66673890006, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1385232.582992968 }
E-slack: { -0.015090898763446603, 0.008849054259826516, -0.028152627803962105 }
Nonzero E-slack! 0.028152627803962105

NeedsAnotherIteration?
Suggested to include: 2

PerformIteration 5
Last Incl/Excl: 2/-1 => [0, 2, 4, 6, 8, 9, 17] / [1, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
KKT system unsolvable!
Constraints problem!
Looking for the largest negative lagrange multiplier among these: { -43.32615265186841, 7.202148437500001E-7, 163484.2980620064, -142187.3726648719, 3208.2713335851768, 134316.66673890006, 1385232.582992968 }.
Best so far: -43.32615265186841 @ 0 (0).
Best so far: -142187.3726648719 @ 3 (6).
Suggest to exclude: -142187.3726648719 @ 3 (6).
Will remove 6

PerformIteration 6
Last Incl/Excl: 2/6 => [0, 2, 4, 8, 9, 17] / [1, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -4.9, -4.9, 0.0]
Relative error 7.331314256366462E-10 in solution for L=[-228.29818862255837, -49.00699783891164, -2181.593681975179, -520812.5178091496, 4.274118479522115E7, -2080163.855485658, -659378.8048664447, 102273.05320297915, 1906001.7746494657]
Current: 93.41584440426614 - { -2.0367007207022808E-7, -0.0174999245571478, -0.0175, -5.00000000086022, -4.999999998119028, 5.000000000507457, 14.34037546744586, 0.017751708832778577, 93.41584440426614 }
Step: 91.23425072229097 - { 9.333592753361807E-5, -8.939845623195941E-6, 0.002598838806152347, -5.87802039930807E-6, -8.53393378380656, -3.7895038573765305E-7, 8.489443394809978, 0.47231826955633777, -91.23425072229097 }
Included-change: { 9.333592753361807E-5, -0.002598838806152347, 8.939845623195941E-6, 5.87802039930807E-6, -3.7895038573765305E-7, -9.333592753361807E-5 }
Nonzero Included-change! -0.002598838806152347
Numer/slack: [0.0349999245571478, 0.035, 10.00000000086022, 1.8809718227430494E-9, 9.999999998119028, 100014.34037546745, 99985.65962453255, 10.000000000507457, 99999.98224829117, 100093.41584440427, 99906.58415559573, 100000.01775170883]
Denom/chang: [-8.939845623195941E-6, 0.002598838806152347, -5.87802039930807E-6, 8.53393378380656, -8.53393378380656, -8.489443394809978, 8.489443394809978, 3.7895038573765305E-7, 0.47231826955633777, 91.23425072229097, -91.23425072229097, -0.47231826955633777]
Looking for the largest possible step length (smallest positive scalar) among these: [-3915.047980955575, 13.467553246143217, -1701253.027641307, 2.2041087620251515E-10, -1.1717925462574341, -11781.024470533748, 11777.64606872328, 2.6388678773981895E7, 211721.6053112323, 1097.103500625876, -1095.0556766197662, -211721.68047965146]).
Best so far: 2.2041087620251515E-10 @ 3 (6).
Performing update with step length 2.2041087620251515E-10 adding constraint 6
Post iteration
    Solution: { -2.036700514979745E-7, -0.01749992455714977, -0.01749999999942719, -5.000000000860221, -5.0, 5.000000000507457, 14.340375469317026, 0.01775170893688266, 93.41584438415711 }
    L: { -228.29818862255837, -49.00699783891164, -2181.593681975179, -520812.5178091496, -6.776263578034403E-21, 4.274118479522115E7, 0.0, -2080163.855485658, 0.0, 0.0, 0.0, -659378.8048664447, 102273.05320297915, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1906001.7746494657 }
E-slack: { -0.015090877259353874, 0.008849050220646859, -0.028152613672460802 }
Nonzero E-slack! 0.028152613672460802

NeedsAnotherIteration?
Suggested to include: 6

PerformIteration 7
Last Incl/Excl: 6/6 => [0, 2, 4, 6, 8, 9, 17] / [1, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16]
KKT system unsolvable!
Constraints problem!
Looking for the largest negative lagrange multiplier among these: { -520812.5178091496, 4.274118479522115E7, -2080163.855485658, 0.0013433933734893798, -659378.8048664447, 102273.05320297915, 1906001.7746494657 }.
Best so far: -520812.5178091496 @ 0 (0).
Best so far: -2080163.855485658 @ 2 (4).
Suggest to exclude: -2080163.855485658 @ 2 (4).
Will remove 4

PerformIteration 8
Last Incl/Excl: 6/4 => [0, 2, 6, 8, 9, 17] / [1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -4.9, -4.9, -4.9, 0.0]
Relative error 3.0078937268713607E-10 in solution for L=[-141.69220832573436, -323.9749747394687, -86.02695251416702, -60500.869992691376, 3257300.5186380316, -134111.76211161923, -58205.5837181964, 137611.48517035344, 1445690.1268330084]
Current: 93.41584438415711 - { -2.036700514979745E-7, -0.01749992455714977, -0.01749999999942719, -5.000000000860221, -5.0, 5.000000000507457, 14.340375469317026, 0.01775170893688266, 93.41584438415711 }
Step: 93.32981743164295 - { 7.005286314765887E-5, 1.0143046625087564, 6.430613988870279E-4, 8.158606066288598E-7, 2.561230212805299E-6, 2.0948752030847118E-6, -0.171154636743589, 3.221998038457804, -93.32981743164295 }
Included-change: { 7.005286314765887E-5, -6.430613988870279E-4, -2.561230212805299E-6, -8.158606066288598E-7, 2.0948752030847118E-6, -7.005286314765887E-5 }
Nonzero Included-change! -6.430613988870279E-4
Numer/slack: [0.03499992455714977, 0.03499999999942719, 7.544285023086683E-8, 10.000000000860222, 10.0, 100014.34037546931, 99985.65962453069, 10.000000000507457, 99999.98224829107, 100093.41584438416, 99906.58415561584, 100000.01775170893]
Denom/chang: [1.0143046625087564, 6.430613988870279E-4, -1.0143046625087564, 8.158606066288598E-7, 2.561230212805299E-6, 0.171154636743589, -0.171154636743589, -2.0948752030847118E-6, 3.221998038457804, 93.32981743164295, -93.32981743164295, -3.221998038457804]
Looking for the largest possible step length (smallest positive scalar) among these: [0.03450632324865964, 54.42715121760238, -7.43788853777605E-8, 1.2256995765710851E7, 3904373.745867641, 584350.7501657888, -584183.1780130017, -4773554.04550229, 31036.63660085766, 1072.4698558174618, -1070.4680123133196, -31036.6476199264]).
Best so far: 0.03450632324865964 @ 0 (1).
Performing update with step length 0.03450632324865964 adding constraint 1
Post iteration
    Solution: { 2.213596688769259E-6, 0.0175, -0.017477810314928458, -4.999999972707871, -4.999999911621362, 5.000000072793898, 14.334469552096046, 0.12893101475845495, 90.19537553512245 }
    L: { -141.69220832573436, -323.9749747394687, -86.02695251416702, -60500.869992691376, -6.776263578034403E-21, 3257300.5186380316, 0.0, 0.0, 0.0, -134111.76211161923, 0.0, -58205.5837181964, 137611.48517035344, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1445690.1268330084 }
E-slack: { 0.9487447906594753, -0.03918134110210758, -0.4902064219905071 }
Nonzero E-slack! 0.9487447906594753

NeedsAnotherIteration?
Suggested to include: 1

PerformIteration 9
Last Incl/Excl: 1/4 => [0, 1, 2, 6, 8, 9, 17] / [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
KKT system unsolvable!
Constraints problem!
Looking for the largest negative lagrange multiplier among these: { -60500.869992691376, 9.968051910400391E-6, 3257300.5186380316, -134111.76211161923, -58205.5837181964, 137611.48517035344, 1445690.1268330084 }.
Best so far: -60500.869992691376 @ 0 (0).
Best so far: -134111.76211161923 @ 3 (6).
Suggest to exclude: -134111.76211161923 @ 3 (6).
Will remove 6

PerformIteration 10
Last Incl/Excl: 1/6 => [0, 1, 2, 8, 9, 17] / [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -4.9, -4.9, 0.0]
Relative error 1.3511273883366667E-10 in solution for L=[-226.0556828314817, -55.49570165570737, -2160.491837737842, -508893.5771956874, 2057813.409323806, 4.229205443235021E7, -653697.1219769224, 101553.76749220163, 1894082.834036004]
Current: 90.19537553512245 - { 2.213596688769259E-6, 0.0175, -0.017477810314928458, -4.999999972707871, -4.999999911621362, 5.000000072793898, 14.334469552096046, 0.12893101475845495, 90.19537553512245 }
Step: 88.03488369738461 - { -4.8779725419543176E-5, -1.4418661594392534E-5, -4.035831176887293E-4, 1.0787465614114922E-6, -8.297746390845477, 4.218780871312333E-7, 8.271098731052128, 0.4260260017986188, -88.03488369738461 }
Included-change: { -4.8779725419543176E-5, -1.4418661594392534E-5, 4.035831176887293E-4, -1.0787465614114922E-6, 4.218780871312333E-7, 4.8779725419543176E-5 }
Nonzero Included-change! -4.8779725419543176E-5
Numer/slack: [0.034977810314928456, 0.035, 9.999999972707872, 8.837863774147081E-8, 9.999999911621362, 100014.3344695521, 99985.6655304479, 10.000000072793899, 99999.87106898525, 100090.19537553513, 99909.80462446487, 100000.12893101475]
Denom/chang: [-4.035831176887293E-4, 1.4418661594392534E-5, 1.0787465614114922E-6, 8.297746390845477, -8.297746390845477, -8.271098731052128, 8.271098731052128, -4.218780871312333E-7, 0.4260260017986188, 88.03488369738461, -88.03488369738461, -0.4260260017986188]
Looking for the largest possible step length (smallest positive scalar) among these: [-86.66817015350408, 2427.409768297192, 9270017.936023189, 1.0650920572720192E-8, -1.20514648684056, -12092.025222002125, 12088.5590635102, -2.3703530422245435E7, 234727.1543210991, 1136.9378952051557, -1134.8888125745664, -234727.75959408344]).
Best so far: 1.0650920572720192E-8 @ 3 (6).
Performing update with step length 1.0650920572720192E-8 adding constraint 6
Post iteration
    Solution: { 2.213596169220278E-6, 0.01749999999984643, -0.01747781031922699, -4.99999997270786, -5.0, 5.0000000727939025, 14.33446964019086, 0.12893101929602405, 90.1953745974699 }
    L: { -226.0556828314817, -55.49570165570737, -2160.491837737842, -508893.5771956874, 2057813.409323806, 4.229205443235021E7, 0.0, 0.0, 0.0, 0.0, 0.0, -653697.1219769224, 101553.76749220163, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1894082.834036004 }
E-slack: { 0.9487448590425629, -0.03918133913464317, -0.49020636640560156 }
Nonzero E-slack! 0.9487448590425629

NeedsAnotherIteration?
Suggested to include: 6

PerformIteration 11
Last Incl/Excl: 6/6 => [0, 1, 2, 6, 8, 9, 17] / [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
KKT system unsolvable!
Constraints problem!
Looking for the largest negative lagrange multiplier among these: { -508893.5771956874, 2057813.409323806, 4.229205443235021E7, 0.0013197746276855469, -653697.1219769224, 101553.76749220163, 1894082.834036004 }.
Best so far: -508893.5771956874 @ 0 (0).
Best so far: -653697.1219769224 @ 4 (8).
Suggest to exclude: -653697.1219769224 @ 4 (8).
Will remove 8

PerformIteration 12
Last Incl/Excl: 6/8 => [0, 1, 2, 6, 9, 17] / [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -4.9, -4.9, 0.0]
Relative error 7.357212846580934E-10 in solution for L=[-143.64502174509417, 295.1797339089531, -98.39324402401873, -70880.09276532935, 209778.96652371887, 6619037.141548431, -131726.1759862753, 112019.78103807649, 1456069.3496056448]
Current: 90.1953745974699 - { 2.213596169220278E-6, 0.01749999999984643, -0.01747781031922699, -4.99999997270786, -5.0, 5.0000000727939025, 14.33446964019086, 0.12893101929602405, 90.1953745974699 }
Step: 90.09698135344587 - { -2.1176117545770293E-4, 2.923708424427962E-5, 0.0017384588082254016, 3.0630980346307974, -5.811452830073449E-8, 2.604665366945369E-6, 0.030032534318555903, -3.080728358385555, -90.09698135344587 }
Included-change: { -2.1176117545770293E-4, 2.923708424427962E-5, -0.0017384588082254016, 5.811452830073449E-8, 2.604665366945369E-6, 2.1176117545770293E-4 }
Nonzero Included-change! -0.0017384588082254016
Numer/slack: [0.03497781031922699, 0.03499999999984643, 9.99999997270786, 10.0, 2.7292140103440943E-8, 100014.33446964019, 99985.66553035981, 10.000000072793902, 99999.8710689807, 100090.19537459748, 99909.80462540252, 100000.1289310193]
Denom/chang: [0.0017384588082254016, -2.923708424427962E-5, 3.0630980346307974, -5.811452830073449E-8, -3.0630980346307974, -0.030032534318555903, 0.030032534318555903, -2.604665366945369E-6, -3.080728358385555, 90.09698135344587, -90.09698135344587, 3.080728358385555]
Looking for the largest possible step length (smallest positive scalar) among these: [20.120010985438263, -1197.1097975234775, 3.264668600106749, -1.720740113083498E8, -8.909979306859021E-9, -3330199.6231415384, 3329245.0270699486, -3839264.8052603547, -32459.81451002882, 1110.9161913199814, -1108.9140071570373, 32459.898211676154]).
Performing update with step length 1.0 adding constraint -1
Post iteration
    Solution: { -2.0954757928848264E-4, 0.01752923708409071, -0.015739351511001587, -1.9369019380770625, -5.000000058114528, 5.000002677459269, 14.364502174509417, -2.951797339089531, 0.09839324402402383 }
    L: { -143.64502174509417, 295.1797339089531, -98.39324402401873, -70880.09276532935, 209778.96652371887, 6619037.141548431, 0.0, 0.0, 0.0, -131726.1759862753, 0.0, 0.0, 112019.78103807649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1456069.3496056448 }
E-slack: { 10.393288611090611, -6.977411271408641, 11.410329619679146 }
Nonzero E-slack! 11.410329619679146

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { -70880.09276532935, 209778.96652371887, 6619037.141548431, -131726.1759862753, 112019.78103807649, 1456069.3496056448 }.
Best so far: -70880.09276532935 @ 0 (0).
Suggest to exclude: -70880.09276532935 @ 0 (0).
Suggested to exclude: 0

PerformIteration 13
Last Incl/Excl: 6/0 => [1, 2, 6, 9, 17] / [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -0.0175, -4.9, -4.9, 0.0]
Relative error 9.236149992493197E-10 in solution for L=[-143.2933239415478, 285.4590741153111, -95.15302406751842, 203558.7948291129, 6506183.000128211, -131761.69300486846, 112279.67292252512, 1523210.8877139196]
Current: 14.364502174509417 - { -2.0954757928848264E-4, 0.01752923708409071, -0.015739351511001587, -1.9369019380770625, -5.000000058114528, 5.000002677459269, 14.364502174509417, -2.951797339089531, 0.09839324402402383 }
Step: 0.09720659793641984 - { 2.5611370801925654E-4, -4.3655745685100555E-5, -0.0020489096641540527, -0.07585895218653604, 0.0, -2.473825588822365E-6, -0.035169780354635805, 0.09720659793641984, -0.003240219956505419 }
Included-change: { -4.3655745685100555E-5, 0.0020489096641540527, 0.0, -2.473825588822365E-6, -2.5611370801925654E-4 }
Nonzero Included-change! -2.5611370801925654E-4
Step too small (or freaky large)!
Post iteration
    Solution: { -2.0954757928848264E-4, 0.01752923708409071, -0.015739351511001587, -1.9369019380770625, -5.000000058114528, 5.000002677459269, 14.364502174509417, -2.951797339089531, 0.09839324402402383 }
    L: { -143.2933239415478, 285.4590741153111, -95.15302406751842, 0.0, 203558.7948291129, 6506183.000128211, 0.0, 0.0, 0.0, -131761.69300486846, 0.0, 0.0, 112279.67292252512, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1523210.8877139196 }
E-slack: { 10.393288611090611, -6.977411271408641, 11.410329619679146 }
Nonzero E-slack! 11.410329619679146

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 203558.7948291129, 6506183.000128211, -131761.69300486846, 112279.67292252512, 1523210.8877139196 }.
Only the last included needs to be excluded: -131761.69300486846 @ 2 (6).
Suggest to exclude: -131761.69300486846 @ 2 (6).
Suggested to exclude: 6

PerformIteration 14
Last Incl/Excl: 6/6 => [1, 2, 9, 17] / [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -0.0175, -4.9, 0.0]
Relative error 7.483706697122405E-10 in solution for L=[-29.448912969404386, 739.2049443894343, -246.40164881857774, 473436.23665763956, 8646880.83257588, -17324.733603873083, 313042.53144853027]
Current: 14.364502174509417 - { -2.0954757928848264E-4, 0.01752923708409071, -0.015739351511001587, -1.9369019380770625, -5.000000058114528, 5.000002677459269, 14.364502174509417, -2.951797339089531, 0.09839324402402383 }
Step: 11.419610877568978 - { 2.2118911147117612E-4, -3.7834979593753815E-5, -0.0013969838619232178, 3.9031996857374907, 11.404278266127221, -2.291926648467779E-6, -11.419610877568978, -4.440252104804813, 0.14800840479455388 }
Included-change: { -3.7834979593753815E-5, 0.0013969838619232178, -2.291926648467779E-6, -2.2118911147117612E-4 }
Nonzero Included-change! -2.2118911147117612E-4
Numer/slack: [2.0954757928848264E-4, 0.03323935151100159, 0.03502923708409071, 6.936901938077062, -5.811452830073449E-8, 10.000000058114528, 3.0630980619229375, 100014.3645021745, 99985.6354978255, 10.00000267745927, 100002.95179733909, 100000.09839324403, 99999.90160675597, 99997.04820266091]
Denom/chang: [2.2118911147117612E-4, -0.0013969838619232178, 3.7834979593753815E-5, 3.9031996857374907, -11.404278266127221, 11.404278266127221, -3.9031996857374907, 11.419610877568978, -11.419610877568978, 2.291926648467779E-6, -4.440252104804813, -0.14800840479455388, 0.14800840479455388, 4.440252104804813]
Looking for the largest possible step length (smallest positive scalar) among these: [0.9473684210526315, -23.793654613333334, 925.8426318769231, 1.7772347039852685, 5.095853235477882E-9, 0.8768639123631651, -0.7847659122118883, 8758.123685162353, -8755.607924804403, 4363142.548276825, -22521.90853963574, -675637.9715871625, 675636.6420242344, 22520.578976687775]).
Best so far: 0.9473684210526315 @ 0 (0).
Best so far: 0.8768639123631651 @ 5 (7).
Performing update with step length 0.8768639123631651 adding constraint 7
Post iteration
    Solution: { -1.5594829631734907E-5, 0.01749606095585995, -0.016964316245675782, 1.4856730090933898, 5.0, 5.000000667751501, 4.351057502739325, -6.845294171587458, 0.2281764729148074 }
    L: { -29.448912969404386, 739.2049443894343, -246.40164881857774, 0.0, 473436.23665763956, 8646880.83257588, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -17324.733603873083, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 313042.53144853027 }
E-slack: { 8.576969806183115, -2.891824265874334, 8.625821259951186 }
Nonzero E-slack! 8.625821259951186

NeedsAnotherIteration?
Suggested to include: 7

PerformIteration 15
Last Incl/Excl: 7/6 => [1, 2, 7, 9, 17] / [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -0.0175, -5.1, -4.9, 0.0]
Relative error 6.212551795051917E-10 in solution for L=[-43.443245039544756, 682.8826550955469, -227.62755222412372, 439915.54435445083, 8377875.608125699, 16218.522790977491, -1360.7168503684145, 461802.5601028814]
Current: 6.845294171587458 - { -1.5594829631734907E-5, 0.01749606095585995, -0.016964316245675782, 1.4856730090933898, 5.0, 5.000000667751501, 4.351057502739325, -6.845294171587458, 0.2281764729148074 }
Step: 0.01646762063198981 - { 1.5594829631734907E-5, -1.6300383545688607E-5, -8.239449294798577E-4, -0.00885017593531412, -9.245704912785868E-8, -5.800783950959953E-7, -0.006732998784849009, 0.01646762063198981, -5.489206906836852E-4 }
Included-change: { -1.6300383545688607E-5, 8.239449294798577E-4, -9.245704912785868E-8, -5.800783950959953E-7, -1.5594829631734907E-5 }
Nonzero Included-change! -1.6300383545688607E-5
Step too small (or freaky large)!
Post iteration
    Solution: { -1.5594829631734907E-5, 0.01749606095585995, -0.016964316245675782, 1.4856730090933898, 5.0, 5.000000667751501, 4.351057502739325, -6.845294171587458, 0.2281764729148074 }
    L: { -43.443245039544756, 682.8826550955469, -227.62755222412372, 0.0, 439915.54435445083, 8377875.608125699, 0.0, 0.0, 0.0, 0.0, 16218.522790977491, 0.0, -1360.7168503684145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 461802.5601028814 }
E-slack: { 8.576969806183115, -2.891824265874334, 8.625821259951186 }
Nonzero E-slack! 8.625821259951186

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 439915.54435445083, 8377875.608125699, 16218.522790977491, -1360.7168503684145, 461802.5601028814 }.
Best so far: -1360.7168503684145 @ 3 (9).
Suggest to exclude: -1360.7168503684145 @ 3 (9).
Suggested to exclude: 9

PerformIteration 16
Last Incl/Excl: 7/9 => [1, 2, 7, 17] / [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -0.0175, -5.1, 0.0]
Relative error 1.5898771078140257E-10 in solution for L=[-44.472527699943946, 675.5974697212071, -225.19915709231165, 435456.99000241025, 8324334.285359928, 17536.44355832537, 472743.8552848868]
Current: 6.845294171587458 - { -1.5594829631734907E-5, 0.01749606095585995, -0.016964316245675782, 1.4856730090933898, 5.0, 5.000000667751501, 4.351057502739325, -6.845294171587458, 0.2281764729148074 }
Step: 0.11068960730239308 - { 1.5594829631734907E-5, 2.4444979093738578E-5, -9.170771869414056E-4, -0.02994666951848668, -5.607726105694155E-8, -0.11068960730239308, 0.09619526725507033, 0.08931947437538756, -0.0029773158224957463 }
Included-change: { 2.4444979093738578E-5, 9.170771869414056E-4, -5.607726105694155E-8, -1.5594829631734907E-5 }
Nonzero Included-change! -1.5594829631734907E-5
Step too small (or freaky large)!
Post iteration
    Solution: { -1.5594829631734907E-5, 0.01749606095585995, -0.016964316245675782, 1.4856730090933898, 5.0, 5.000000667751501, 4.351057502739325, -6.845294171587458, 0.2281764729148074 }
    L: { -44.472527699943946, 675.5974697212071, -225.19915709231165, 0.0, 435456.99000241025, 8324334.285359928, 0.0, 0.0, 0.0, 0.0, 17536.44355832537, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 472743.8552848868 }
E-slack: { 8.576969806183115, -2.891824265874334, 8.625821259951186 }
Nonzero E-slack! 8.625821259951186

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 435456.99000241025, 8324334.285359928, 17536.44355832537, 472743.8552848868 }.
Nothing to exclude
Stop!
99999.0978046977358932264566942156670 ! 14.272908 <= E0 <= 14.272908
99997.7357414873837180435000000000 ! -3.888271 <= E1 <= -3.888271
99849.649793371150607950000000000 ! -0.069929 <= E2 <= -0.069929
E-slack: { -9.998482489663908E7, -100001.62401230738, -998.4971972244493 }
Nonzero E-slack! 9.998482489663908E7
Will inlcude ineq 4 with slack=0.0 L=-1.0E-5
Will inlcude ineq 10 with slack=0.0 L=-9.999999999999997E-6
Will inlcude ineq 11 with slack=0.0 L=-1.0E-5
Initial solution: { 0.017499999999999998, -0.014912395361237094, -5.0, -5.0, 5.0, 14.396982554535565, 0.0, 94.55682107601179 }
E-slack: { -1.8189894035458565E-12, 0.0, 4.445228907190568E-18 }
I-slack: { 0.0, 0.3241239536123709, 10.0, 10.0, 0.0, 999.8560301744546, 1000.0, 999.0544317892399, 0.35, 0.025876046387629054, 0.0, 0.0, 10.0, 1000.1439698255454, 1000.0, 1000.9455682107601 }

PerformIteration 1
Last Incl/Excl: 11/-1 => [4, 10, 11] / [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -4.9, -4.9, -4.9]
Relative error 5.687308870509439E-11 in solution for L=[-7.405560205833242, 19427.507950747615, 66960.90811736064, 1529.2042526292025, 39515.77989595583, -13448.285149577112]
Current: 94.55682107601179 - { 0.017499999999999998, -0.014912395361237094, -5.0, -5.0, 5.0, 14.396982554535565, 0.0, 94.55682107601179 }
Step: 94.62378198412915 - { -10.620600236039609, -0.6383172584740595, -5.811452830073449E-8, 3.283494187655833E-8, -5.550100823370485E-9, -13.65642653395224, -1.9427507950747613, -94.62378198412915 }
Included-change: { -5.550100823370485E-9, 5.811452830073449E-8, -3.283494187655833E-8 }
Nonzero Included-change! -3.283494187655833E-8
Numer/slack: [0.0, 0.3241239536123709, 10.0, 10.0, 999.8560301744546, 1000.0, 999.0544317892399, 0.35, 0.025876046387629054, 10.0, 1000.1439698255454, 1000.0, 1000.9455682107601]
Denom/chang: [-106.20600236039608, -6.383172584740596, -5.811452830073449E-8, 3.283494187655833E-8, -0.1365642653395224, -0.019427507950747613, -0.9462378198412915, 106.20600236039608, 6.383172584740596, 5.550100823370485E-9, 0.1365642653395224, 0.019427507950747613, 0.9462378198412915]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, -0.050777877193421195, -1.720740113083498E8, 3.045536074829858E8, -7321.505576064423, -51473.405777786225, -1055.8174814411952, 0.003295482291220425, 0.004053790813910858, 1.801769070192704E9, 7323.614031379398, 51473.405777786225, 1057.8160661329775]).
Best so far: 0.003295482291220425 @ 7 (8).
Performing update with step length 0.003295482291220425 adding constraint 8
Post iteration
    Solution: { -0.017499999999999998, -0.01701595858271873, -5.000000000191515, -4.999999999891793, 4.99999999998171, 14.351978042731574, -0.006402300841423277, 94.24499007815479 }
    L: { -7.405560205833242, 19427.507950747615, 66960.90811736064, -8.470329472543003E-22, 0.0, 0.0, 0.0, 1529.2042526292025, 0.0, 0.0, 0.0, 0.0, 0.0, 39515.77989595583, -13448.285149577112, 0.0, 0.0, 0.0, 0.0 }
E-slack: { 0.004841938398385537, -1.047563968104015E-5, 2.1114157667856447E-6 }
Nonzero E-slack! 0.004841938398385537

NeedsAnotherIteration?
Suggested to include: 8

PerformIteration 2
Last Incl/Excl: 8/-1 => [4, 8, 10, 11] / [0, 1, 2, 3, 5, 6, 7, 9, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -4.9, -0.175, -4.9, -4.9]
Relative error 1.5515172755062104E-10 in solution for L=[-130.32977605067333, -27449.860885162263, 101991.87580101738, 134338.9320325459, 16351.427908292333, 3147.701365143418, -142192.63426408448]
Current: 94.24499007815479 - { -0.017499999999999998, -0.01701595858271873, -5.000000000191515, -4.999999999891793, 4.99999999998171, 14.351978042731574, -0.006402300841423277, 94.24499007815479 }
Step: 94.3469819539558 - { 8.597895503042324E-6, -0.05478901192013466, 1.3307087431968512E-7, -3.492610396449436E-7, -8.149820951430797E-7, -1.31900043766424, 2.7513883893576496, -94.3469819539558 }
Included-change: { -8.149820951430797E-7, -8.597895503042324E-5, -1.3307087431968512E-7, 3.492610396449436E-7 }
Nonzero Included-change! -8.597895503042324E-5
Numer/slack: [0.35, 0.3451595858271873, 10.000000000191516, 9.999999999891793, 999.8564802195726, 1000.0000640230085, 999.0575500992185, 0.004840414172812696, 9.99999999998171, 1000.1435197804274, 999.9999359769915, 1000.9424499007815]
Denom/chang: [8.597895503042324E-5, -0.5478901192013466, 1.3307087431968512E-7, -3.492610396449436E-7, -0.0131900043766424, 0.027513883893576497, -0.9434698195395581, 0.5478901192013466, 8.149820951430797E-7, 0.0131900043766424, -0.027513883893576497, 0.9434698195395581]
Looking for the largest possible step length (smallest positive scalar) among these: [4070.7635941394515, -0.6299795775297475, 7.514792437725961E7, -2.8631879496372472E7, -75804.10526551263, 36345.28908717509, -1058.9183982448837, 0.008834644033859407, 1.2270208216324179E7, 75825.86716586218, -36345.28443330589, 1060.9162361857761]).
Best so far: 0.008834644033859407 @ 7 (9).
Performing update with step length 0.008834644033859407 adding constraint 9
Post iteration
    Solution: { -0.01749992404065379, -0.017499999999999998, -4.999999999015881, -5.00000000297739, 4.999999992781633, 14.340325143384305, 0.017905236177445327, 93.41146807692263 }
    L: { -130.32977605067333, -27449.860885162263, 101991.87580101738, -8.470329472543003E-22, 0.0, 0.0, 0.0, 134338.9320325459, 0.0, 0.0, 0.0, 16351.427908292333, 0.0, 3147.701365143418, -142192.63426408448, 0.0, 0.0, 0.0, 0.0 }
E-slack: { 0.03740991839913477, -6.503341940122809E-5, 1.5608721870346014E-5 }
Nonzero E-slack! 0.03740991839913477

NeedsAnotherIteration?
Suggested to include: 9

PerformIteration 3
Last Incl/Excl: 9/-1 => [4, 8, 9, 10, 11] / [0, 1, 2, 3, 5, 6, 7, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -4.9, -0.175, -0.175, -4.9, -4.9]
Relative error 3.8955592405582983E-10 in solution for L=[-139.83122789743766, 5005.520250678039, -9.305078808564156E7, -4385727.659621936, -8789998.46798034, 1.603338767080613E8, -2.7910230905932084E7, 9596619.61416341]
Current: 93.41146807692263 - { -0.01749992404065379, -0.017499999999999998, -4.999999999015881, -5.00000000297739, 4.999999992781633, 14.340325143384305, 0.017905236177445327, 93.41146807692263 }
Step: 0.5184572612452493 - { 0.030910969115116677, 0.32744415283203127, -0.002929068595812545, 0.0010756224365424671, 3.120583953917233E-4, -0.35720235364054, -0.5184572612452493, -0.3606799912810743 }
Included-change: { 3.120583953917233E-4, -0.30910969115116677, -3.2744415283203128, 0.002929068595812545, -0.0010756224365424671 }
Nonzero Included-change! -3.2744415283203128
Step too small (or freaky large)!
Post iteration
    Solution: { -0.01749992404065379, -0.017499999999999998, -4.999999999015881, -5.00000000297739, 4.999999992781633, 14.340325143384305, 0.017905236177445327, 93.41146807692263 }
    L: { -139.83122789743766, 5005.520250678039, -9.305078808564156E7, -8.470329472543003E-22, 0.0, 0.0, 0.0, -4385727.659621936, 0.0, 0.0, 0.0, -8789998.46798034, 1.603338767080613E8, -2.7910230905932084E7, 9596619.61416341, 0.0, 0.0, 0.0, 0.0 }
E-slack: { 0.03740991839913477, -6.503341940122809E-5, 1.5608721870346014E-5 }
Nonzero E-slack! 0.03740991839913477

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { -4385727.659621936, -8789998.46798034, 1.603338767080613E8, -2.7910230905932084E7, 9596619.61416341 }.
Best so far: -4385727.659621936 @ 0 (4).
Best so far: -8789998.46798034 @ 1 (8).
Best so far: -2.7910230905932084E7 @ 3 (10).
Suggest to exclude: -2.7910230905932084E7 @ 3 (10).
Suggested to exclude: 10

PerformIteration 4
Last Incl/Excl: 9/10 => [4, 8, 9, 11] / [0, 1, 2, 3, 5, 6, 7, 10, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -4.9, -0.175, -0.175, -4.9]
Relative error 3.6149527676724115E-11 in solution for L=[-147.21099548657273, 35294.54552386757, -117648.48462180847, 111806.43752588498, -24697.473981968014, 732511.4799836783, -132989.3150617258]
Current: 93.41146807692263 - { -0.01749992404065379, -0.017499999999999998, -4.999999999015881, -5.00000000297739, 4.999999992781633, 14.340325143384305, 0.017905236177445327, 93.41146807692263 }
Step: 93.29381959230082 - { 0.005680858492174234, 0.003064500093460081, 3.526744490064039, -9.950439493700003E-6, 1.53448438853232E-5, 0.3807744052729678, -3.5473597885642025, -93.29381959230082 }
Included-change: { 1.53448438853232E-5, -0.056808584921742344, -0.030645000934600812, 9.950439493700003E-6 }
Nonzero Included-change! -0.056808584921742344
Numer/slack: [0.34999924040653785, 0.35, 9.99999999901588, 10.00000000297739, 999.8565967485662, 999.9998209476382, 999.0658853192308, 9.84118564417713E-10, 9.999999992781632, 1000.1434032514338, 1000.0001790523618, 1000.9341146807692]
Denom/chang: [0.056808584921742344, 0.030645000934600812, 3.526744490064039, -9.950439493700003E-6, 0.003807744052729678, -0.03547359788564203, -0.9329381959230082, -3.526744490064039, -1.53448438853232E-5, -0.003807744052729678, 0.03547359788564203, 0.9329381959230082]
Looking for the largest possible step length (smallest positive scalar) among these: [6.161027261789489, 11.421112394381435, 2.835476181273994, -1004980.7357060728, 262585.032739213, -28189.97453180212, -1070.8811041130102, -2.790444749230595E-10, -651684.7005753039, -262660.3546355632, 28189.984626766964, 1072.8836262197292]).
Performing update with step length 1.0 adding constraint -1
Post iteration
    Solution: { -0.011819065548479555, -0.014435499906539917, -1.4732555089518424, -5.000009953416884, 5.000015337625518, 14.721099548657273, -3.529454552386757, 0.11764848462181021 }
    L: { -147.21099548657273, 35294.54552386757, -117648.48462180847, -8.470329472543003E-22, 0.0, 0.0, 0.0, 111806.43752588498, 0.0, 0.0, 0.0, -24697.473981968014, 732511.4799836783, 0.0, -132989.3150617258, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -308.0645406888889, -0.11485354717454221, -0.07774896959516667 }
Nonzero E-slack! 308.0645406888889

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 111806.43752588498, -24697.473981968014, 732511.4799836783, -132989.3150617258 }.
Best so far: -24697.473981968014 @ 1 (8).
Best so far: -132989.3150617258 @ 3 (11).
Suggest to exclude: -132989.3150617258 @ 3 (11).
Suggested to exclude: 11

PerformIteration 5
Last Incl/Excl: 9/11 => [4, 8, 9] / [0, 1, 2, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -4.9, -0.175, -0.175]
Relative error 3.437899979991749E-10 in solution for L=[-30.259389395898072, 75954.89279116885, -253182.9766876961, -17801.535206219476, -48646.58830019192, 888485.5432433916]
Current: 14.721099548657273 - { -0.011819065548479555, -0.014435499906539917, -1.4732555089518424, -5.000009953416884, 5.000015337625518, 14.721099548657273, -3.529454552386757, 0.11764848462181021 }
Step: 11.695160609067466 - { -0.0057189026847481745, -0.0021420419216156006, 3.5246541665401305, 11.32452682213625, -1.531589077785611E-5, -11.695160609067466, -4.066034726730129, 0.13553449206588586 }
Included-change: { -1.531589077785611E-5, 0.05718902684748174, 0.021420419216156006 }
Nonzero Included-change! -1.531589077785611E-5
Numer/slack: [0.29319065548479556, 0.31935499906539916, 6.473255508951842, 10.000009953416884, 999.8527890045134, 1000.0352945455238, 999.9988235151537, 3.5267444910481576, -9.953416883590194E-6, 10.000015337625518, 1000.1472109954866, 999.9647054544762, 1000.0011764848463]
Denom/chang: [-0.05718902684748174, -0.021420419216156006, 3.5246541665401305, 11.32452682213625, -0.11695160609067466, -0.040660347267301285, 0.0013553449206588587, -3.5246541665401305, -11.32452682213625, 1.531589077785611E-5, 0.11695160609067466, 0.040660347267301285, -0.0013553449206588587]
Looking for the largest possible step length (smallest positive scalar) among these: [-5.126694256692111, -14.908905182608695, 1.8365647246765537, 0.8830399813146886, -8549.286516247666, -24594.853752017607, 737818.6971247403, -1.0005930580446363, 8.789256310589575E-7, 652917.644991544, 8551.803984804234, 24593.1176849205, -737820.4331918157]).
Best so far: 0.8830399813146886 @ 3 (3).
Performing update with step length 0.8830399813146886 adding constraint 3
Post iteration
    Solution: { -0.016869085268360104, -0.016327008564978637, 1.6391550404104938, 5.0, 5.000001813081612, 4.393805142954054, -7.1199257815034045, 0.23733085996316589 }
    L: { -30.259389395898072, 75954.89279116885, -253182.9766876961, -8.470329472543003E-22, 0.0, 0.0, 0.0, -17801.535206219476, 0.0, 0.0, 0.0, -48646.58830019192, 888485.5432433916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -13.305582700048035, -0.049484256175786, 0.005895180973196398 }
Nonzero E-slack! 13.305582700048035

NeedsAnotherIteration?
Suggested to include: 3

PerformIteration 6
Last Incl/Excl: 3/11 => [3, 4, 8, 9] / [0, 1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -5.1, -4.9, -0.175, -0.175]
Relative error 5.390362828434876E-10 in solution for L=[-43.497949111853536, 70666.88860363943, -235556.2959089143, 15326.69445173374, -2723.441990209398, -45500.95133285498, 863468.0126892066]
Current: 7.1199257815034045 - { -0.016869085268360104, -0.016327008564978637, 1.6391550404104938, 5.0, 5.000001813081612, 4.393805142954054, -7.1199257815034045, 0.23733085996316589 }
Step: 0.05323692113946166 - { -6.397791344108922E-4, -0.0011818558377923588, -0.048807914423902865, 1.6682315084892707E-8, -1.7686095041824501E-6, -0.044010231768701225, 0.05323692113946166, -0.0017745640542515817 }
Included-change: { 1.6682315084892707E-8, -1.7686095041824501E-6, 0.006397791344108922, 0.011818558377923588 }
Nonzero Included-change! -1.7686095041824501E-6
Step too small (or freaky large)!
Post iteration
    Solution: { -0.016869085268360104, -0.016327008564978637, 1.6391550404104938, 5.0, 5.000001813081612, 4.393805142954054, -7.1199257815034045, 0.23733085996316589 }
    L: { -43.497949111853536, 70666.88860363943, -235556.2959089143, -8.470329472543003E-22, 0.0, 0.0, 15326.69445173374, -2723.441990209398, 0.0, 0.0, 0.0, -45500.95133285498, 863468.0126892066, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -13.305582700048035, -0.049484256175786, 0.005895180973196398 }
Nonzero E-slack! 13.305582700048035

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 15326.69445173374, -2723.441990209398, -45500.95133285498, 863468.0126892066 }.
Best so far: -2723.441990209398 @ 1 (4).
Best so far: -45500.95133285498 @ 2 (8).
Suggest to exclude: -45500.95133285498 @ 2 (8).
Suggested to exclude: 8

PerformIteration 7
Last Incl/Excl: 3/8 => [3, 4, 9] / [0, 1, 2, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -5.1, -4.9, -0.175]
Relative error 9.091938172414611E-11 in solution for L=[-41.7466003274594, -1034.4565149570255, 3448.1890022238263, 42107.79425673655, 38262.32081846984, 89109.36010552711]
Current: 7.1199257815034045 - { -0.016869085268360104, -0.016327008564978637, 1.6391550404104938, 5.0, 5.000001813081612, 4.393805142954054, -7.1199257815034045, 0.23733085996316589 }
Step: 7.223371432999107 - { 1.1343247073477931, -0.0010072328550519566, -3.5962577198338996, -9.245704912785868E-8, -2.1915245405068617E-6, -0.21914511020811478, 7.223371432999107, -0.2407790489653897 }
Included-change: { -9.245704912785868E-8, -2.1915245405068617E-6, 0.010072328550519566 }
Nonzero Included-change! -2.1915245405068617E-6
Numer/slack: [0.343690852683601, 0.33827008564978633, 3.3608449595895062, 999.9560619485704, 1000.071199257815, 999.9976266914003, 0.00630914731639895, 6.639155040410493, 10.0, 10.000001813081612, 1000.0439380514296, 999.928800742185, 1000.0023733085997]
Denom/chang: [11.343247073477931, -0.010072328550519566, -3.5962577198338996, -0.002191451102081148, 0.07223371432999107, -0.0024077904896538972, -11.343247073477931, 3.5962577198338996, 9.245704912785868E-8, 2.1915245405068617E-6, 0.002191451102081148, -0.07223371432999107, 0.0024077904896538972]
Looking for the largest possible step length (smallest positive scalar) among these: [0.03029915953141825, -33.58409964023038, -0.9345395189710524, -456298.59639530425, 13844.93665505154, -415317.54153374984, -5.56202935149901E-4, 1.8461288254717005, 1.0815832967122948E8, 4563034.375498612, 456338.6958995897, -13842.9652969821, 415319.5128918143]).
Best so far: 0.03029915953141825 @ 0 (0).
Performing update with step length 0.03029915953141825 adding constraint 0
Post iteration
    Solution: { 0.017499999999999995, -0.016357526873939144, 1.530191454041152, 4.999999997198629, 5.00000174668026, 4.3871652302993285, -6.901063698100275, 0.23003545714674037 }
    L: { -41.7466003274594, -1034.4565149570255, 3448.1890022238263, -8.470329472543003E-22, 0.0, 0.0, 42107.79425673655, 38262.32081846984, 0.0, 0.0, 0.0, 0.0, 89109.36010552711, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -12.799448013012807, -0.04805802346744592, 0.0056799658425829075 }
Nonzero E-slack! 12.799448013012807

NeedsAnotherIteration?
Suggested to include: 0

PerformIteration 8
Last Incl/Excl: 0/8 => [0, 3, 4, 9] / [1, 2, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -0.175, -5.1, -4.9, -0.175]
Relative error 4.6371769739024327E-10 in solution for L=[-43.44803447057529, 68442.19013877031, -228140.63432401285, 44089.24963704292, 16162.05903718993, -1447.774265844521, 839452.3847875062]
Current: 6.901063698100275 - { 0.017499999999999995, -0.016357526873939144, 1.530191454041152, 4.999999997198629, 5.00000174668026, 4.3871652302993285, -6.901063698100275, 0.23003545714674037 }
Step: 0.05684468422324418 - { -4.35224920511193E-5, -5.92543984062565E-4, -0.04585750431880253, 5.586347384678447E-8, -1.6999344154555729E-6, -0.042361783241799955, 0.05684468422324418, -0.0018948228227275432 }
Included-change: { -4.35224920511193E-4, 5.586347384678447E-8, -1.6999344154555729E-6, 0.00592543984062565 }
Nonzero Included-change! -4.35224920511193E-4
Step too small (or freaky large)!
Post iteration
    Solution: { 0.017499999999999995, -0.016357526873939144, 1.530191454041152, 4.999999997198629, 5.00000174668026, 4.3871652302993285, -6.901063698100275, 0.23003545714674037 }
    L: { -43.44803447057529, 68442.19013877031, -228140.63432401285, 44089.24963704292, 0.0, 0.0, 16162.05903718993, -1447.774265844521, 0.0, 0.0, 0.0, 0.0, 839452.3847875062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -12.799448013012807, -0.04805802346744592, 0.0056799658425829075 }
Nonzero E-slack! 12.799448013012807

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 44089.24963704292, 16162.05903718993, -1447.774265844521, 839452.3847875062 }.
Best so far: -1447.774265844521 @ 2 (4).
Suggest to exclude: -1447.774265844521 @ 2 (4).
Suggested to exclude: 4

PerformIteration 9
Last Incl/Excl: 0/4 => [0, 3, 9] / [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -0.175, -5.1, -0.175]
Relative error 1.194655800070549E-10 in solution for L=[-44.58031726240967, 67723.49380971015, -225744.97988776694, 43651.24217990836, 17578.94722608392, 834451.0255120792]
Current: 6.901063698100275 - { 0.017499999999999995, -0.016357526873939144, 1.530191454041152, 4.999999997198629, 5.00000174668026, 4.3871652302993285, -6.901063698100275, 0.23003545714674037 }
Step: 0.1287143171292593 - { -1.4418661594385596E-5, -8.719407564472086E-4, -0.06399384730622071, 1.9483685775867343E-8, -0.12740365182040136, 0.07086649594163852, 0.1287143171292593, -0.004290477258973441 }
Included-change: { -1.4418661594385596E-4, 1.9483685775867343E-8, 0.008719407564472086 }
Nonzero Included-change! -1.4418661594385596E-4
Step too small (or freaky large)!
Post iteration
    Solution: { 0.017499999999999995, -0.016357526873939144, 1.530191454041152, 4.999999997198629, 5.00000174668026, 4.3871652302993285, -6.901063698100275, 0.23003545714674037 }
    L: { -44.58031726240967, 67723.49380971015, -225744.97988776694, 43651.24217990836, 0.0, 0.0, 17578.94722608392, 0.0, 0.0, 0.0, 0.0, 0.0, 834451.0255120792, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -12.799448013012807, -0.04805802346744592, 0.0056799658425829075 }
Nonzero E-slack! 12.799448013012807

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 43651.24217990836, 17578.94722608392, 834451.0255120792 }.
Nothing to exclude
Stop!
14.28987901938080892099799173529990 ! 14.272908 <= E0 <= 14.272908
-3.8498302401445089006000000000 ! -3.888271 <= E1 <= -3.888271
-2.205569096273779820000000000 ! -0.069929 <= E2 <= -0.069929
