Will inlcude ineq 6 with slack=0.0 L=-1.0E-5
Will inlcude ineq 8 with slack=0.0 L=-1.0000000000000003E-5
Will inlcude ineq 9 with slack=0.0 L=-1.0E-5
Initial solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

PerformIteration 1
Last Incl/Excl: 9/-1 => [6, 8, 9] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -4.9, -4.9, -4.9]
Relative error NaN in solution for L=[-5.174614687402384E-10, -1.3936788788113143E-6, -4.0569269473814645E-7, -4.549162989072992E-4, -7.510756963025753E-4, -4.4897465055916566E-4]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.10820588674864 - { -0.5500625719872888, -6.224863606574486, -0.39430095431760087, 0.0, 0.0, 8.881784197001252E-16, -14.334862214861477, -0.12965105716492342, -90.10820588674864 }
Included-change: { 0.0, 0.0, 8.881784197001252E-16 }
Numer/slack: [0.0, -1.6298143390436337E-11, 7.27612414763712E-14, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711, 0.0]
Denom/chang: [-0.5500625719872888, -6.224863606574486, 0.39430095431760087, -0.39430095431760087, 6.224863606574486, 0.0, 0.0, 14.334862214861477, -14.334862214861477, -8.881784197001252E-16, -0.12965105716492342, 90.10820588674864, -90.10820588674864, 0.12965105716492342, 0.5500625719872888]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 2.618233012081229E-12, 1.845322479685494E-13, -0.08876468498662446, 0.005622613157231647, Infinity, Infinity, 6977.000082953457, -6975.000082953451, -1.125899906842624E16, -771300.076803257, 1110.7768401435508, -1108.776840143542, 771302.0768034719, 0.0]).
Best so far: 0.0 @ 2 (2).
Do nothing because step length 0.0 and size 90.10820588674864 but add constraint 2
Post iteration
    Solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
    L: { -5.174614687402384E-10, -1.3936788788113143E-6, -4.0569269473814645E-7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.549162989072992E-4, 0.0, -7.510756963025753E-4, -4.4897465055916566E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Suggested to include: 2

PerformIteration 2
Last Incl/Excl: 2/-1 => [2, 6, 8, 9] / [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.00080029601087 - { -1.334435019754276, 0.9531587678790492, -7.293818327092083E-14, 0.0, 0.0, 0.0, -14.33486221478771, 3.0449640888817946, -90.00080029601087 }
Included-change: { 7.293818327092083E-14, 0.0, 0.0, 0.0 }
Numer/slack: [0.0, -1.6298143390436337E-11, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711, 0.0]
Denom/chang: [-1.334435019754276, 0.9531587678790492, -7.293818327092083E-14, -0.9531587678790492, 0.0, 0.0, 14.33486221478771, -14.33486221478771, 0.0, 3.0449640888817946, 90.00080029601087, -90.00080029601087, -3.0449640888817946, 1.334435019754276]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, -1.709908562946198E-11, -4.798584010507035E11, -0.036720010554148794, Infinity, Infinity, 6977.000082989361, -6975.000082989344, Infinity, 32841.067227709726, 1112.102424386147, -1110.1000376164563, -32841.15238541097, 0.0]).
Best so far: 1.709908562946198E-11 @ 1 (1).
Best so far: 0.0 @ 13 (17).
Do nothing because step length 0.0 and size 90.00080029601087 but add constraint 17
Post iteration
    Solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
    L: { -1.255119181632516E-9, -317.46151599835065, -107.40559114346405, 0.0, 0.0, 255888.73747931494, 0.0, 0.0, 0.0, 9678.191948678206, 0.0, -63967.82943287429, 8512.042151540049, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Suggested to include: 17

PerformIteration 3
Last Incl/Excl: 17/-1 => [2, 6, 8, 9, 17] / [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.0243819309955 - { 0.0, 0.9534085105710902, -7.159897674746674E-14, 0.0, 0.0, 0.0, -0.14983062231488553, 3.0457619176950925, -90.0243819309955 }
Included-change: { 7.159897674746674E-14, 0.0, 0.0, 0.0, 0.0 }
Numer/slack: [0.0, -1.6298143390436337E-11, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711]
Denom/chang: [0.0, 0.9534085105710902, -7.159897674746674E-14, -0.9534085105710902, 0.0, 0.0, 0.14983062231488553, -0.14983062231488553, 0.0, 3.0457619176950925, 90.0243819309955, -90.0243819309955, -3.0457619176950925]
Looking for the largest possible step length (smallest positive scalar) among these: [NaN, -1.7094606571818596E-11, -4.8883380168091003E11, -0.03671039185011386, Infinity, Infinity, 667515.9811592038, -667324.63359629, Infinity, 32832.464602027954, 1111.8111122674202, -1109.8092500173416, -32832.54973742238]).
Best so far: 1.7094606571818596E-11 @ 1 (1).
Performing update with step length 1.7094606571818596E-11 adding constraint 1
Post iteration
    Solution: { 0.0, 0.01750000003259629, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214910661, 0.1296510711537783, 90.10820588561539 }
    L: { -141.85031592598335, -317.5412988796804, -83.82395615882501, 0.0, 0.0, 3255457.9512055824, 0.0, 0.0, 0.0, -134468.57033372874, 0.0, -56901.31722561506, 137582.84114814477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1507871.6837656419 }
E-slack: { -1.0937583283521235E-8, 1.853135245255544E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Suggested to include: 1

PerformIteration 4
Last Incl/Excl: 1/-1 => [1, 2, 6, 8, 9, 17] / [0, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 90.10820588561539 - { 0.0, 0.01750000003259629, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214910661, 0.1296510711537783, 90.10820588561539 }
Step: 3.4418690120219253E-9 - { 1.346699885362997E-13, -3.2601206456650544E-11, -6.60964338816683E-14, -6.217248937900877E-15, 0.0, 0.0, -5.972111694063642E-12, 8.448419741569069E-11, -3.4418690120219253E-9 }
Included-change: { -3.2601206456650544E-11, 6.60964338816683E-14, 0.0, 6.217248937900877E-15, 0.0, -1.346699885362997E-13 }
Step too small (or freaky large)!
Post iteration
    Solution: { 0.0, 0.01750000003259629, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214910661, 0.1296510711537783, 90.10820588561539 }
    L: { -143.3486221490469, -12.965107123826249, -90108.20588217353, 0.0, 8.51019092648544E7, 1.5525185141080792E9, 0.0, 0.0, 0.0, 9284910.273790985, 0.0, -2.703375827585444E7, -4237221.446915866, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1523798.7087620285 }
E-slack: { -1.0937583283521235E-8, 1.853135245255544E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 8.51019092648544E7, 1.5525185141080792E9, 9284910.273790985, -2.703375827585444E7, -4237221.446915866, 1523798.7087620285 }.
Best so far: -2.703375827585444E7 @ 3 (8).
Suggest to exclude: -2.703375827585444E7 @ 3 (8).
Suggested to exclude: 8

PerformIteration 5
Last Incl/Excl: 1/8 => [1, 2, 6, 9, 17] / [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 90.10820588561539 - { 0.0, 0.01750000003259629, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214910661, 0.1296510711537783, 90.10820588561539 }
Step: 90.01251368453312 - { -5.133544671015236E-16, -3.259651229492455E-11, -7.258429968182156E-14, 3.0004171227026486, 0.0, 0.0, -7.553069281129865E-12, -3.000417122617831, -90.01251368453312 }
Included-change: { -3.259651229492455E-11, 7.258429968182156E-14, 0.0, 0.0, 5.133544671015236E-16 }
Numer/slack: [0.0, 0.03499999999992724, 0.03500000003259629, 10.0, 10.0, 0.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892885, 100090.10820588561, 99909.89179411439, 100000.12965107115]
Denom/chang: [-5.133544671015236E-16, -7.258429968182156E-14, 3.259651229492455E-11, 3.0004171227026486, 0.0, -3.0004171227026486, 7.553069281129865E-12, -7.553069281129865E-12, 0.0, -3.000417122617831, 90.01251368453312, -90.01251368453312, 3.000417122617831]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, -4.821979429897682E11, 1.0737345061927369E9, 3.3328699280960055, Infinity, -0.0, 1.3241548718755264E16, -1.323775294734596E16, Infinity, -33328.65607088659, 1111.957705754907, -1109.9555795571782, 33328.74249291783]).
Performing update with step length 1.0 adding constraint -1
Post iteration
    Solution: { -5.133544671015236E-16, 0.017499999999999776, -0.017499999999999825, -1.9995828772973514, -5.0, 5.0, 14.334862214903108, -2.8707660514640527, 0.09569220108227228 }
    L: { -143.3486221490311, 287.07660514640526, -95.69220108227587, 0.0, 204593.3330888477, 6524884.665908045, 0.0, 0.0, 0.0, -131752.56203333504, 0.0, 0.0, 112233.51835900174, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1523798.7087609342 }
E-slack: { 1.8189894035458565E-12, 5.6843418860808015E-14, 0.0 }
I-slack: { 5.133544671015236E-16, 2.255140518769849E-16, 1.7694179454963432E-16, 0.03499999999999982, 0.03499999999999978, 6.999582877297351, 0.0, 10.0, 3.0004171227026486, 0.0, 100014.3348622149, 99985.6651377851, 10.0, 100002.87076605146, 100000.09569220108, 99999.90430779892, 99997.12923394854, -5.133544671015236E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 204593.3330888477, 6524884.665908045, -131752.56203333504, 112233.51835900174, 1523798.7087609342 }.
Best so far: -131752.56203333504 @ 2 (6).
Suggest to exclude: -131752.56203333504 @ 2 (6).
Suggested to exclude: 6

PerformIteration 6
Last Incl/Excl: 1/6 => [1, 2, 9, 17] / [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 14.334862214903108 - { -5.133544671015236E-16, 0.017499999999999776, -0.017499999999999825, -1.9995828772973514, -5.0, 5.0, 14.334862214903108, -2.8707660514640527, 0.09569220108227228 }
Step: 11.399857686558155 - { -1.7111815570050794E-16, 8.153200337090993E-16, -6.938893903907228E-17, 3.9709098200592456, 11.399857686558155, 0.0, -11.386089037334154, -4.531027403855537, 0.15103424811882332 }
Included-change: { 8.153200337090993E-16, 6.938893903907228E-17, 0.0, 1.7111815570050794E-16 }
Numer/slack: [5.133544671015236E-16, 0.03499999999999982, 0.03499999999999978, 6.999582877297351, 0.0, 10.0, 3.0004171227026486, 100014.3348622149, 99985.6651377851, 10.0, 100002.87076605146, 100000.09569220108, 99999.90430779892, 99997.12923394854]
Denom/chang: [-1.7111815570050794E-16, -6.938893903907228E-17, -8.153200337090993E-16, 3.9709098200592456, -11.399857686558155, 11.399857686558155, -3.9709098200592456, 11.386089037334154, -11.386089037334154, 0.0, -4.531027403855537, -0.15103424811882332, 0.15103424811882332, 4.531027403855537]
Looking for the largest possible step length (smallest positive scalar) among these: [-2.9999999999999987, -5.04403158265493E14, -4.292792836302063E13, 1.7627151445088516, -0.0, 0.8772039331500813, -0.755599411385747, 8783.90591662117, -8781.387955946893, Infinity, -22070.683280563942, -662102.1188090261, 662100.8516500569, 22069.416121575225]).
Best so far: 0.8772039331500813 @ 5 (7).
Performing update with step length 0.8772039331500813 adding constraint 7
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -29.48773177568954, 740.179345531959, -246.72644920109562, 0.0, 474060.3082548439, 8658278.930782055, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -17347.57062723088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 313455.17613256106 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Suggested to include: 7

PerformIteration 7
Last Incl/Excl: 7/6 => [1, 2, 7, 9, 17] / [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 6.8454011113369315 - { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
Step: 1.7763568394002505E-15 - { 3.2122367491438143E-16, -1.5334955527634975E-15, -7.979727989493313E-17, -2.220446049250313E-16, 0.0, 0.0, 1.7763568394002505E-15, 0.0, 6.661338147750939E-16 }
Included-change: { -1.5334955527634975E-15, 7.979727989493313E-17, 0.0, 0.0, -3.2122367491438143E-16 }
Step too small (or freaky large)!
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -43.46940128156568, 684.5401111336931, -228.18003757247, 0.0, 440970.82355851494, 8396306.506015357, 0.0, 0.0, 0.0, 0.0, 16178.696415093505, 0.0, -1435.5225615921809, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 462080.601476562 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 440970.82355851494, 8396306.506015357, 16178.696415093505, -1435.5225615921809, 462080.601476562 }.
Best so far: -1435.5225615921809 @ 3 (9).
Suggest to exclude: -1435.5225615921809 @ 3 (9).
Suggested to exclude: 9

PerformIteration 8
Last Incl/Excl: 7/9 => [1, 2, 7, 17] / [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16]
Current: 6.8454011113369315 - { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
Step: 0.12318739254511968 - { 1.501055192138736E-16, -1.3079815008865125E-15, -7.979727989493313E-17, -0.019819590406089382, 0.0, -0.12318739254511968, 0.1110937448345588, 0.07304846922857688, -0.002434948980891888 }
Included-change: { -1.3079815008865125E-15, 7.979727989493313E-17, 0.0, -1.501055192138736E-16 }
Step too small (or freaky large)!
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -44.580338729911254, 677.2352642108355, -225.74508859157746, 0.0, 436512.63199534215, 8344514.273308908, 0.0, 0.0, 0.0, 0.0, 17578.955691504685, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 473889.88868089346 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 436512.63199534215, 8344514.273308908, 17578.955691504685, 473889.88868089346 }.
Nothing to exclude
Stop!
Will inlcude ineq 6 with slack=0.0 L=-1.0E-5
Will inlcude ineq 8 with slack=0.0 L=-1.0000000000000003E-5
Will inlcude ineq 9 with slack=0.0 L=-1.0E-5
Initial solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

PerformIteration 1
Last Incl/Excl: 9/-1 => [6, 8, 9] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -4.9, -4.9, -4.9]
Relative error 9.758396882456873E-11 in solution for L=[-5.174614687481708E-10, -1.3936788788075228E-6, -4.0569269473705573E-7, -4.5491629890739556E-4, -7.510756963018699E-4, -4.4897465055927457E-4]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.10820588674864 - { -0.5500625719957211, -6.224863606556222, -0.3943009543612292, -8.881784197001252E-15, 7.016609515630989E-14, 5.240252676230739E-14, -14.334862214861477, -0.12965105716492342, -90.10820588674864 }
Included-change: { -7.016609515630989E-14, 8.881784197001252E-15, 5.240252676230739E-14 }
Numer/slack: [0.0, -1.6298143390436337E-11, 7.27612414763712E-14, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711, 0.0]
Denom/chang: [-0.5500625719957211, -6.224863606556222, 0.3943009543612292, -0.3943009543612292, 6.224863606556222, -8.881784197001252E-15, 7.016609515630989E-14, 14.334862214861477, -14.334862214861477, -5.240252676230739E-14, -0.12965105716492342, 90.10820588674864, -90.10820588674864, 0.12965105716492342, 0.5500625719957211]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 2.6182330120889106E-12, 1.8453224794813142E-13, -0.08876468497680289, 0.005622613157248144, -1.125899906842624E15, 1.4251897554969925E14, 6977.000082953457, -6975.000082953451, -1.908304926851905E14, -771300.076803257, 1110.7768401435508, -1108.776840143542, 771302.0768034719, 0.0]).
Best so far: 0.0 @ 2 (2).
Do nothing because step length 0.0 and size 90.10820588674864 but add constraint 2
Post iteration
    Solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
    L: { -5.174614687481708E-10, -1.3936788788075228E-6, -4.0569269473705573E-7, -3.1437218023860523E-35, -2.705934198211479E-21, -4.244030457389227E-20, 0.0, 0.0, 0.0, -4.5491629890739556E-4, 0.0, -7.510756963018699E-4, -4.4897465055927457E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Suggested to include: 2

PerformIteration 2
Last Incl/Excl: 2/-1 => [2, 6, 8, 9] / [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -4.9, -4.9, -4.9]
Relative error 5.419156625106641E-10 in solution for L=[-1.2551153889622922E-9, -317.3155634797687, -107.3562115628072, 255771.09296562575, 9673.74241230771, -63938.42030681904, 8508.128751020125]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.00084967559152 - { -1.334427462843989, 0.9534605364897288, 6.680555634375196E-5, -5.811452830073449E-8, -3.5448461943587972E-9, 2.1734740229817362E-8, -14.33486221478771, 3.0435045636959748, -90.00084967559152 }
Included-change: { -6.680555634375196E-5, 3.5448461943587972E-9, 5.811452830073449E-8, 2.1734740229817362E-8 }
Nonzero Included-change! -6.680555634375196E-5
Numer/slack: [0.0, -1.6298143390436337E-11, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711, 0.0]
Denom/chang: [-1.334427462843989, 0.9534605364897288, 6.680555634375196E-5, -0.9534605364897288, -5.811452830073449E-8, -3.5448461943587972E-9, 14.33486221478771, -14.33486221478771, -2.1734740229817362E-8, 3.0435045636959748, 90.00084967559152, -90.00084967559152, -3.0435045636959748, 1.334427462843989]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, -1.7093673798435085E-11, 523.9085177261703, -0.03670838873431988, -1.720740113083498E8, -2.820996864663357E9, 6977.000082989361, -6975.000082989344, -4.60092915501297E8, 32856.81629716071, 1112.1018142235591, -1110.0994285524916, -32856.90149569968, 0.0]).
Best so far: 1.7093673798435085E-11 @ 1 (1).
Best so far: 0.0 @ 13 (17).
Do nothing because step length 0.0 and size 90.00084967559152 but add constraint 17
Post iteration
    Solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
    L: { -1.2551153889622922E-9, -317.3155634797687, -107.3562115628072, -3.1437218023860523E-35, -2.705934198211479E-21, 255771.09296562575, 0.0, 0.0, 0.0, 9673.74241230771, 0.0, -63938.42030681904, 8508.128751020125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Suggested to include: 17

PerformIteration 3
Last Incl/Excl: 17/-1 => [2, 6, 8, 9, 17] / [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -4.9, -4.9, -4.9, 0.0]
Relative error 4.689753425124603E-10 in solution for L=[-141.8258398207277, -317.10499937714, -83.68041818821357, 3254588.71248236, -134456.99866967282, -56814.62588417755, 137548.87207689058, 1507611.5022792425]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.02452546896612 - { -2.328306436538696E-5, 0.9528362593264318, -8.86440284375567E-6, 3.056833524084368E-7, -9.312294420027456E-7, -8.150003854012766E-7, -0.1522782328404535, 3.0413989226696883, -90.02452546896612 }
Included-change: { 8.86440284375567E-6, 9.312294420027456E-7, -3.056833524084368E-7, -8.150003854012766E-7, 2.328306436538696E-5 }
Nonzero Included-change! -8.150003854012766E-7
Numer/slack: [0.0, -1.6298143390436337E-11, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711]
Denom/chang: [-2.328306436538696E-5, 0.9528362593264318, -8.86440284375567E-6, -0.9528362593264318, 3.056833524084368E-7, -9.312294420027456E-7, 0.1522782328404535, -0.1522782328404535, 8.150003854012766E-7, 3.0413989226696883, 90.02452546896612, -90.02452546896612, -3.0413989226696883]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, -1.7104873194013038E-11, -3948.376514113662, -0.03673243925565968, 3.2713590456305142E7, -1.073849209330574E7, 656786.8105417466, -656598.5385616019, 1.2269932848039528E7, 32879.56394130327, 1111.8093395603726, -1109.807480502127, -32879.64919882745]).
Best so far: 1.7104873194013038E-11 @ 1 (1).
Performing update with step length 1.7104873194013038E-11 adding constraint 1
Post iteration
    Solution: { -3.9825386353798757E-16, 0.01750000003259629, -0.017499999999927393, -5.0, -5.0, 5.0, 14.334862214910618, 0.12965107115373495, 90.10820588561447 }
    L: { -141.8258398207277, -317.10499937714, -83.68041818821357, -3.1437218023860523E-35, -2.705934198211479E-21, 3254588.71248236, 0.0, 0.0, 0.0, -134456.99866967282, 0.0, -56814.62588417755, 137548.87207689058, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1507611.5022792425 }
E-slack: { -1.0903022484853864E-8, 1.853646836025291E-8, -6.406096986211196E-8 }
Nonzero E-slack! 6.406096986211196E-8

NeedsAnotherIteration?
Suggested to include: 1

PerformIteration 4
Last Incl/Excl: 1/-1 => [1, 2, 6, 8, 9, 17] / [0, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -0.0175, -4.9, -4.9, -4.9, 0.0]
Relative error 3.190555193785364E-10 in solution for L=[-138.68769170600885, -122.53192537054481, -38632.09521572062, 3.646051394858848E7, 6.668792900554473E8, 3903008.717832107, -1.1601881757743262E7, -1741921.79745237, 1474252.9253124122]
Current: 90.10820588561447 - { -3.9825386353798757E-16, 0.01750000003259629, -0.017499999999927393, -5.0, -5.0, 5.0, 14.334862214910618, 0.12965107115373495, 90.10820588561447 }
Step: 51.47611066989385 - { 1.3969838619272003E-4, -0.007814245256595312, 0.017499999999927393, -2.096056938167834E-4, 4.650801420247319E-5, 1.635625958407161E-5, -0.46609304430973353, 1.0956681825517132, -51.47611066989385 }
Included-change: { -0.007814245256595312, -0.017499999999927393, -4.650801420247319E-5, 2.096056938167834E-4, 1.635625958407161E-5, -1.3969838619272003E-4 }
Nonzero Included-change! -0.017499999999927393
Numer/slack: [3.9825386353798757E-16, 0.034999999999927395, 0.03500000003259629, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892885, 100090.10820588561, 99909.89179411439, 100000.12965107115]
Denom/chang: [1.3969838619272003E-4, 0.017499999999927393, 0.007814245256595312, -2.096056938167834E-4, 4.650801420247319E-5, 0.46609304430973353, -0.46609304430973353, -1.635625958407161E-5, 1.0956681825517132, 51.47611066989385, -51.47611066989385, -1.0956681825517132]
Looking for the largest possible step length (smallest positive scalar) among these: [2.8508121989940455E-12, 2.000000000004149, 4.47899942775099, -47708.6276517899, 215016.705647007, 214580.1918377315, -214518.68110552937, -611386.7262010446, 91268.3894096825, 1944.39919611922, -1940.898224320342, -91268.62607087832]).
Best so far: 0.0 @ 0 (0).
Do nothing because step length 0.0 and size 51.47611066989385 but add constraint 0
Post iteration
    Solution: { -3.9825386353798757E-16, 0.01750000003259629, -0.017499999999927393, -5.0, -5.0, 5.0, 14.334862214910618, 0.12965107115373495, 90.10820588561447 }
    L: { -138.68769170600885, -122.53192537054481, -38632.09521572062, -3.1437218023860523E-35, 3.646051394858848E7, 6.668792900554473E8, 0.0, 0.0, 0.0, 3903008.717832107, 0.0, -1.1601881757743262E7, -1741921.79745237, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1474252.9253124122 }
E-slack: { -1.0903022484853864E-8, 1.853646836025291E-8, -6.406096986211196E-8 }
Nonzero E-slack! 6.406096986211196E-8

NeedsAnotherIteration?
Suggested to include: 0

PerformIteration 5
Last Incl/Excl: 0/-1 => [0, 1, 2, 6, 8, 9, 17] / [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
KKT system unsolvable!
Constraints problem!
Looking for the largest negative lagrange multiplier among these: { 1.5258789062500003E-9, 3.646051394858848E7, 6.668792900554473E8, 3903008.717832107, -1.1601881757743262E7, -1741921.79745237, 1474252.9253124122 }.
Best so far: -1.1601881757743262E7 @ 4 (8).
Suggest to exclude: -1.1601881757743262E7 @ 4 (8).
Will remove 8

PerformIteration 6
Last Incl/Excl: 0/8 => [0, 1, 2, 6, 9, 17] / [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -4.9, -4.9, 0.0]
Relative error 4.6492878368131665E-11 in solution for L=[-137.28968159908368, 151.1160212445743, -50.372006276629726, 7430.437641791294, 117414.12706618125, 4919056.638919102, -131110.88084709397, 114840.638905419, 1466822.4876706214]
Current: 90.10820588561447 - { -3.9825386353798757E-16, 0.01750000003259629, -0.017499999999927393, -5.0, -5.0, 5.0, 14.334862214910618, 0.12965107115373495, 90.10820588561447 }
Step: 90.05783387933784 - { -6.053596734996628E-4, -7.420144556090219E-4, 6.43061399387232E-4, 2.4853100659151095, 2.5844294578192262E-5, 7.770629599335166E-6, -0.6058940550022509, -1.640811283599478, -90.05783387933784 }
Included-change: { -6.053596734996628E-4, -7.420144556090219E-4, -6.43061399387232E-4, -2.5844294578192262E-5, 7.770629599335166E-6, 6.053596734996628E-4 }
Nonzero Included-change! -7.420144556090219E-4
Numer/slack: [0.034999999999927395, 0.03500000003259629, 10.0, 10.0, 0.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892885, 100090.10820588561, 99909.89179411439, 100000.12965107115]
Denom/chang: [6.43061399387232E-4, 7.420144556090219E-4, 2.4853100659151095, 2.5844294578192262E-5, -2.4853100659151095, 0.6058940550022509, -0.6058940550022509, -7.770629599335166E-6, -1.640811283599478, 90.05783387933784, -90.05783387933784, 1.640811283599478]
Looking for the largest possible step length (smallest positive scalar) among these: [54.42715117604418, 47.168892422546406, 4.023642819117592, 386932.59627361334, -0.0, 165069.01501425583, -165021.69696550933, -1286897.0103600838, -60945.3819268949, 1111.3981304501428, -1109.3970117910746, 60945.53995978077]).
Performing update with step length 1.0 adding constraint -1
Post iteration
    Solution: { -6.05359673500061E-4, 0.016757985576987267, -0.01685693860054016, -2.5146899340848905, -4.999974155705422, 5.000007770629599, 13.728968159908367, -1.511160212445743, 0.050372006276631964 }
    L: { -137.28968159908368, 151.1160212445743, -50.372006276629726, 7430.437641791294, 117414.12706618125, 4919056.638919102, 0.0, 0.0, 0.0, -131110.88084709397, 0.0, 0.0, 114840.638905419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1466822.4876706214 }
E-slack: { 614.9807624618097, -87.90942293002826, 166.7445621077873 }
Nonzero E-slack! 614.9807624618097

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 7430.437641791294, 117414.12706618125, 4919056.638919102, -131110.88084709397, 114840.638905419, 1466822.4876706214 }.
Best so far: -131110.88084709397 @ 3 (6).
Suggest to exclude: -131110.88084709397 @ 3 (6).
Suggested to exclude: 6

PerformIteration 7
Last Incl/Excl: 0/6 => [0, 1, 2, 9, 17] / [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -4.9, 0.0]
Relative error 4.999728739935113E-10 in solution for L=[-29.441511929406143, 739.0191689355198, -246.33972366625423, 580644.5335332413, 473317.253643454, 8644707.716393385, -17320.379588055053, 893608.3917791714]
Current: 13.728968159908367 - { -6.05359673500061E-4, 0.016757985576987267, -0.01685693860054016, -2.5146899340848905, -4.999974155705422, 5.000007770629599, 13.728968159908367, -1.511160212445743, 0.050372006276631964 }
Step: 11.400987314118538 - { 6.402842700481415E-4, 7.566995918750763E-4, -6.51925802230835E-4, 4.477931779547362, 11.400987314118538, -7.894414011389017E-6, -10.784816966967753, -5.879031476909455, 0.19596771738962226 }
Included-change: { 6.402842700481415E-4, 7.566995918750763E-4, 6.51925802230835E-4, -7.894414011389017E-6, -6.402842700481415E-4 }
Nonzero Included-change! -6.402842700481415E-4
Numer/slack: [0.03435693860054016, 0.03425798557698727, 7.51468993408489, 2.5844294578192262E-5, 9.999974155705422, 2.4853100659151095, 100013.7289681599, 99986.2710318401, 10.0000077706296, 100001.51116021245, 100000.05037200627, 99999.94962799373, 99998.48883978755]
Denom/chang: [-6.51925802230835E-4, -7.566995918750763E-4, 4.477931779547362, -11.400987314118538, 11.400987314118538, -4.477931779547362, 10.784816966967753, -10.784816966967753, 7.894414011389017E-6, -5.879031476909455, -0.19596771738962226, 0.19596771738962226, 5.879031476909455]
Looking for the largest possible step length (smallest positive scalar) among these: [-52.70068845714286, -45.272900824615384, 1.6781608796292313, -2.2668470603583336E-6, 0.8771147515725979, -0.5550129363887562, 9273.567578799592, -9271.021598056115, 1266719.4494997235, -17009.861497251615, -510288.38680192694, 510287.8727171895, 17009.347412501982]).
Best so far: 0.8771147515725979 @ 4 (7).
Performing update with step length 0.8771147515725979 adding constraint 7
Post iteration
    Solution: { -4.375689504094321E-5, 0.01742169795152986, -0.017428752338607627, 1.4129700862918346, 5.0, 5.000000846322615, 4.269446105170507, -6.667745445802663, 0.22225818203107955 }
    L: { -29.441511929406143, 739.0191689355198, -246.33972366625423, 580644.5335332413, 473317.253643454, 8644707.716393385, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -17320.379588055053, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 893608.3917791714 }
E-slack: { 78.7508632153058, -11.073126687132174, 22.581511161098103 }
Nonzero E-slack! 78.7508632153058

NeedsAnotherIteration?
Suggested to include: 7

PerformIteration 8
Last Incl/Excl: 7/6 => [0, 1, 2, 7, 9, 17] / [3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -5.1, -4.9, 0.0]
Relative error 5.513451297578004E-10 in solution for L=[-43.43825702634227, 682.1840907667872, -227.39469744598495, 506251.6939446139, 439471.7267356879, 8370252.483953675, 16241.337035603523, -1323.7452233733632, 968001.2313677985]
Current: 6.667745445802663 - { -4.375689504094321E-5, 0.01742169795152986, -0.017428752338607627, 1.4129700862918346, 5.0, 5.000000846322615, 4.269446105170507, -6.667745445802663, 0.22225818203107955 }
Step: 0.15409546186520906 - { 7.868149158902365E-5, 9.298721733248111E-5, -3.5950883654801286E-4, 0.05819598085951805, 8.944189122672697E-8, -1.0496878131149856E-6, 0.0743795974637198, -0.15409546186520906, 0.005136515414905396 }
Included-change: { 7.868149158902365E-5, 9.298721733248111E-5, 3.5950883654801286E-4, 8.944189122672697E-8, -1.0496878131149856E-6, -7.868149158902365E-5 }
Nonzero Included-change! -7.868149158902365E-5
Step too small (or freaky large)!
Post iteration
    Solution: { -4.375689504094321E-5, 0.01742169795152986, -0.017428752338607627, 1.4129700862918346, 5.0, 5.000000846322615, 4.269446105170507, -6.667745445802663, 0.22225818203107955 }
    L: { -43.43825702634227, 682.1840907667872, -227.39469744598495, 506251.6939446139, 439471.7267356879, 8370252.483953675, 0.0, 0.0, 0.0, 0.0, 16241.337035603523, 0.0, -1323.7452233733632, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 968001.2313677985 }
E-slack: { 78.7508632153058, -11.073126687132174, 22.581511161098103 }
Nonzero E-slack! 78.7508632153058

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 506251.6939446139, 439471.7267356879, 8370252.483953675, 16241.337035603523, -1323.7452233733632, 968001.2313677985 }.
Best so far: -1323.7452233733632 @ 4 (9).
Suggest to exclude: -1323.7452233733632 @ 4 (9).
Suggested to exclude: 9

PerformIteration 9
Last Incl/Excl: 7/9 => [0, 1, 2, 7, 17] / [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -5.1, 0.0]
Relative error 6.963766185765265E-10 in solution for L=[-44.600924833256656, 677.547994787683, -225.84933211967294, 500072.1029714543, 436714.2027874514, 8348367.564666236, 17587.073220724124, 974180.8223409578]
Current: 6.667745445802663 - { -4.375689504094321E-5, 0.01742169795152986, -0.017428752338607627, 1.4129700862918346, 5.0, 5.000000846322615, 4.269446105170507, -6.667745445802663, 0.22225818203107955 }
Step: 0.19064637815515884 - { 4.375689504094321E-5, 5.8062620784400665E-5, 1.061524507597264E-4, 0.05836420099955797, -9.245704912785868E-8, -0.12085391667274603, 0.19064637815515884, -0.1077345020741669, 0.003591150088593398 }
Included-change: { 4.375689504094321E-5, 5.8062620784400665E-5, -1.061524507597264E-4, -9.245704912785868E-8, -4.375689504094321E-5 }
Nonzero Included-change! -1.061524507597264E-4
Step too small (or freaky large)!
Post iteration
    Solution: { -4.375689504094321E-5, 0.01742169795152986, -0.017428752338607627, 1.4129700862918346, 5.0, 5.000000846322615, 4.269446105170507, -6.667745445802663, 0.22225818203107955 }
    L: { -44.600924833256656, 677.547994787683, -225.84933211967294, 500072.1029714543, 436714.2027874514, 8348367.564666236, 0.0, 0.0, 0.0, 0.0, 17587.073220724124, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 974180.8223409578 }
E-slack: { 78.7508632153058, -11.073126687132174, 22.581511161098103 }
Nonzero E-slack! 78.7508632153058

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 500072.1029714543, 436714.2027874514, 8348367.564666236, 17587.073220724124, 974180.8223409578 }.
Nothing to exclude
Stop!
-0.069929073791421467647219874165 ! -0.069929 <= E2 <= -0.069929
E-slack: { 5.4569682106375694E-12, -4.04121180963557E-14, 7.367045341821754E-15 }
I-slack: { -2.7755575615628914E-17, 0.35, 3.53610475536321, 0.0, 0.12318739254506994, 999.9554196612701, 1000.0677235264211, 999.997742549114, 0.35, -2.7755575615628914E-17, 6.46389524463679, 10.0, 9.87681260745493, 1000.0445803387299, 999.9322764735789, 1000.002257450886 }
Will inlcude ineq 0 with slack=-2.7755575615628914E-17 L=0.0
Will inlcude ineq 3 with slack=0.0 L=0.0
Will inlcude ineq 9 with slack=-2.7755575615628914E-17 L=0.0
Initial solution: { 0.0175, -0.0175, 1.46389524463679, 5.0, 4.87681260745493, 4.45803387299108, -6.77235264210831, 0.22574508859158 }
E-slack: { 5.4569682106375694E-12, -4.04121180963557E-14, 7.367045341821754E-15 }
I-slack: { -2.7755575615628914E-17, 0.35, 3.53610475536321, 0.0, 0.12318739254506994, 999.9554196612701, 1000.0677235264211, 999.997742549114, 0.35, -2.7755575615628914E-17, 6.46389524463679, 10.0, 9.87681260745493, 1000.0445803387299, 999.9322764735789, 1000.002257450886 }

PerformIteration 1
Last Incl/Excl: 9/-1 => [0, 3, 9] / [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -0.175, -5.1, -0.175]
Relative error 8.432996120308136E-10 in solution for L=[-44.55587800332592, 67686.36728964919, -225621.22481913338, 43627.312246051435, 17569.310317579428, 833993.5732884669]
Current: 6.77235264210831 - { 0.0175, -0.0175, 1.46389524463679, 5.0, 4.87681260745493, 4.45803387299108, -6.77235264210831, 0.22574508859158 }
Step: 0.0037159131433908144 - { -8.597895503045794E-6, -1.0199666023254228E-4, -0.002988714278892912, 5.3062103155809837E-8, -0.0018676524666165761, -0.002446072658487175, 0.0037159131433908144, -1.238637724466085E-4 }
Included-change: { -8.597895503045794E-5, 5.3062103155809837E-8, 0.0010199666023254228 }
Nonzero Included-change! -8.597895503045794E-5
Step too small (or freaky large)!
Post iteration
    Solution: { 0.0175, -0.0175, 1.46389524463679, 5.0, 4.87681260745493, 4.45803387299108, -6.77235264210831, 0.22574508859158 }
    L: { -44.55587800332592, 67686.36728964919, -225621.22481913338, 43627.312246051435, 0.0, 0.0, 17569.310317579428, 0.0, 0.0, 0.0, 0.0, 0.0, 833993.5732884669, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { 5.4569682106375694E-12, -4.04121180963557E-14, 7.367045341821754E-15 }
I-slack: { -2.7755575615628914E-17, 0.35, 3.53610475536321, 0.0, 0.12318739254506994, 999.9554196612701, 1000.0677235264211, 999.997742549114, 0.35, -2.7755575615628914E-17, 6.46389524463679, 10.0, 9.87681260745493, 1000.0445803387299, 999.9322764735789, 1000.002257450886 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 43627.312246051435, 17569.310317579428, 833993.5732884669 }.
Nothing to exclude
Stop!
14.33578520763448807182799173529990 ! 14.272908 <= E0 <= 14.272908
-3.8697942242767642665000000000 ! -3.888271 <= E1 <= -3.888271
0.905091748614716500000000000 ! -0.069929 <= E2 <= -0.069929
Will inlcude ineq 6 with slack=0.0 L=-1.0E-5
Will inlcude ineq 8 with slack=0.0 L=-1.0000000000000003E-5
Will inlcude ineq 9 with slack=0.0 L=-1.0E-5
Initial solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

PerformIteration 1
Last Incl/Excl: 9/-1 => [6, 8, 9] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -4.9, -4.9, -4.9]
Relative error NaN in solution for L=[-5.174614687402384E-10, -1.3936788788113143E-6, -4.0569269473814645E-7, -4.549162989072992E-4, -7.510756963025753E-4, -4.4897465055916566E-4]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.10820588674864 - { -0.5500625719872888, -6.224863606574486, -0.39430095431760087, 0.0, 0.0, 8.881784197001252E-16, -14.334862214861477, -0.12965105716492342, -90.10820588674864 }
Included-change: { 0.0, 0.0, 8.881784197001252E-16 }
Numer/slack: [0.0, -1.6298143390436337E-11, 7.27612414763712E-14, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711, 0.0]
Denom/chang: [-0.5500625719872888, -6.224863606574486, 0.39430095431760087, -0.39430095431760087, 6.224863606574486, 0.0, 0.0, 14.334862214861477, -14.334862214861477, -8.881784197001252E-16, -0.12965105716492342, 90.10820588674864, -90.10820588674864, 0.12965105716492342, 0.5500625719872888]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 2.618233012081229E-12, 1.845322479685494E-13, -0.08876468498662446, 0.005622613157231647, Infinity, Infinity, 6977.000082953457, -6975.000082953451, -1.125899906842624E16, -771300.076803257, 1110.7768401435508, -1108.776840143542, 771302.0768034719, 0.0]).
Best so far: 0.0 @ 2 (2).
Do nothing because step length 0.0 and size 90.10820588674864 but add constraint 2
Post iteration
    Solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
    L: { -5.174614687402384E-10, -1.3936788788113143E-6, -4.0569269473814645E-7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.549162989072992E-4, 0.0, -7.510756963025753E-4, -4.4897465055916566E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Suggested to include: 2

PerformIteration 2
Last Incl/Excl: 2/-1 => [2, 6, 8, 9] / [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.00080029601087 - { -1.334435019754276, 0.9531587678790492, -7.293818327092083E-14, 0.0, 0.0, 0.0, -14.33486221478771, 3.0449640888817946, -90.00080029601087 }
Included-change: { 7.293818327092083E-14, 0.0, 0.0, 0.0 }
Numer/slack: [0.0, -1.6298143390436337E-11, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711, 0.0]
Denom/chang: [-1.334435019754276, 0.9531587678790492, -7.293818327092083E-14, -0.9531587678790492, 0.0, 0.0, 14.33486221478771, -14.33486221478771, 0.0, 3.0449640888817946, 90.00080029601087, -90.00080029601087, -3.0449640888817946, 1.334435019754276]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, -1.709908562946198E-11, -4.798584010507035E11, -0.036720010554148794, Infinity, Infinity, 6977.000082989361, -6975.000082989344, Infinity, 32841.067227709726, 1112.102424386147, -1110.1000376164563, -32841.15238541097, 0.0]).
Best so far: 1.709908562946198E-11 @ 1 (1).
Best so far: 0.0 @ 13 (17).
Do nothing because step length 0.0 and size 90.00080029601087 but add constraint 17
Post iteration
    Solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
    L: { -1.255119181632516E-9, -317.46151599835065, -107.40559114346405, 0.0, 0.0, 255888.73747931494, 0.0, 0.0, 0.0, 9678.191948678206, 0.0, -63967.82943287429, 8512.042151540049, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Suggested to include: 17

PerformIteration 3
Last Incl/Excl: 17/-1 => [2, 6, 8, 9, 17] / [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.0243819309955 - { 0.0, 0.9534085105710902, -7.159897674746674E-14, 0.0, 0.0, 0.0, -0.14983062231488553, 3.0457619176950925, -90.0243819309955 }
Included-change: { 7.159897674746674E-14, 0.0, 0.0, 0.0, 0.0 }
Numer/slack: [0.0, -1.6298143390436337E-11, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711]
Denom/chang: [0.0, 0.9534085105710902, -7.159897674746674E-14, -0.9534085105710902, 0.0, 0.0, 0.14983062231488553, -0.14983062231488553, 0.0, 3.0457619176950925, 90.0243819309955, -90.0243819309955, -3.0457619176950925]
Looking for the largest possible step length (smallest positive scalar) among these: [NaN, -1.7094606571818596E-11, -4.8883380168091003E11, -0.03671039185011386, Infinity, Infinity, 667515.9811592038, -667324.63359629, Infinity, 32832.464602027954, 1111.8111122674202, -1109.8092500173416, -32832.54973742238]).
Best so far: 1.7094606571818596E-11 @ 1 (1).
Performing update with step length 1.7094606571818596E-11 adding constraint 1
Post iteration
    Solution: { 0.0, 0.01750000003259629, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214910661, 0.1296510711537783, 90.10820588561539 }
    L: { -141.85031592598335, -317.5412988796804, -83.82395615882501, 0.0, 0.0, 3255457.9512055824, 0.0, 0.0, 0.0, -134468.57033372874, 0.0, -56901.31722561506, 137582.84114814477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1507871.6837656419 }
E-slack: { -1.0937583283521235E-8, 1.853135245255544E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Suggested to include: 1

PerformIteration 4
Last Incl/Excl: 1/-1 => [1, 2, 6, 8, 9, 17] / [0, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
Current: 90.10820588561539 - { 0.0, 0.01750000003259629, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214910661, 0.1296510711537783, 90.10820588561539 }
Step: 3.4418690120219253E-9 - { 1.346699885362997E-13, -3.2601206456650544E-11, -6.60964338816683E-14, -6.217248937900877E-15, 0.0, 0.0, -5.972111694063642E-12, 8.448419741569069E-11, -3.4418690120219253E-9 }
Included-change: { -3.2601206456650544E-11, 6.60964338816683E-14, 0.0, 6.217248937900877E-15, 0.0, -1.346699885362997E-13 }
Step too small (or freaky large)!
Post iteration
    Solution: { 0.0, 0.01750000003259629, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214910661, 0.1296510711537783, 90.10820588561539 }
    L: { -143.3486221490469, -12.965107123826249, -90108.20588217353, 0.0, 8.51019092648544E7, 1.5525185141080792E9, 0.0, 0.0, 0.0, 9284910.273790985, 0.0, -2.703375827585444E7, -4237221.446915866, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1523798.7087620285 }
E-slack: { -1.0937583283521235E-8, 1.853135245255544E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 8.51019092648544E7, 1.5525185141080792E9, 9284910.273790985, -2.703375827585444E7, -4237221.446915866, 1523798.7087620285 }.
Best so far: -2.703375827585444E7 @ 3 (8).
Suggest to exclude: -2.703375827585444E7 @ 3 (8).
Suggested to exclude: 8

PerformIteration 5
Last Incl/Excl: 1/8 => [1, 2, 6, 9, 17] / [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 90.10820588561539 - { 0.0, 0.01750000003259629, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214910661, 0.1296510711537783, 90.10820588561539 }
Step: 90.01251368453312 - { -5.133544671015236E-16, -3.259651229492455E-11, -7.258429968182156E-14, 3.0004171227026486, 0.0, 0.0, -7.553069281129865E-12, -3.000417122617831, -90.01251368453312 }
Included-change: { -3.259651229492455E-11, 7.258429968182156E-14, 0.0, 0.0, 5.133544671015236E-16 }
Numer/slack: [0.0, 0.03499999999992724, 0.03500000003259629, 10.0, 10.0, 0.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892885, 100090.10820588561, 99909.89179411439, 100000.12965107115]
Denom/chang: [-5.133544671015236E-16, -7.258429968182156E-14, 3.259651229492455E-11, 3.0004171227026486, 0.0, -3.0004171227026486, 7.553069281129865E-12, -7.553069281129865E-12, 0.0, -3.000417122617831, 90.01251368453312, -90.01251368453312, 3.000417122617831]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, -4.821979429897682E11, 1.0737345061927369E9, 3.3328699280960055, Infinity, -0.0, 1.3241548718755264E16, -1.323775294734596E16, Infinity, -33328.65607088659, 1111.957705754907, -1109.9555795571782, 33328.74249291783]).
Performing update with step length 1.0 adding constraint -1
Post iteration
    Solution: { -5.133544671015236E-16, 0.017499999999999776, -0.017499999999999825, -1.9995828772973514, -5.0, 5.0, 14.334862214903108, -2.8707660514640527, 0.09569220108227228 }
    L: { -143.3486221490311, 287.07660514640526, -95.69220108227587, 0.0, 204593.3330888477, 6524884.665908045, 0.0, 0.0, 0.0, -131752.56203333504, 0.0, 0.0, 112233.51835900174, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1523798.7087609342 }
E-slack: { 1.8189894035458565E-12, 5.6843418860808015E-14, 0.0 }
I-slack: { 5.133544671015236E-16, 2.255140518769849E-16, 1.7694179454963432E-16, 0.03499999999999982, 0.03499999999999978, 6.999582877297351, 0.0, 10.0, 3.0004171227026486, 0.0, 100014.3348622149, 99985.6651377851, 10.0, 100002.87076605146, 100000.09569220108, 99999.90430779892, 99997.12923394854, -5.133544671015236E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 204593.3330888477, 6524884.665908045, -131752.56203333504, 112233.51835900174, 1523798.7087609342 }.
Best so far: -131752.56203333504 @ 2 (6).
Suggest to exclude: -131752.56203333504 @ 2 (6).
Suggested to exclude: 6

PerformIteration 6
Last Incl/Excl: 1/6 => [1, 2, 9, 17] / [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 14.334862214903108 - { -5.133544671015236E-16, 0.017499999999999776, -0.017499999999999825, -1.9995828772973514, -5.0, 5.0, 14.334862214903108, -2.8707660514640527, 0.09569220108227228 }
Step: 11.399857686558155 - { -1.7111815570050794E-16, 8.153200337090993E-16, -6.938893903907228E-17, 3.9709098200592456, 11.399857686558155, 0.0, -11.386089037334154, -4.531027403855537, 0.15103424811882332 }
Included-change: { 8.153200337090993E-16, 6.938893903907228E-17, 0.0, 1.7111815570050794E-16 }
Numer/slack: [5.133544671015236E-16, 0.03499999999999982, 0.03499999999999978, 6.999582877297351, 0.0, 10.0, 3.0004171227026486, 100014.3348622149, 99985.6651377851, 10.0, 100002.87076605146, 100000.09569220108, 99999.90430779892, 99997.12923394854]
Denom/chang: [-1.7111815570050794E-16, -6.938893903907228E-17, -8.153200337090993E-16, 3.9709098200592456, -11.399857686558155, 11.399857686558155, -3.9709098200592456, 11.386089037334154, -11.386089037334154, 0.0, -4.531027403855537, -0.15103424811882332, 0.15103424811882332, 4.531027403855537]
Looking for the largest possible step length (smallest positive scalar) among these: [-2.9999999999999987, -5.04403158265493E14, -4.292792836302063E13, 1.7627151445088516, -0.0, 0.8772039331500813, -0.755599411385747, 8783.90591662117, -8781.387955946893, Infinity, -22070.683280563942, -662102.1188090261, 662100.8516500569, 22069.416121575225]).
Best so far: 0.8772039331500813 @ 5 (7).
Performing update with step length 0.8772039331500813 adding constraint 7
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -29.48773177568954, 740.179345531959, -246.72644920109562, 0.0, 474060.3082548439, 8658278.930782055, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -17347.57062723088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 313455.17613256106 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Suggested to include: 7

PerformIteration 7
Last Incl/Excl: 7/6 => [1, 2, 7, 9, 17] / [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16]
Current: 6.8454011113369315 - { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
Step: 1.7763568394002505E-15 - { 3.2122367491438143E-16, -1.5334955527634975E-15, -7.979727989493313E-17, -2.220446049250313E-16, 0.0, 0.0, 1.7763568394002505E-15, 0.0, 6.661338147750939E-16 }
Included-change: { -1.5334955527634975E-15, 7.979727989493313E-17, 0.0, 0.0, -3.2122367491438143E-16 }
Step too small (or freaky large)!
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -43.46940128156568, 684.5401111336931, -228.18003757247, 0.0, 440970.82355851494, 8396306.506015357, 0.0, 0.0, 0.0, 0.0, 16178.696415093505, 0.0, -1435.5225615921809, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 462080.601476562 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 440970.82355851494, 8396306.506015357, 16178.696415093505, -1435.5225615921809, 462080.601476562 }.
Best so far: -1435.5225615921809 @ 3 (9).
Suggest to exclude: -1435.5225615921809 @ 3 (9).
Suggested to exclude: 9

PerformIteration 8
Last Incl/Excl: 7/9 => [1, 2, 7, 17] / [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16]
Current: 6.8454011113369315 - { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
Step: 0.12318739254511968 - { 1.501055192138736E-16, -1.3079815008865125E-15, -7.979727989493313E-17, -0.019819590406089382, 0.0, -0.12318739254511968, 0.1110937448345588, 0.07304846922857688, -0.002434948980891888 }
Included-change: { -1.3079815008865125E-15, 7.979727989493313E-17, 0.0, -1.501055192138736E-16 }
Step too small (or freaky large)!
Post iteration
    Solution: { -6.634599863153972E-16, 0.01750000000000049, -0.017499999999999887, 1.4837148350429006, 5.0, 5.0, 4.346940128156566, -6.8454011113369315, 0.22818003757246935 }
    L: { -44.580338729911254, 677.2352642108355, -225.74508859157746, 0.0, 436512.63199534215, 8344514.273308908, 0.0, 0.0, 0.0, 0.0, 17578.955691504685, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 473889.88868089346 }
E-slack: { -1.8189894035458565E-12, 5.6843418860808015E-14, -1.7852386235972517E-13 }
I-slack: { 6.634599863153972E-16, -4.891920202254596E-16, 1.1449174941446927E-16, 0.03499999999999989, 0.03500000000000049, 3.5162851649570994, 10.0, 0.0, 6.483714835042901, 0.0, 100004.34694012816, 99995.65305987184, 10.0, 100006.84540111134, 100000.22818003758, 99999.77181996242, 99993.15459888866, -6.634599863153972E-16 }

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 436512.63199534215, 8344514.273308908, 17578.955691504685, 473889.88868089346 }.
Nothing to exclude
Stop!
Will inlcude ineq 6 with slack=0.0 L=-1.0E-5
Will inlcude ineq 8 with slack=0.0 L=-1.0000000000000003E-5
Will inlcude ineq 9 with slack=0.0 L=-1.0E-5
Initial solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

PerformIteration 1
Last Incl/Excl: 9/-1 => [6, 8, 9] / [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -4.9, -4.9, -4.9]
Relative error 9.758396882456873E-11 in solution for L=[-5.174614687481708E-10, -1.3936788788075228E-6, -4.0569269473705573E-7, -4.5491629890739556E-4, -7.510756963018699E-4, -4.4897465055927457E-4]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.10820588674864 - { -0.5500625719957211, -6.224863606556222, -0.3943009543612292, -8.881784197001252E-15, 7.016609515630989E-14, 5.240252676230739E-14, -14.334862214861477, -0.12965105716492342, -90.10820588674864 }
Included-change: { -7.016609515630989E-14, 8.881784197001252E-15, 5.240252676230739E-14 }
Numer/slack: [0.0, -1.6298143390436337E-11, 7.27612414763712E-14, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711, 0.0]
Denom/chang: [-0.5500625719957211, -6.224863606556222, 0.3943009543612292, -0.3943009543612292, 6.224863606556222, -8.881784197001252E-15, 7.016609515630989E-14, 14.334862214861477, -14.334862214861477, -5.240252676230739E-14, -0.12965105716492342, 90.10820588674864, -90.10820588674864, 0.12965105716492342, 0.5500625719957211]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, 2.6182330120889106E-12, 1.8453224794813142E-13, -0.08876468497680289, 0.005622613157248144, -1.125899906842624E15, 1.4251897554969925E14, 6977.000082953457, -6975.000082953451, -1.908304926851905E14, -771300.076803257, 1110.7768401435508, -1108.776840143542, 771302.0768034719, 0.0]).
Best so far: 0.0 @ 2 (2).
Do nothing because step length 0.0 and size 90.10820588674864 but add constraint 2
Post iteration
    Solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
    L: { -5.174614687481708E-10, -1.3936788788075228E-6, -4.0569269473705573E-7, -3.1437218023860523E-35, -2.705934198211479E-21, -4.244030457389227E-20, 0.0, 0.0, 0.0, -4.5491629890739556E-4, 0.0, -7.510756963018699E-4, -4.4897465055927457E-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Suggested to include: 2

PerformIteration 2
Last Incl/Excl: 2/-1 => [2, 6, 8, 9] / [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -4.9, -4.9, -4.9]
Relative error 5.419156625106641E-10 in solution for L=[-1.2551153889622922E-9, -317.3155634797687, -107.3562115628072, 255771.09296562575, 9673.74241230771, -63938.42030681904, 8508.128751020125]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.00084967559152 - { -1.334427462843989, 0.9534605364897288, 6.680555634375196E-5, -5.811452830073449E-8, -3.5448461943587972E-9, 2.1734740229817362E-8, -14.33486221478771, 3.0435045636959748, -90.00084967559152 }
Included-change: { -6.680555634375196E-5, 3.5448461943587972E-9, 5.811452830073449E-8, 2.1734740229817362E-8 }
Nonzero Included-change! -6.680555634375196E-5
Numer/slack: [0.0, -1.6298143390436337E-11, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711, 0.0]
Denom/chang: [-1.334427462843989, 0.9534605364897288, 6.680555634375196E-5, -0.9534605364897288, -5.811452830073449E-8, -3.5448461943587972E-9, 14.33486221478771, -14.33486221478771, -2.1734740229817362E-8, 3.0435045636959748, 90.00084967559152, -90.00084967559152, -3.0435045636959748, 1.334427462843989]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, -1.7093673798435085E-11, 523.9085177261703, -0.03670838873431988, -1.720740113083498E8, -2.820996864663357E9, 6977.000082989361, -6975.000082989344, -4.60092915501297E8, 32856.81629716071, 1112.1018142235591, -1110.0994285524916, -32856.90149569968, 0.0]).
Best so far: 1.7093673798435085E-11 @ 1 (1).
Best so far: 0.0 @ 13 (17).
Do nothing because step length 0.0 and size 90.00084967559152 but add constraint 17
Post iteration
    Solution: { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
    L: { -1.2551153889622922E-9, -317.3155634797687, -107.3562115628072, -3.1437218023860523E-35, -2.705934198211479E-21, 255771.09296562575, 0.0, 0.0, 0.0, 9673.74241230771, 0.0, -63938.42030681904, 8508.128751020125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -1.0937583283521235E-8, 1.85314092959743E-8, -6.406756369869981E-8 }
Nonzero E-slack! 6.406756369869981E-8

NeedsAnotherIteration?
Suggested to include: 17

PerformIteration 3
Last Incl/Excl: 17/-1 => [2, 6, 8, 9, 17] / [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -4.9, -4.9, -4.9, 0.0]
Relative error 4.689753425124603E-10 in solution for L=[-141.8258398207277, -317.10499937714, -83.68041818821357, 3254588.71248236, -134456.99866967282, -56814.62588417755, 137548.87207689058, 1507611.5022792425]
Current: 90.10820588715433 - { -0.0, 0.017500000016298145, -0.01749999999992724, -5.0, -5.0, 5.0, 14.334862214913223, 0.1296510711017122, 90.10820588715433 }
Step: 90.02452546896612 - { -2.328306436538696E-5, 0.9528362593264318, -8.86440284375567E-6, 3.056833524084368E-7, -9.312294420027456E-7, -8.150003854012766E-7, -0.1522782328404535, 3.0413989226696883, -90.02452546896612 }
Included-change: { 8.86440284375567E-6, 9.312294420027456E-7, -3.056833524084368E-7, -8.150003854012766E-7, 2.328306436538696E-5 }
Nonzero Included-change! -8.150003854012766E-7
Numer/slack: [0.0, -1.6298143390436337E-11, 0.03499999999992724, 0.03500000001629815, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.8703489289, 100090.10820588715, 99909.89179411285, 100000.1296510711]
Denom/chang: [-2.328306436538696E-5, 0.9528362593264318, -8.86440284375567E-6, -0.9528362593264318, 3.056833524084368E-7, -9.312294420027456E-7, 0.1522782328404535, -0.1522782328404535, 8.150003854012766E-7, 3.0413989226696883, 90.02452546896612, -90.02452546896612, -3.0413989226696883]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.0, -1.7104873194013038E-11, -3948.376514113662, -0.03673243925565968, 3.2713590456305142E7, -1.073849209330574E7, 656786.8105417466, -656598.5385616019, 1.2269932848039528E7, 32879.56394130327, 1111.8093395603726, -1109.807480502127, -32879.64919882745]).
Best so far: 1.7104873194013038E-11 @ 1 (1).
Performing update with step length 1.7104873194013038E-11 adding constraint 1
Post iteration
    Solution: { -3.9825386353798757E-16, 0.01750000003259629, -0.017499999999927393, -5.0, -5.0, 5.0, 14.334862214910618, 0.12965107115373495, 90.10820588561447 }
    L: { -141.8258398207277, -317.10499937714, -83.68041818821357, -3.1437218023860523E-35, -2.705934198211479E-21, 3254588.71248236, 0.0, 0.0, 0.0, -134456.99866967282, 0.0, -56814.62588417755, 137548.87207689058, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1507611.5022792425 }
E-slack: { -1.0903022484853864E-8, 1.853646836025291E-8, -6.406096986211196E-8 }
Nonzero E-slack! 6.406096986211196E-8

NeedsAnotherIteration?
Suggested to include: 1

PerformIteration 4
Last Incl/Excl: 1/-1 => [1, 2, 6, 8, 9, 17] / [0, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, -0.0175, -0.0175, -4.9, -4.9, -4.9, 0.0]
Relative error 3.190555193785364E-10 in solution for L=[-138.68769170600885, -122.53192537054481, -38632.09521572062, 3.646051394858848E7, 6.668792900554473E8, 3903008.717832107, -1.1601881757743262E7, -1741921.79745237, 1474252.9253124122]
Current: 90.10820588561447 - { -3.9825386353798757E-16, 0.01750000003259629, -0.017499999999927393, -5.0, -5.0, 5.0, 14.334862214910618, 0.12965107115373495, 90.10820588561447 }
Step: 51.47611066989385 - { 1.3969838619272003E-4, -0.007814245256595312, 0.017499999999927393, -2.096056938167834E-4, 4.650801420247319E-5, 1.635625958407161E-5, -0.46609304430973353, 1.0956681825517132, -51.47611066989385 }
Included-change: { -0.007814245256595312, -0.017499999999927393, -4.650801420247319E-5, 2.096056938167834E-4, 1.635625958407161E-5, -1.3969838619272003E-4 }
Nonzero Included-change! -0.017499999999927393
Numer/slack: [3.9825386353798757E-16, 0.034999999999927395, 0.03500000003259629, 10.0, 10.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892885, 100090.10820588561, 99909.89179411439, 100000.12965107115]
Denom/chang: [1.3969838619272003E-4, 0.017499999999927393, 0.007814245256595312, -2.096056938167834E-4, 4.650801420247319E-5, 0.46609304430973353, -0.46609304430973353, -1.635625958407161E-5, 1.0956681825517132, 51.47611066989385, -51.47611066989385, -1.0956681825517132]
Looking for the largest possible step length (smallest positive scalar) among these: [2.8508121989940455E-12, 2.000000000004149, 4.47899942775099, -47708.6276517899, 215016.705647007, 214580.1918377315, -214518.68110552937, -611386.7262010446, 91268.3894096825, 1944.39919611922, -1940.898224320342, -91268.62607087832]).
Best so far: 0.0 @ 0 (0).
Do nothing because step length 0.0 and size 51.47611066989385 but add constraint 0
Post iteration
    Solution: { -3.9825386353798757E-16, 0.01750000003259629, -0.017499999999927393, -5.0, -5.0, 5.0, 14.334862214910618, 0.12965107115373495, 90.10820588561447 }
    L: { -138.68769170600885, -122.53192537054481, -38632.09521572062, -3.1437218023860523E-35, 3.646051394858848E7, 6.668792900554473E8, 0.0, 0.0, 0.0, 3903008.717832107, 0.0, -1.1601881757743262E7, -1741921.79745237, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1474252.9253124122 }
E-slack: { -1.0903022484853864E-8, 1.853646836025291E-8, -6.406096986211196E-8 }
Nonzero E-slack! 6.406096986211196E-8

NeedsAnotherIteration?
Suggested to include: 0

PerformIteration 5
Last Incl/Excl: 0/-1 => [0, 1, 2, 6, 8, 9, 17] / [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16]
KKT system unsolvable!
Constraints problem!
Looking for the largest negative lagrange multiplier among these: { 1.5258789062500003E-9, 3.646051394858848E7, 6.668792900554473E8, 3903008.717832107, -1.1601881757743262E7, -1741921.79745237, 1474252.9253124122 }.
Best so far: -1.1601881757743262E7 @ 4 (8).
Suggest to exclude: -1.1601881757743262E7 @ 4 (8).
Will remove 8

PerformIteration 6
Last Incl/Excl: 0/8 => [0, 1, 2, 6, 9, 17] / [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -4.9, -4.9, 0.0]
Relative error 4.6492878368131665E-11 in solution for L=[-137.28968159908368, 151.1160212445743, -50.372006276629726, 7430.437641791294, 117414.12706618125, 4919056.638919102, -131110.88084709397, 114840.638905419, 1466822.4876706214]
Current: 90.10820588561447 - { -3.9825386353798757E-16, 0.01750000003259629, -0.017499999999927393, -5.0, -5.0, 5.0, 14.334862214910618, 0.12965107115373495, 90.10820588561447 }
Step: 90.05783387933784 - { -6.053596734996628E-4, -7.420144556090219E-4, 6.43061399387232E-4, 2.4853100659151095, 2.5844294578192262E-5, 7.770629599335166E-6, -0.6058940550022509, -1.640811283599478, -90.05783387933784 }
Included-change: { -6.053596734996628E-4, -7.420144556090219E-4, -6.43061399387232E-4, -2.5844294578192262E-5, 7.770629599335166E-6, 6.053596734996628E-4 }
Nonzero Included-change! -7.420144556090219E-4
Numer/slack: [0.034999999999927395, 0.03500000003259629, 10.0, 10.0, 0.0, 100014.3348622149, 99985.6651377851, 10.0, 99999.87034892885, 100090.10820588561, 99909.89179411439, 100000.12965107115]
Denom/chang: [6.43061399387232E-4, 7.420144556090219E-4, 2.4853100659151095, 2.5844294578192262E-5, -2.4853100659151095, 0.6058940550022509, -0.6058940550022509, -7.770629599335166E-6, -1.640811283599478, 90.05783387933784, -90.05783387933784, 1.640811283599478]
Looking for the largest possible step length (smallest positive scalar) among these: [54.42715117604418, 47.168892422546406, 4.023642819117592, 386932.59627361334, -0.0, 165069.01501425583, -165021.69696550933, -1286897.0103600838, -60945.3819268949, 1111.3981304501428, -1109.3970117910746, 60945.53995978077]).
Performing update with step length 1.0 adding constraint -1
Post iteration
    Solution: { -6.05359673500061E-4, 0.016757985576987267, -0.01685693860054016, -2.5146899340848905, -4.999974155705422, 5.000007770629599, 13.728968159908367, -1.511160212445743, 0.050372006276631964 }
    L: { -137.28968159908368, 151.1160212445743, -50.372006276629726, 7430.437641791294, 117414.12706618125, 4919056.638919102, 0.0, 0.0, 0.0, -131110.88084709397, 0.0, 0.0, 114840.638905419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1466822.4876706214 }
E-slack: { 614.9807624618097, -87.90942293002826, 166.7445621077873 }
Nonzero E-slack! 614.9807624618097

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 7430.437641791294, 117414.12706618125, 4919056.638919102, -131110.88084709397, 114840.638905419, 1466822.4876706214 }.
Best so far: -131110.88084709397 @ 3 (6).
Suggest to exclude: -131110.88084709397 @ 3 (6).
Suggested to exclude: 6

PerformIteration 7
Last Incl/Excl: 0/6 => [0, 1, 2, 9, 17] / [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -4.9, 0.0]
Relative error 4.999728739935113E-10 in solution for L=[-29.441511929406143, 739.0191689355198, -246.33972366625423, 580644.5335332413, 473317.253643454, 8644707.716393385, -17320.379588055053, 893608.3917791714]
Current: 13.728968159908367 - { -6.05359673500061E-4, 0.016757985576987267, -0.01685693860054016, -2.5146899340848905, -4.999974155705422, 5.000007770629599, 13.728968159908367, -1.511160212445743, 0.050372006276631964 }
Step: 11.400987314118538 - { 6.402842700481415E-4, 7.566995918750763E-4, -6.51925802230835E-4, 4.477931779547362, 11.400987314118538, -7.894414011389017E-6, -10.784816966967753, -5.879031476909455, 0.19596771738962226 }
Included-change: { 6.402842700481415E-4, 7.566995918750763E-4, 6.51925802230835E-4, -7.894414011389017E-6, -6.402842700481415E-4 }
Nonzero Included-change! -6.402842700481415E-4
Numer/slack: [0.03435693860054016, 0.03425798557698727, 7.51468993408489, 2.5844294578192262E-5, 9.999974155705422, 2.4853100659151095, 100013.7289681599, 99986.2710318401, 10.0000077706296, 100001.51116021245, 100000.05037200627, 99999.94962799373, 99998.48883978755]
Denom/chang: [-6.51925802230835E-4, -7.566995918750763E-4, 4.477931779547362, -11.400987314118538, 11.400987314118538, -4.477931779547362, 10.784816966967753, -10.784816966967753, 7.894414011389017E-6, -5.879031476909455, -0.19596771738962226, 0.19596771738962226, 5.879031476909455]
Looking for the largest possible step length (smallest positive scalar) among these: [-52.70068845714286, -45.272900824615384, 1.6781608796292313, -2.2668470603583336E-6, 0.8771147515725979, -0.5550129363887562, 9273.567578799592, -9271.021598056115, 1266719.4494997235, -17009.861497251615, -510288.38680192694, 510287.8727171895, 17009.347412501982]).
Best so far: 0.8771147515725979 @ 4 (7).
Performing update with step length 0.8771147515725979 adding constraint 7
Post iteration
    Solution: { -4.375689504094321E-5, 0.01742169795152986, -0.017428752338607627, 1.4129700862918346, 5.0, 5.000000846322615, 4.269446105170507, -6.667745445802663, 0.22225818203107955 }
    L: { -29.441511929406143, 739.0191689355198, -246.33972366625423, 580644.5335332413, 473317.253643454, 8644707.716393385, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -17320.379588055053, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 893608.3917791714 }
E-slack: { 78.7508632153058, -11.073126687132174, 22.581511161098103 }
Nonzero E-slack! 78.7508632153058

NeedsAnotherIteration?
Suggested to include: 7

PerformIteration 8
Last Incl/Excl: 7/6 => [0, 1, 2, 7, 9, 17] / [3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -5.1, -4.9, 0.0]
Relative error 5.513451297578004E-10 in solution for L=[-43.43825702634227, 682.1840907667872, -227.39469744598495, 506251.6939446139, 439471.7267356879, 8370252.483953675, 16241.337035603523, -1323.7452233733632, 968001.2313677985]
Current: 6.667745445802663 - { -4.375689504094321E-5, 0.01742169795152986, -0.017428752338607627, 1.4129700862918346, 5.0, 5.000000846322615, 4.269446105170507, -6.667745445802663, 0.22225818203107955 }
Step: 0.15409546186520906 - { 7.868149158902365E-5, 9.298721733248111E-5, -3.5950883654801286E-4, 0.05819598085951805, 8.944189122672697E-8, -1.0496878131149856E-6, 0.0743795974637198, -0.15409546186520906, 0.005136515414905396 }
Included-change: { 7.868149158902365E-5, 9.298721733248111E-5, 3.5950883654801286E-4, 8.944189122672697E-8, -1.0496878131149856E-6, -7.868149158902365E-5 }
Nonzero Included-change! -7.868149158902365E-5
Step too small (or freaky large)!
Post iteration
    Solution: { -4.375689504094321E-5, 0.01742169795152986, -0.017428752338607627, 1.4129700862918346, 5.0, 5.000000846322615, 4.269446105170507, -6.667745445802663, 0.22225818203107955 }
    L: { -43.43825702634227, 682.1840907667872, -227.39469744598495, 506251.6939446139, 439471.7267356879, 8370252.483953675, 0.0, 0.0, 0.0, 0.0, 16241.337035603523, 0.0, -1323.7452233733632, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 968001.2313677985 }
E-slack: { 78.7508632153058, -11.073126687132174, 22.581511161098103 }
Nonzero E-slack! 78.7508632153058

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 506251.6939446139, 439471.7267356879, 8370252.483953675, 16241.337035603523, -1323.7452233733632, 968001.2313677985 }.
Best so far: -1323.7452233733632 @ 4 (9).
Suggest to exclude: -1323.7452233733632 @ 4 (9).
Suggested to exclude: 9

PerformIteration 9
Last Incl/Excl: 7/9 => [0, 1, 2, 7, 17] / [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16]
RHS=[-14282.604556658522, 382.6567127095464, -23.684026454070647, 0.0, -0.0175, -0.0175, -5.1, 0.0]
Relative error 6.963766185765265E-10 in solution for L=[-44.600924833256656, 677.547994787683, -225.84933211967294, 500072.1029714543, 436714.2027874514, 8348367.564666236, 17587.073220724124, 974180.8223409578]
Current: 6.667745445802663 - { -4.375689504094321E-5, 0.01742169795152986, -0.017428752338607627, 1.4129700862918346, 5.0, 5.000000846322615, 4.269446105170507, -6.667745445802663, 0.22225818203107955 }
Step: 0.19064637815515884 - { 4.375689504094321E-5, 5.8062620784400665E-5, 1.061524507597264E-4, 0.05836420099955797, -9.245704912785868E-8, -0.12085391667274603, 0.19064637815515884, -0.1077345020741669, 0.003591150088593398 }
Included-change: { 4.375689504094321E-5, 5.8062620784400665E-5, -1.061524507597264E-4, -9.245704912785868E-8, -4.375689504094321E-5 }
Nonzero Included-change! -1.061524507597264E-4
Step too small (or freaky large)!
Post iteration
    Solution: { -4.375689504094321E-5, 0.01742169795152986, -0.017428752338607627, 1.4129700862918346, 5.0, 5.000000846322615, 4.269446105170507, -6.667745445802663, 0.22225818203107955 }
    L: { -44.600924833256656, 677.547994787683, -225.84933211967294, 500072.1029714543, 436714.2027874514, 8348367.564666236, 0.0, 0.0, 0.0, 0.0, 17587.073220724124, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 974180.8223409578 }
E-slack: { 78.7508632153058, -11.073126687132174, 22.581511161098103 }
Nonzero E-slack! 78.7508632153058

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 500072.1029714543, 436714.2027874514, 8348367.564666236, 17587.073220724124, 974180.8223409578 }.
Nothing to exclude
Stop!
99999.0978046977358932264566942156670 ! 14.272908 <= E0 <= 14.272908
99997.7357414873837180435000000000 ! -3.888271 <= E1 <= -3.888271
99849.649793371150607950000000000 ! -0.069929 <= E2 <= -0.069929
E-slack: { -9.998482489663908E7, -100001.62401230738, -998.4971972244493 }
Nonzero E-slack! 9.998482489663908E7
Will inlcude ineq 4 with slack=0.0 L=-1.0E-5
Will inlcude ineq 10 with slack=0.0 L=-1.0E-5
Will inlcude ineq 11 with slack=0.0 L=-1.0E-5
Initial solution: { 0.017499999999999627, -0.017499999999999925, -5.0, -5.0, 5.0, 14.3348622149031, 0.12965107123860298, 90.10820588216167 }
E-slack: { -1.8189894035458565E-12, -1.3322676295501878E-15, -8.837331907929347E-16 }
I-slack: { 3.7192471324942744E-15, 0.34999999999999926, 10.0, 10.0, 0.0, 999.856651377851, 999.9987034892877, 999.0989179411783, 0.34999999999999626, 7.216449660063518E-16, 0.0, 0.0, 10.0, 1000.143348622149, 1000.0012965107123, 1000.9010820588217 }

PerformIteration 1
Last Incl/Excl: 11/-1 => [4, 10, 11] / [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -4.9, -4.9, -4.9]
Relative error 5.687308870509439E-11 in solution for L=[-7.405560205833242, 19427.507950747615, 66960.90811736064, 1529.2042526292025, 39515.77989595583, -13448.285149577112]
Current: 90.10820588216167 - { 0.017499999999999627, -0.017499999999999925, -5.0, -5.0, 5.0, 14.3348622149031, 0.12965107123860298, 90.10820588216167 }
Step: 90.17516679027904 - { -10.620600236039609, -0.6357296538352967, -5.811452830073449E-8, 3.283494187655833E-8, -5.550100823370485E-9, -13.594306194319776, -2.0724018663133643, -90.17516679027904 }
Included-change: { -5.550100823370485E-9, 5.811452830073449E-8, -3.283494187655833E-8 }
Nonzero Included-change! -3.283494187655833E-8
Numer/slack: [3.7192471324942744E-15, 0.34999999999999926, 10.0, 10.0, 999.856651377851, 999.9987034892877, 999.0989179411783, 0.34999999999999626, 7.216449660063518E-16, 10.0, 1000.143348622149, 1000.0012965107123, 1000.9010820588217]
Denom/chang: [-106.20600236039608, -6.3572965383529665, -5.811452830073449E-8, 3.283494187655833E-8, -0.13594306194319777, -0.020724018663133642, -0.9017516679027904, 106.20600236039608, 6.3572965383529665, 5.550100823370485E-9, 0.13594306194319777, 0.020724018663133642, 0.9017516679027904]
Looking for the largest possible step length (smallest positive scalar) among these: [-3.5019180176592085E-17, -0.05505484884785262, -1.720740113083498E8, 3.045536074829858E8, -7354.966388763772, -48253.12695110648, -1107.9535015053414, 0.00329548229122039, 1.1351444150083862E-16, 1.801769070192704E9, 7357.075339674541, 48253.252072660696, 1109.9520163756656]).
Best so far: 0.00329548229122039 @ 7 (8).
Best so far: 0.0 @ 8 (9).
Do nothing because step length 0.0 and size 90.17516679027904 but add constraint 9
Post iteration
    Solution: { 0.017499999999999627, -0.017499999999999925, -5.0, -5.0, 5.0, 14.3348622149031, 0.12965107123860298, 90.10820588216167 }
    L: { -7.405560205833242, 19427.507950747615, 66960.90811736064, 0.0, 0.0, 0.0, 0.0, 1529.2042526292025, 0.0, 0.0, 0.0, 0.0, 0.0, 39515.77989595583, -13448.285149577112, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -1.8189894035458565E-12, -1.3322676295501878E-15, -8.837331907929347E-16 }
I-slack: { 3.7192471324942744E-15, 0.34999999999999926, 10.0, 10.0, 0.0, 999.856651377851, 999.9987034892877, 999.0989179411783, 0.34999999999999626, 7.216449660063518E-16, 0.0, 0.0, 10.0, 1000.143348622149, 1000.0012965107123, 1000.9010820588217 }

NeedsAnotherIteration?
Suggested to include: 9

PerformIteration 2
Last Incl/Excl: 9/-1 => [4, 9, 10, 11] / [0, 1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -4.9, -0.175, -4.9, -4.9]
Relative error 1.497083830364881E-13 in solution for L=[-141.83351395309612, -31775.511418073864, -83899.09191510903, 137573.28613865116, 325527.5009086822, -56945.23948260608, -134444.97764773417]
Current: 90.10820588216167 - { 0.017499999999999627, -0.017499999999999925, -5.0, -5.0, 5.0, 14.3348622149031, 0.12965107123860298, 90.10820588216167 }
Step: 90.02430679024656 - { 0.9545650268718604, -1.4856278896339253E-4, 1.4645047841099768E-8, 1.1060386899686137E-6, 5.811452830073449E-8, -0.15151081959348822, 3.0479000705687835, -90.02430679024656 }
Included-change: { 5.811452830073449E-8, 0.0014856278896339253, -1.4645047841099768E-8, -1.1060386899686137E-6 }
Nonzero Included-change! -1.1060386899686137E-6
Numer/slack: [3.7192471324942744E-15, 0.34999999999999926, 10.0, 10.0, 999.856651377851, 999.9987034892877, 999.0989179411783, 0.34999999999999626, 10.0, 1000.143348622149, 1000.0012965107123, 1000.9010820588217]
Denom/chang: [9.545650268718603, -0.0014856278896339253, 1.4645047841099768E-8, 1.1060386899686137E-6, -0.0015151081959348823, 0.030479000705687837, -0.9002430679024656, -9.545650268718603, -5.811452830073449E-8, 0.0015151081959348823, -0.030479000705687837, 0.9002430679024656]
Looking for the largest possible step length (smallest positive scalar) among these: [3.8962742482640125E-16, -235.59062295622562, 6.828246727836603E8, 9041275.039197564, -659924.2575946199, 32809.43207900753, -1109.810176343866, -0.036665914856210194, -1.720740113083498E8, 660113.4831859454, -32809.51715467814, 1111.8120402647316]).
Best so far: 0.0 @ 0 (0).
Do nothing because step length 0.0 and size 90.02430679024656 but add constraint 0
Post iteration
    Solution: { 0.017499999999999627, -0.017499999999999925, -5.0, -5.0, 5.0, 14.3348622149031, 0.12965107123860298, 90.10820588216167 }
    L: { -141.83351395309612, -31775.511418073864, -83899.09191510903, 0.0, 0.0, 0.0, 0.0, 137573.28613865116, 0.0, 0.0, 0.0, 0.0, 325527.5009086822, -56945.23948260608, -134444.97764773417, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -1.8189894035458565E-12, -1.3322676295501878E-15, -8.837331907929347E-16 }
I-slack: { 3.7192471324942744E-15, 0.34999999999999926, 10.0, 10.0, 0.0, 999.856651377851, 999.9987034892877, 999.0989179411783, 0.34999999999999626, 7.216449660063518E-16, 0.0, 0.0, 10.0, 1000.143348622149, 1000.0012965107123, 1000.9010820588217 }

NeedsAnotherIteration?
Suggested to include: 0

PerformIteration 3
Last Incl/Excl: 0/-1 => [0, 4, 9, 10, 11] / [1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -0.175, -4.9, -0.175, -4.9, -4.9]
Relative error 2.986523424149677E-10 in solution for L=[-152.29996672733043, 10044.204861201037, -1.4807078228006077E8, 1.3986996815658432E7, -7043181.733375618, 2.5497954312283692E8, -4.441119047964697E7, 1.534123358166751E7]
Current: 90.10820588216167 - { 0.017499999999999627, -0.017499999999999925, -5.0, -5.0, 5.0, 14.3348622149031, 0.12965107123860298, 90.10820588216167 }
Step: 57.9625763978991 - { 0.015282554626465217, -0.31628601074218754, 5.727052688602186E-4, -1.3509988784754512E-4, -2.374291419986463E-4, 0.8951344578299434, -1.1340715573587066, 57.9625763978991 }
Included-change: { 0.15282554626465217, -2.374291419986463E-4, 3.162860107421875, -5.727052688602186E-4, 1.3509988784754512E-4 }
Nonzero Included-change! -5.727052688602186E-4
Numer/slack: [0.34999999999999926, 10.0, 10.0, 999.856651377851, 999.9987034892877, 999.0989179411783, 0.34999999999999626, 10.0, 1000.143348622149, 1000.0012965107123, 1000.9010820588217]
Denom/chang: [-3.162860107421875, 5.727052688602186E-4, -1.3509988784754512E-4, 0.008951344578299434, -0.011340715573587066, 0.579625763978991, -0.15282554626465217, 2.374291419986463E-4, -0.008951344578299434, 0.011340715573587066, -0.579625763978991]
Looking for the largest possible step length (smallest positive scalar) among these: [-0.11065933620608116, 17460.98830189167, -74019.30645038436, 111699.04617478178, -88177.74301811436, 1723.696529779155, -2.2901930243644717, 42117.828990246766, -111731.07457473781, 88177.97166518762, -1726.8057154462515]).
Performing update with step length 1.0 adding constraint -1
Post iteration
    Solution: { 0.032782554626464844, -0.33378601074218744, -4.99942729473114, -5.0001350998878475, 4.999762570858001, 15.229996672733044, -1.0044204861201036, 148.07078228006077 }
    L: { -152.29996672733043, 10044.204861201037, -1.4807078228006077E8, 1.3986996815658432E7, 0.0, 0.0, 0.0, -7043181.733375618, 0.0, 0.0, 0.0, 0.0, 2.5497954312283692E8, -4.441119047964697E7, 1.534123358166751E7, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -8490.230526693826, 17.02983532979058, -6.031849148912964 }
Nonzero E-slack! 8490.230526693826

NeedsAnotherIteration?
Looking for the largest negative lagrange multiplier among these: { 1.3986996815658432E7, -7043181.733375618, 2.5497954312283692E8, -4.441119047964697E7, 1.534123358166751E7 }.
Best so far: -7043181.733375618 @ 1 (4).
Best so far: -4.441119047964697E7 @ 3 (10).
Suggest to exclude: -4.441119047964697E7 @ 3 (10).
Suggested to exclude: 10

PerformIteration 4
Last Incl/Excl: 0/10 => [0, 4, 9, 11] / [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15]
RHS=[-14282.604556658522, 3.8265671270954633, -0.023684026454070646, -0.175, -4.9, -0.175, -4.9]
Relative error 6.268198938112675E-10 in solution for L=[-159.6696916973601, 46602.3705637353, -155341.23547168117, 32064.75697624206, 116329.19016573977, 883879.8711359896, -140933.52207593017]
Current: 148.07078228006077 - { 0.032782554626464844, -0.33378601074218744, -4.99942729473114, -5.0001350998878475, 4.999762570858001, 15.229996672733044, -1.0044204861201036, 148.07078228006077 }
Step: 147.9154410445891 - { -0.018381979316473007, 0.3572553396224975, 5.677112203557044, 1.5192199498414993E-4, 2.204615157097578E-4, 0.7369724970029665, -3.6558165702534255, -147.9154410445891 }
Included-change: { -0.18381979316473007, 2.204615157097578E-4, -3.572553396224975, -1.5192199498414993E-4 }
Nonzero Included-change! -3.572553396224975
Numer/slack: [3.5128601074218744, 9.99942729473114, 10.000135099887848, 999.8477000332726, 1000.0100442048612, 998.5192921771994, 0.5028255462646485, 5.727052688602186E-4, 9.999762570858001, 1000.1522999667274, 999.9899557951388, 1001.4807078228006]
Denom/chang: [3.572553396224975, 5.677112203557044, 1.5192199498414993E-4, 0.007369724970029665, -0.03655816570253426, -1.4791544104458911, 0.18381979316473007, -5.677112203557044, -2.204615157097578E-4, -0.007369724970029665, 0.03655816570253426, 1.4791544104458911]
Looking for the largest possible step length (smallest positive scalar) among these: [0.9832911416058394, 1.7613580525087933, 65824.14284996169, 135669.60830958228, -27353.94473403624, -675.0608896039432, 2.735426569727676, -1.0087968113460661E-4, -45358.31362069967, -135710.93955799294, 27353.395242306106, 677.0629900098829]).
Best so far: 0.9832911416058394 @ 0 (1).
Performing update with step length 0.9832911416058394 adding constraint 1
Post iteration
    Solution: { 0.014707717199395173, 0.017500000000000016, 0.5828268449289089, -4.9999857163359644, 4.999979348713464, 15.954655200643197, -4.599152534986139, 2.626839394195514 }
    L: { -159.6696916973601, 46602.3705637353, -155341.23547168117, 32064.75697624206, 0.0, 0.0, 0.0, 116329.19016573977, 0.0, 0.0, 0.0, 0.0, 883879.8711359896, 0.0, -140933.52207593017, 0.0, 0.0, 0.0, 0.0 }
E-slack: { -779.1086677436015, -2.6165986314646386, -0.19567660080522742 }
Nonzero E-slack! 779.1086677436015

NeedsAnotherIteration?
Suggested to include: 1

PerformIteration 5
Last Incl/Excl: 1/10 => [0, 1, 4, 9, 11] / [2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15]
